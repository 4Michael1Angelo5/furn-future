{"version":3,"sources":["shared/icons/tree.png","shared/icons/cart.png","components/cart/processPayment.js","courier/config/wooConfig.js","shared/icons/deal.png","shared/icons/conversation.png","shared/icons/chair.png","shared/icons/compass.png","shared/icons/shopping-cart.png","components/cart/CheckOut.js","courier/postOrders.js","components/context/AppContext.js","components/menuComponent.js","components/homeComponent.js","components/aboutComponent.js","courier/config/client-config.js","courier/ApolloClient.js","courier/graphQL-apollo.js","courier/getProducts.js","courier/getCustomProducts.js","courier/getTableLegProducts.js","courier/getMountingHardware.js","courier/getFinishes.js","components/modalComponent.js","components/customOrderComponent.js","components/storeComponent.js","components/contactComponent.js","components/checkoutComponent.js","shared/galleryContent.js","components/slideComponent.js","components/galleryComponent.js","courier/getPosts.js","components/blogComponent.js","components/mainComponent.js","components/stripeWrapperComponent.js","App.js","serviceWorker.js","index.js","components/cart/functions.js","components/cart/addToCart.js"],"names":["module","exports","getToken_srcId","token_id","a","myHeaders","Headers","append","urlencoded","URLSearchParams","fetchedData","fetch","method","headers","body","redirect","then","response","json","result","console","log","id","catch","error","processOrder","token","order_id","Promise","resolve","reject","formData","FormData","request","XMLHttpRequest","open","send","onload","e","readyState","status","success","JSON","parse","responseText","message","alert","siteUrl","consumerKey","consumerSecret","orderData","payment_method","payment_method_title","set_paid","billing","first_name","last_name","address_1","address_2","city","state","postcode","country","email","phone","shipping","line_items","ConfirmOrder","props","step2","Fragment","style","display","justifyContent","striped","scope","className","onClick","backStep","PaymentFormHeader","stepTitleDisplay","choice_lineDisplay","paymentMethodDisplay","toggleChoice","paymentMethod","FirstStepOrSecondStep","step1","ShippingForm","updateShippingAddress","updateBillingAdress","nextStep","PaymentForm","getNameOnCard","setBillingAdressToShippingAddress","ConfirmOrderModal","isOpen","modal","toggle","color","StepProgress","step3","this","React","Component","handleInputChange","form","target","name","value","validateForm","regExTests","shippingOrderData","Object","values","billingOrderData","splice","push","newOrderData","regExTestResults","map","regEx","index","test","replace","RegExTestResultIndexes","array","val","i","indexes","length","getAllIndexes","setState","first_nameState","last_nameState","address_1State","cityState","stateState","postcodeState","emailState","phoneState","adress1State","formIsValid","validate","bind","input","preventDefault","type","placeholder","onChange","onBlur","valid","invalid","BillingAddressForm","updateBillingAddress","useContext","AppContext","cart","totalPrice","keys","totalProductsPrice","useState","collapse","setCollapse","handleBillingInfo","param","base","fontSize","fontFamily","letterSpacing","check","defaultChecked","label","billingAddressSameAsShipping","CartInfo","setCart","productsCount","totalProductsCount","handleRemoveProductClick","product","process","browser","updatedCart","removeItemFromCart","updateOrder","newLine_items","products","productId","qty","position","top","right","item","key","padding","src","image","sourceUrl","width","role","pop","setPop","tabIndex","stockQuantity","existingCart","localStorage","getItem","updateCart","newCart","addFirstProduct","handleAddToCartClick","placement","trigger","price","TotalPrice","cartIcon","left","CheckOutPage","String","innerHTML","handleSubmit","stripe","createToken","name_onCard","undefined","token_src","postOrder","order","res","paymentMessage","paymentProcessing","orientation","handleOrientation","handlePop","assign","blankBillingData","billingData","shippingData","newBillingData","window","innerWidth","innerHeight","toggleOnBlur","newPop","addEventListener","grid","columnOrder","isClickable","injectStripe","WooCommerceAPI","require","wooConfig","WooCommerce","url","wpAPI","version","data","postAsync","createContext","AppProvider","useEffect","cartData","Provider","children","HamburgerMenu","aboutPage","createRef","galleryPage","event","customBurgerIcon","tree","alt","downBtnScroll","Home","isUserInteractingWithBlog","ref","homePage","isUserInteractingWithStore","Navbar","handleView","About","clientConfig","graphqlUrl","client","ApolloClient","uri","PRODUCTS_QUERY","gql","getInitialProps","query","loading","nodes","getProducts","getAsync","getCustomOrderProps","productCategories","getTableLegProducts","getMountingHardware","getFinishes","GalleryModal","title","galleryImages","activeImg","setImg","Modal","center","ModalHeader","ModalBody","ModalFooter","Button","SelectSeries","series","node","renderSlabs","description","SelectSlab","activeProductsfromSeries","edges","activeSeries","renderProduct","SelectCut","activeProduct","statsGrid","useType","productTags","forEach","element","uses","join","setModal","activeImage","height","renderImage","borderRight","parseInt","transition","transitionProperty","duration","stepPrecision","attributes","options","FormGroup","Label","Input","SelectFinish","useDefaultFinish","defaultFinish","finishTypes","activeFinish","activeFinishImage","defaultFinishImage","defaultFinishDescription","activeFinishDescription","setDropdown","handleFinishSelect","backgroundImage","surfaceArea","Math","round","calculateSurfaceArea","Collapse","renderHTML","SelectHardware","tableLegs","mountingHardware","activeHardwareProduct","gallery","viewHardwareProduct","gallery_grid","img","handleNavigation","renderHardwareProduct","CustomOrderStep","selectSeries","selectSlab","selectCut","selectFinish","useDefaultFinishImage","renderFinishImage","selectHardware","CustomOrderNav","slabTooltipOpen","setSlabTooltip","toggleSlabTooltip","seriesTooltipOpen","setSeriesTooltip","toggleSeriesTooltip","handleStep","transform","translateAmount","Tooltip","CustomOrderComponent","getNavTargetPostion","handleResize","targets__Xposition","slabs","cut","destination","navElements","document","getElementsByClassName","sliderWidth","getBoundingClientRect","targetXs","el","x","setStep","step","finish","hardware","removeEventListener","ProductView","conversation","deal","chair","activeFrame","Number","defaultView","collapseDescription","collapseDetails","handleFocus","stockStatus","ShopCatalouge","catLoading","viewProduct","renderProductView","activeItemId","StoreOptions","margin","marginBottom","shoppingCart","alignContent","compass","Store","viewCustom","viewCatalouge","swiped","inventory","backToCatalouge","_onTouchStart","_onTouchMove","_onTouchEnd","_swipe","minDistance","productID","handleScrollableFocus","touch","touches","clientX","changedTouches","swiping","absX","onSwiped","revertView","getCustomProducts","onTouchStart","onTouchMove","onTouchEnd","viewCatalog","Contact","row","Form","for","scroll","CheckOut","GALLERY","Frame","observer","lozad","isClicked","handleClick","observe","activeFrameIsOpen","data-background-image","backgroundColor","ActiveFrame","ActiveFrameDesciption","returnView","Slide","activeItem","checkActiveFrame","newArray","content","findIndex","arg","isActive","items","altText","caption","Slider","cssModule","AwsSliderStyles","Gallery","animating","CarouselItem","onExiting","onExited","getPosts","posts","BlogLandingPage","toggleBlog","BlogHeader","BlogPosts","post","Date","date","toLocaleDateString","featuredImage","mediaItemUrl","togglePost","ViewPost","comments","BlogContent","viewPost","activePost","viewBlog","marginTop","Blog","Main","isUserInteractingWithGalery","storeRef","windowHeight","currentIndex","postionOfStore","view","storePage","getElementById","scrollIntoView","behavior","StripeWrapperComponent","App","apiKey","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","getFloatVal","string","floatValue","parseFloat","toFixed","productPrice","newProduct","createNewProduct","setItem","stringify","qtyToBeAdded","newQty","updatedProducts","getUpdatedProducts","addPrice","total","reduce","existingProductsInCart","productExitsIndex","isProductInCart","updatedProduct","filter","indexOf","removeItem","priceToBeDeductedFromTotal","CartSuccess","itemsInCartNumber","show","animate","shake","ViewCartButton","checkoutPage","AddToCartButton","setMessage","checkIfAvailable","setAnimate","toggleAnimate","indexOfProductInCart","setTimeout"],"mappings":"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","file":"static/js/main.374329ac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tree.e15c5526.png\";","module.exports = __webpack_public_path__ + \"static/media/cart.46ea0b0a.png\";"," \r\n \r\n//  takes token id as a parameter\r\n//  gets token source id from stripe server\r\n\r\n  export const  getToken_srcId = async (token_id)  => {\r\n\r\n\tvar myHeaders = new Headers();\r\n\tmyHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n\t\r\n\tvar urlencoded = new URLSearchParams();\r\n\turlencoded.append(\"type\", \"card\");\r\n\turlencoded.append(\"token\", token_id);\r\n\turlencoded.append(\"key\", \"pk_test_7LEEquBX9joVxcuVTXsZW0RN002UkUsXj3\");\r\n\t\r\n\tvar requestOptions = {\r\n\t  method: 'POST',\r\n\t  headers: myHeaders,\r\n\t  body: urlencoded,\r\n\t  redirect: 'follow'\r\n\t};\r\n\t\r\n\tconst fetchedData = fetch(\"https://api.stripe.com/v1/sources\", requestOptions)\r\n\r\n\t.then(response => { return  response.json()})\r\n\t.then(result => {\r\n\t\tconsole.log(result) \r\n\t\tlet src_id = result.id\r\n\t\t// sendTokenToServer(src_id,order_id) \r\n\t\t\r\n\t\t\r\n\t\treturn result\r\n\t\r\n\t})\r\n\t\r\n\t.catch(error => {return  error });\t \r\n\r\n\treturn await fetchedData\r\n}\r\n\r\n\r\nexport const processOrder = async (token,order_id) => {\r\n\r\n return new Promise( (resolve,reject)=>{\r\n\tvar url = 'https://cedarcreekforestry.com/wp-json/wc/v2/stripe-payment';\r\n\r\n\tvar formData = new FormData();\t\r\n\r\n\tformData.append(\"order_id\", order_id);\r\n\tformData.append(\"payment_token\", token);\r\n\tformData.append(\"payment_method\", 'stripe');\r\n\r\n\tvar request = new XMLHttpRequest();\r\n\trequest.open(\"POST\", url);\r\n\trequest.send(formData);\r\n\r\n\trequest.onload = (e) => {\r\n\t\tif (request.readyState === 4) {\r\n\t\t  if (request.status === 200) {\r\n\r\n\t\t\tlet success = JSON.parse(request.responseText)\r\n\t\t\t\t \r\n\t\t\t\tresolve(success.message)\r\n\t\t\t\t \r\n\t\t  } else {\r\n\t\t\t\t \r\n\t\t\t\tconsole.log(order_id);\t\t\t\t\r\n\t\t\t\tconsole.log(\"Error\", request)\r\n\t\t\t\talert( request.responseText );\r\n\t\t\t\treject( ()=> { return request.responseText})\r\n\t\t\t\t// return request.responseText ; \r\n\t\t  }\r\n\t\t}\r\n\t};\r\n} )\r\n}\r\n\r\n\r\n \r\n\r\n\r\n\r\n  ","const wooConfig = {\r\n    siteUrl: 'https://cedarcreekforestry.com',\r\n    consumerKey: 'ck_847c341c5e4d89e3c4e8803b6bbbcd957d330347',\r\n    consumerSecret: 'cs_d6da0688b0f0bd86b41d3ed00fe1a9522d87f6d9'\r\n\r\n};\r\n\r\nmodule.exports = wooConfig;","module.exports = __webpack_public_path__ + \"static/media/deal.ace149c1.png\";","module.exports = __webpack_public_path__ + \"static/media/conversation.20555920.png\";","module.exports = __webpack_public_path__ + \"static/media/chair.4d82827b.png\";","module.exports = __webpack_public_path__ + \"static/media/compass.31a1c94a.png\";","module.exports = __webpack_public_path__ + \"static/media/shopping-cart.e9656904.png\";","import React, { useState, useCallback, useEffect } from 'react'\r\nimport { useContext } from 'react';\r\nimport { AppContext } from \"../context/AppContext\";\r\nimport {injectStripe, CardNumberElement, CardExpiryElement, CardCvcElement} from 'react-stripe-elements';\r\nimport {Form, FormGroup, Input, Modal , ModalBody , ModalHeader ,\r\n        ModalFooter , Button ,Label, CustomInput, Collapse , Table, Popover, PopoverBody,\r\n        FormFeedback} from 'reactstrap';\r\nimport postOrder from '../../courier/postOrders' ; \r\nimport {getToken_srcId,processOrder} from './processPayment'\r\nimport {addFirstProduct, updateCart , removeItemFromCart } from './functions'\r\nimport cartIcon from '../../shared/icons/cart.png'\r\nimport '../../step_progress_theme.css';\r\nimport  '../../styles/paymentMethodSelection.scss'\r\nimport '../../buttons.scss'\r\n\r\n\r\n\r\nconst orderData = {\r\n  payment_method: \"stripe\",\r\n  payment_method_title: \"Direct Bank Transfer\",\r\n  set_paid: false,\r\n  billing: {\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    address_1: \"\",\r\n    address_2: \"\",\r\n    city: \"\",\r\n    state: \"\",\r\n    postcode: \"\",\r\n    country: \"US\",\r\n    email: \"\",\r\n    phone: \"\"\r\n  },\r\n  shipping: {\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    address_1: \"\",\r\n    address_2: \"\",\r\n    city: \"\",\r\n    state: \"\",\r\n    postcode: \"\",\r\n    country: \"US\"\r\n  },\r\n  line_items: [\r\n    // {\r\n    //   // product_id: 175,\r\n    //   // quantity: 1\r\n    // }\r\n  ]\r\n};\r\n\r\nconst ConfirmOrder = (props) =>{\r\n\r\nlet billing = props.billing ;\r\n\r\n  // console.log(props)\r\n\r\n  if (props.step2 ){\r\n\r\n  return (\r\n    <React.Fragment>\r\n   \r\n        <h3 style ={{\r\n          display: \"flex\",\r\n          justifyContent: \"flex-end\"\r\n        }}>\r\n          Review Order\r\n        </h3>\r\n\r\n      \r\n    <Table striped>\r\n      <tbody>\r\n        <tr>\r\n          <th scope=\"row\">Recipient</th>\r\n          <td>{`${billing.first_name}  `  }</td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"row\">Adress</th>\r\n          <td>{`${billing.address_1}  `  }</td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"row\">City</th>\r\n          <td>{`${billing.city}  `  }</td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"row\">State</th>\r\n          <td>{`${billing.state}  `  }</td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"row\">Zip</th>\r\n          <td>{`${billing.postcode}  `  }</td>\r\n        </tr>\r\n      </tbody>\r\n    </Table>\r\n\r\n      <div className = \"row \">\r\n        <div className = \"col d-flex justify-content-start\">\r\n          <div className = 'brk-btn store-back-btn' onClick = {props.backStep}>\r\n            BACK\r\n          </div> \r\n        </div>\r\n      </div>  \r\n    </React.Fragment>\r\n  );}\r\n  else  return null\r\n}\r\n\r\nconst PaymentFormHeader = (props) => {\r\n   \r\n  var stepTitleDisplay = props.step2 ? 'none' : ' flex'\r\n  var choice_lineDisplay = props.step2 ? 'd-none' : '' ; \r\n  var paymentMethodDisplay  =  props.step2 ? 'd-none' : ' container payment_method_selection_container'\r\n  return(\r\n\r\n <React.Fragment>\r\n      <h3 \r\n    style = {{\r\n      display: stepTitleDisplay ,\r\n      justifyContent:\"center\"\r\n      }}>\r\n        Payment\r\n  </h3>\r\n  <div className = {paymentMethodDisplay}>\r\n    <div className = \"row d-flex justify-content-between\">\r\n      <label className = 'col-6 text-center payment_method_choice' onClick={props.toggleChoice}>Credit Card</label>\r\n      <label className = \"col-6 text-center payment_method_choice\" onClick={props.toggleChoice}>PayPal</label>\r\n    </div>\r\n\r\n  </div>\r\n  <div className = {` container ${ choice_lineDisplay}`}>\r\n    <div className = 'row'>\r\n      <div className = {`choice_line ${props.paymentMethod } `} />\r\n    </div>\r\n  </div>\r\n </React.Fragment>\r\n    \r\n  )\r\n}\r\n\r\n\r\nconst FirstStepOrSecondStep = (props) =>{\r\n\r\n \r\n  // var stepTitleDisplay = props.step2 ? 'none' : ' flex'\r\n  // var choice_lineDisplay = props.step2 ? 'd-none' : '' ; \r\n  // var paymentMethodDisplay  =  props.step2 ? 'd-none' : ' container payment_method_selection_container'\r\n  \r\n  if (false === props.step1){ \r\n    return( \r\n      <React.Fragment>\r\n        <ShippingForm\r\n          shipping = {props.shipping}\r\n          billing= {props.billing}\r\n          updateShippingAddress = {props.updateShippingAddress}\r\n          updateBillingAdress= {props.updateBillingAdress} \r\n          nextStep = {props.nextStep}/>\r\n      </React.Fragment> \r\n    );\r\n  }\r\n  else\r\n    return(\r\n      <React.Fragment>\r\n\r\n        <PaymentFormHeader\r\n        step2 = {props.step2}\r\n        paymentMethod = {props.paymentMethod }\r\n        toggleChoice = {props.toggleChoice}\r\n        />\r\n        {props.paymentMethod === 'isCard'?\r\n           <PaymentForm \r\n           shipping = {props.shipping}\r\n           billing = {props.billing}\r\n           updateBillingAdress = {props.updateBillingAdress}\r\n           step2 = {props.step2}\r\n           getNameOnCard = {props.getNameOnCard }\r\n           backStep = {props.backStep}\r\n           nextStep = {props.nextStep}\r\n           setBillingAdressToShippingAddress = {props.setBillingAdressToShippingAddress}\r\n           />\r\n           :\r\n           <div>\r\n             PayPal Coming Soon!\r\n           </div>\r\n        }\r\n     \r\n        \r\n      </React.Fragment> \r\n  );\r\n}\r\n\r\nconst ConfirmOrderModal = (props) =>{\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={props.modal} toggle={props.toggle} >\r\n        <ModalHeader toggle={props.toggle}>Confirm Order</ModalHeader>\r\n        <ModalBody>\r\n          {props.message}\r\n        </ModalBody>\r\n        <ModalFooter>\r\n        <Button color=\"secondary\" onClick={props.toggle}>{' '} Ok {' '}</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nclass StepProgress extends React.Component{\r\nconstructor(props){\r\n  super(props);\r\n  this.state ={ \r\n    step1:false,\r\n    step2:false,\r\n    step3:false\r\n    }\r\n  }\r\n  render(){\r\n    return (\r\n      <ul className=\"steps mt-2\">\r\n        <li className= {`step step--active ${this.props.step1?\"step--complete\":\"step--incomplete \"}`}>\r\n          <span className=\"step__icon\"> 1 </span>\r\n          {/* <span class=\"step__label\">Step 1</span> */}\r\n        </li>\r\n        <li className= {`step ${this.props.step2?  \" step--complete \":\" step--incomplete \" }`\r\n                      + `${this.props.step1? \"step--active\" : ''}` }>\r\n          <span className=\"step__icon\">2</span>\r\n          {/* <span className=\"step__label\">Step 2</span> */}\r\n        </li>\r\n        <li className= {`step  ${this.props.step3?\" step--complete \":\" step--incomplete \"}`\r\n                    + `${this.props.step2? \" step--active \" : ''}` }>\r\n          <span className=\"step__icon\">3</span>\r\n          {/* <span className=\"step__label\">Step 3</span> */}\r\n        </li>\r\n      </ul>\r\n\r\n    );\r\n  }  \r\n}\r\n\r\nclass ShippingForm extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      emailState : '',\r\n      phoneState : '',\r\n      postcodeState: '',\r\n      adress1State : '',\r\n      cityState : '',\r\n      stateState: '',\r\n      first_nameState: '',\r\n      last_nameState: '',\r\n      formIsValid : false\r\n    }\r\n    \r\n    this.validate = this.validate.bind(this);  \r\n    this.validateForm = this.validateForm.bind(this);\r\n  }\r\n\r\n      \r\n    handleInputChange = (e,form) => {\r\n      \r\n      const { name, value } = e.target;\r\n        \r\n         \r\n      if (form === 'shipping'){\r\n\r\n        this.props.updateShippingAddress( name , value)\r\n\r\n      }\r\n      else this.props.updateBillingAdress( name, value )\r\n\r\n    }\r\n\r\n    // validate input fields onBlur\r\n\r\n    validate(e,input) {\r\n\r\n      e.preventDefault()\r\n\r\n      if (input === 'email'){\r\n\r\n        const emailRex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n   \r\n        if (emailRex.test(e.target.value)) {\r\n          this.setState( { emailState : 'has-success'} )\r\n        } \r\n        else {\r\n        this.setState( { emailState : 'has-danger'} )\r\n        }\r\n      }\r\n      else if (input === 'phone'){\r\n\r\n        const phoneRex = /^\\D?(\\d{3})\\D?\\D?(\\d{3})\\D?(\\d{4})$/ ; \r\n        \r\n        if (phoneRex.test(e.target.value)){\r\n          this.setState({phoneState : 'has-success'})\r\n        }\r\n        else{\r\n          this.setState({phoneState:'has-danger'})\r\n        }\r\n\r\n      }\r\n      else if (input === 'postcode'){\r\n\r\n        const postcodeRex = /^[0-9]{5}(?:-[0-9]{4})?$/;\r\n\r\n        if (postcodeRex.test(e.target.value)){\r\n          this.setState({postcodeState: 'has-success'})\r\n        }\r\n        else{\r\n          this.setState({postcodeState:'has-danger'})\r\n        } \r\n\r\n      }\r\n      else if (input === 'address_1'){\r\n\r\n        const adress1RegEx = /^(?:[Pp][Oo]\\s[Bb][Oo][Xx]|[0-9]+)\\s(?:[0-9A-Za-z\\.'#]|[^\\S\\r\\n])+/ ;\r\n\r\n        if (adress1RegEx.test(e.target.value)){\r\n        this.setState({address_1State : 'has-success'})\r\n        }\r\n        else{\r\n          this.setState({address_1State:'has-danger'})\r\n        }\r\n\r\n      }\r\n      else if (input === 'city'){\r\n\r\n        const cityRegEx =  /^[a-zA-Z]+(?:[\\s-][a-zA-Z]+)*$/ ;\r\n\r\n        if (cityRegEx.test(e.target.value)){\r\n        this.setState({cityState : 'has-success'})\r\n        }\r\n        else{\r\n          this.setState({cityState:'has-danger'})\r\n        }\r\n\r\n      }  \r\n      else if (input === 'state'){\r\n\r\n        const stateRegEx = /^[A-Za-z]+$/ ; \r\n\r\n        if (stateRegEx.test(e.target.value)){\r\n        this.setState({stateState : 'has-success'})\r\n        }\r\n        else{\r\n          this.setState({stateState:'has-danger'})\r\n        }\r\n\r\n      }\r\n      else if (input === 'first_name'){\r\n\r\n        const firstNameRegEx = /^[a-z ,.'-]+$/i;\r\n\r\n        if (firstNameRegEx.test(e.target.value)){\r\n          this.setState({first_nameState : 'has-success'})\r\n        }\r\n        else{\r\n          this.setState({first_nameState:'has-danger'})\r\n        }\r\n\r\n      }\r\n      else if (input === 'last_name'){\r\n        \r\n        const lastNameRegEx = /^[a-z ,.'-]+$/i;\r\n\r\n        if (lastNameRegEx.test(e.target.value)){\r\n        this.setState({last_nameState : 'has-success'})\r\n        }\r\n        else{\r\n          this.setState({last_nameState:'has-danger'})\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n// validate form when user clicks next button \r\n\r\n validateForm = () =>{\r\n  const billing = this.props.billing ; \r\n\r\n  const shipping = this.props.shipping ; \r\n\r\n  const firstNameRegEx = /^[a-z ,.'-]+$/i;\r\n\r\n  const lastNameRegEx = /^[a-z ,.'-]+$/i ;\r\n\r\n  const adress1RegEx = /^(?:[Pp][Oo]\\s[Bb][Oo][Xx]|[0-9]+)\\s(?:[0-9A-Za-z\\.'#]|[^\\S\\r\\n])+/ ; \r\n\r\n  const cityRegEx =  /^[a-zA-Z]+(?:[\\s-][a-zA-Z]+)*$/ ;\r\n\r\n  const stateRegEx = /^[A-Za-z]+$/ ; \r\n\r\n  const postCodeRegEx = /^[0-9]{5}(?:-[0-9]{4})?$/ ; \r\n\r\n  const emailRegEx = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n  const phoneRegEx = /^\\D?(\\d{3})\\D?\\D?(\\d{3})\\D?(\\d{4})$/ ; \r\n\r\n\r\n\r\n  const regExTests = [firstNameRegEx , lastNameRegEx , adress1RegEx , cityRegEx , stateRegEx , postCodeRegEx , emailRegEx , phoneRegEx ]\r\n\r\n  // const newOrderData = Object.values(billing)\r\n\r\n \r\n\r\n  const shippingOrderData = Object.values(shipping); \r\n\r\n  const billingOrderData = [billing.email, billing.phone]\r\n\r\n\r\n\r\n  // remove address line 2 and country from test\r\n  // only supports shipments made in US atm\r\n\r\n  shippingOrderData.splice(3,1)\r\n  shippingOrderData.splice(6,1)\r\n  shippingOrderData.push(...billingOrderData)\r\n\r\n  const newOrderData = shippingOrderData\r\n\r\n  console.log(newOrderData)\r\n\r\n  \r\n  // create an array of boolean values containing the results of each regex test\r\n\r\n  let regExTestResults = []\r\n\r\n  regExTests.map((regEx,index)=>{\r\n\r\n    regExTestResults.push(regEx.test(newOrderData[index].replace(/['\"]+/g, '')))\r\n\r\n  })\r\n\r\n  //  function that gets all indexes of matching values in an array\r\n const getAllIndexes = (array, val) => {\r\n  var indexes = [], i;\r\n  for(i = 0; i < array.length; i++)\r\n      if (array[i] === val)\r\n          indexes.push(i);\r\n  return indexes;\r\n}\r\n\r\n//  retrieve all indexes where regex tests fail\r\n\r\nlet RegExTestResultIndexes = getAllIndexes(regExTestResults,false)\r\n\r\n//  if the regex test results contain no false items\r\n if (RegExTestResultIndexes.length === 0 ){\r\n  console.log('no erroes')\r\n  //  allow user to move to next step\r\n return  this.props.nextStep()\r\n}\r\nelse{\r\n\r\n  //  loop through all regex test results and set the apporpriate state \r\n  //  to notify user of errors\r\n\r\n  for(var i = 0 ; i < RegExTestResultIndexes.length; i++){\r\n\r\n    if (RegExTestResultIndexes[i] === 0){\r\n      this.setState({first_nameState:'has-danger'})\r\n      console.log('name test failed') \r\n    }\r\n    else if (RegExTestResultIndexes[i] === 1){\r\n      this.setState({last_nameState:'has-danger'})\r\n      console.log('last name test failed')\r\n    }\r\n    else if (RegExTestResultIndexes[i] === 2){\r\n      this.setState({address_1State:'has-danger'})\r\n      console.log('adress line 1 test failed')\r\n    }\r\n    else if (RegExTestResultIndexes[i] === 3){\r\n      this.setState({cityState:'has-danger'})\r\n      console.log('city test failed')\r\n    }\r\n    else if (RegExTestResultIndexes[i] === 4){\r\n      this.setState({stateState:'has-danger'})\r\n      console.log('state test failed')\r\n    }\r\n    else if (RegExTestResultIndexes[i] === 5){\r\n      this.setState({postcodeState:'has-danger'})\r\n      console.log('postcode test failed')\r\n    }\r\n    else if (RegExTestResultIndexes[i] === 6){\r\n      this.setState({emailState:'has-danger'})\r\n      console.log('email test failed')\r\n    }\r\n    else if(RegExTestResultIndexes[i] === 7){\r\n      this.setState({phoneState:'has-danger'})\r\n      console.log('phone test failed')\r\n    }\r\n    \r\n  }\r\n  return false\r\n}\r\n\r\n\r\n\r\n\r\n }\r\n\r\n\r\n\r\n  \r\n  render(){\r\n    \r\n    const billing = this.props.billing ; \r\n\r\n    const shipping = this.props.shipping ; \r\n\r\n    return(\r\n\r\n      <React.Fragment>\r\n\r\n        <h3>Shipping Address</h3>\r\n        \r\n        <Form>\r\n          <FormGroup className = \"billing-adress-form\">\r\n        \r\n          <div className = \"form-row ml-0 mr-0 \">\r\n\r\n              <Input className = \"col-6\" type=\"name\" name=\"first_name\"  placeholder=\"First Name\"\r\n                value = {shipping.first_name}\r\n                onChange = {e=>this.handleInputChange(e,'shipping')} \r\n                onBlur = {e=>this.validate(e,'first_name')}\r\n                valid = {this.state.first_nameState === 'has-success'}\r\n                invalid = {this.state.first_nameState === 'has-danger'}\r\n              />\r\n                {\r\n                  this.state.first_nameState === 'has-danger'\r\n                  ?\r\n                  <FormFeedback>\r\n                    Oops! Looks like there's a problem with your First Name. Please enter a valid first name.<b/>\r\n                    For example: The Most Awesomest Guy in the World\r\n                  </FormFeedback>\r\n                  :\r\n                  null\r\n                }\r\n\r\n              <Input  className = \"col-6\" type=\"name\" name=\"last_name\"  placeholder=\"Last Name\"\r\n                value = {shipping.last_name}\r\n                onChange = {e=>this.handleInputChange(e,'shipping')} \r\n                onBlur = {e=>this.validate(e,'last_name')}\r\n                valid = {this.state.last_nameState === 'has-success'}\r\n                invalid = {this.state.last_nameState === 'has-danger'}\r\n              />\r\n                {\r\n                  this.state.last_nameState === 'has-danger'\r\n                  ?\r\n                  <FormFeedback>\r\n                    Oops! Looks like there's a problem with your Last Name. Please enter a valid last name.<b/>\r\n                    For example: Dr. Martin Luther King Jr. Sir Bob Crudite\r\n                  </FormFeedback>\r\n                  :\r\n                  null\r\n                }\r\n\r\n          </div>\r\n\r\n          <Input type=\"text\" name=\"address_1\" placeholder=\"Adress Line 1\"\r\n            value = {shipping.address_1}\r\n            onChange = {e=>this.handleInputChange(e,'shipping')} \r\n            onBlur = {e=>this.validate(e,'address_1')}\r\n            valid = {this.state.address_1State === 'has-success'}\r\n            invalid = {this.state.address_1State === 'has-danger'}\r\n          />\r\n             {\r\n              this.state.address_1State === 'has-danger'\r\n              ?\r\n              <FormFeedback>\r\n                Oops Looks like there's a problem with the Address you entered. Please enter a valid Address. <b/>\r\n                For Example: 123 Fake ST\r\n              </FormFeedback>\r\n              :\r\n              null\r\n              }\r\n\r\n          <Input type=\"text\" name=\"address_2\" placeholder=\"Adress Line 2\" \r\n            value = {shipping.address_2}\r\n            onChange = {e=>this.handleInputChange(e,'shipping')} \r\n          />\r\n\r\n          <div className = \"form-row mr-0 ml-0\">\r\n            \r\n              <Input className = \"col-10\" type=\"text\" name=\"city\"  placeholder=\"City\"\r\n                value = {shipping.city} \r\n                onChange = {e=>this.handleInputChange(e,'shipping')} \r\n                onBlur = {e=>this.validate(e,'city')}\r\n                valid = { this.state.cityState == 'has-success'}\r\n                invalid = {this.state.cityState === 'has-danger'}\r\n              />\r\n                {\r\n                  this.state.cityState === 'has-danger'\r\n                  ?\r\n                  <FormFeedback>\r\n                    Oops Looks like there's a problem with the City you entered. Please enter a valid City. <b/>\r\n                    For Example: San Francisco or Tacoma\r\n                  </FormFeedback>\r\n                  :\r\n                  null\r\n                }\r\n\r\n              <Input className = \" col-2 \" type=\"text\" name=\"state\"  placeholder=\"State\" \r\n                value = {shipping.state}\r\n                onChange = {e=>this.handleInputChange(e,'shipping')}  \r\n                onBlur = { e=>this.validate(e,'state')}\r\n                valid = {this.state.stateState=== 'has-success'}\r\n                invalid = {this.state.stateState === 'has-danger'}\r\n              />   \r\n                {\r\n                  this.state.stateState === 'has-danger'\r\n                  ?\r\n                  <FormFeedback>\r\n                    Oops Looks like there's a problem with the State you entered. Please enter a valid State. <b/>\r\n                    For Example : WA or Washington\r\n                  </FormFeedback>\r\n                  :\r\n                  null\r\n                }\r\n\r\n          </div>  \r\n\r\n          <Input type=\"text\" name=\"postcode\" placeholder=\"ZIP Code\" \r\n            value = {shipping.postcode}\r\n            onChange = {e=>this.handleInputChange(e,'shipping')}  \r\n            onBlur = {e=>this.validate(e,'postcode')}\r\n            valid = {this.state.postcodeState === 'has-success'}\r\n            invalid={ this.state.postcodeState === 'has-danger'}\r\n          />\r\n            {\r\n              this.state.postcodeState === 'has-danger'\r\n              ?\r\n              <FormFeedback>\r\n                Oops! Looks like there's a problem with your zip code. Please enter a valid zip code.<b/>\r\n                For example: 12345 or 12345-6789\r\n              </FormFeedback>\r\n              :\r\n              null\r\n            }\r\n\r\n                \r\n          <Input type=\"email\" name=\"email\"  placeholder=\"Email\" \r\n            value = {billing.email}\r\n            onChange = {e=>this.handleInputChange(e,'billing')} \r\n            onBlur = {e => this.validate(e,'email')}\r\n            valid = {this.state.emailState === 'has-success'}\r\n            invalid={ this.state.emailState === 'has-danger'}\r\n          />\r\n            {\r\n              this.state.emailState === 'has-danger'\r\n              ?\r\n              <FormFeedback>\r\n                Oops! Looks like there's a problem with your email. Please enter a valid email.\r\n              </FormFeedback>\r\n              :\r\n              null\r\n            }\r\n\r\n        \r\n          <Input type=\"phone\" name=\"phone\" placeholder=\"Phone\"\r\n            value = {billing.phone}\r\n            onChange = {e=>this.handleInputChange(e,'billing')}  \r\n            onBlur = {e=>this.validate(e,'phone') }\r\n            valid = {this.state.phoneState === 'has-success'}\r\n            invalid = {this.state.phoneState === 'has-danger'}\r\n          />\r\n            {\r\n              this.state.phoneState === 'has-danger'\r\n              ?\r\n              <FormFeedback>\r\n                Oops! Looks like there's a problem with your phone number. Please enter a valid phone number.<br/>\r\n                For example: 1234567890, 123 456 7890, 123-456-7890, or (123)-456-7890\r\n              </FormFeedback>\r\n              :\r\n              null\r\n            }\r\n\r\n          </FormGroup>\r\n\r\n        \r\n       <div className = \"row\">\r\n         <div className =\"col d-flex justify-content-end\">\r\n           {/* if form is valid allow user to move to next step otherwise dissallow */}\r\n         <div className = \" brk-btn store-back-btn\" onClick = {()=>this.validateForm()}>\r\n            NEXT\r\n        </div>\r\n         </div>\r\n       </div>\r\n       \r\n    </Form>\r\n\r\n      </React.Fragment>\r\n    \r\n);\r\n\r\n  }\r\n\r\n}\r\n\r\nclass BillingAddressForm extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      emailState : '',\r\n      phoneState : '',\r\n      postcodeState: '',\r\n      adress1State : '',\r\n      cityState : '',\r\n      stateState: '',\r\n      first_nameState: '',\r\n      last_nameState: '',\r\n      formIsValid : false\r\n    }\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.validate = this.validate.bind(this);\r\n    this.validateForm = this.validateForm.bind(this);\r\n  }\r\n\r\n  handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    this.props.updateBillingAddress( name, value )\r\n\r\n  }\r\n\r\n  componentDidMount(){ \r\n    this.props.setBillingAdressToShippingAddress('true');  \r\n  }\r\n\r\n  validate(e,input) {\r\n\r\n    e.preventDefault()\r\n\r\n    if (input === 'email'){\r\n\r\n      const emailRex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n \r\n      if (emailRex.test(e.target.value)) {\r\n        this.setState( { emailState : 'has-success'} )\r\n      } \r\n      else {\r\n      this.setState( { emailState : 'has-danger'} )\r\n      }\r\n    }\r\n    else if (input === 'phone'){\r\n\r\n      const phoneRex = /^\\D?(\\d{3})\\D?\\D?(\\d{3})\\D?(\\d{4})$/ ; \r\n      \r\n      if (phoneRex.test(e.target.value)){\r\n        this.setState({phoneState : 'has-success'})\r\n      }\r\n      else{\r\n        this.setState({phoneState:'has-danger'})\r\n      }\r\n\r\n    }\r\n    else if (input === 'postcode'){\r\n\r\n      const postcodeRex = /^[0-9]{5}(?:-[0-9]{4})?$/;\r\n\r\n      if (postcodeRex.test(e.target.value)){\r\n        this.setState({postcodeState: 'has-success'})\r\n      }\r\n      else{\r\n        this.setState({postcodeState:'has-danger'})\r\n      } \r\n\r\n    }\r\n    else if (input === 'address_1'){\r\n\r\n      const adress1RegEx = /^(?:[Pp][Oo]\\s[Bb][Oo][Xx]|[0-9]+)\\s(?:[0-9A-Za-z\\.'#]|[^\\S\\r\\n])+/ ;\r\n\r\n      if (adress1RegEx.test(e.target.value)){\r\n      this.setState({address_1State : 'has-success'})\r\n      }\r\n      else{\r\n        this.setState({address_1State:'has-danger'})\r\n      }\r\n\r\n    }\r\n    else if (input === 'city'){\r\n\r\n      const cityRegEx =  /^[a-zA-Z]+(?:[\\s-][a-zA-Z]+)*$/ ;\r\n\r\n      if (cityRegEx.test(e.target.value)){\r\n      this.setState({cityState : 'has-success'})\r\n      }\r\n      else{\r\n        this.setState({cityState:'has-danger'})\r\n      }\r\n\r\n    }  \r\n    else if (input === 'state'){\r\n\r\n      const stateRegEx = /^[A-Za-z]+$/ ; \r\n\r\n      if (stateRegEx.test(e.target.value)){\r\n      this.setState({stateState : 'has-success'})\r\n      }\r\n      else{\r\n        this.setState({stateState:'has-danger'})\r\n      }\r\n\r\n    }\r\n    else if (input === 'first_name'){\r\n\r\n      const firstNameRegEx = /^[a-z ,.'-]+$/i;\r\n\r\n      if (firstNameRegEx.test(e.target.value)){\r\n        this.setState({first_nameState : 'has-success'})\r\n      }\r\n      else{\r\n        this.setState({first_nameState:'has-danger'})\r\n      }\r\n\r\n    }\r\n    else if (input === 'last_name'){\r\n      \r\n      const lastNameRegEx = /^[a-z ,.'-]+$/i;\r\n\r\n      if (lastNameRegEx.test(e.target.value)){\r\n      this.setState({last_nameState : 'has-success'})\r\n      }\r\n      else{\r\n        this.setState({last_nameState:'has-danger'})\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n  validateForm = () =>{\r\n\r\n    const billing = this.props.billing ; \r\n    \r\n    const firstNameRegEx = /^[a-z ,.'-]+$/i;\r\n    \r\n    const lastNameRegEx = /^[a-z ,.'-]+$/i ;\r\n    \r\n    const adress1RegEx = /^(?:[Pp][Oo]\\s[Bb][Oo][Xx]|[0-9]+)\\s(?:[0-9A-Za-z\\.'#]|[^\\S\\r\\n])+/ ; \r\n    \r\n    const cityRegEx =  /^[a-zA-Z]+(?:[\\s-][a-zA-Z]+)*$/ ;\r\n    \r\n    const stateRegEx = /^[A-Za-z]+$/ ; \r\n    \r\n    const postCodeRegEx = /^[0-9]{5}(?:-[0-9]{4})?$/ ; \r\n    \r\n    const emailRegEx = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    \r\n    const phoneRegEx = /^\\D?(\\d{3})\\D?\\D?(\\d{3})\\D?(\\d{4})$/ ; \r\n    \r\n    \r\n    \r\n    const regExTests = [firstNameRegEx , lastNameRegEx , adress1RegEx , cityRegEx , stateRegEx , postCodeRegEx , emailRegEx , phoneRegEx ]\r\n    \r\n    // const newOrderData = Object.values(billing)\r\n    \r\n    const billingOrderData = Object.values(billing)\r\n    \r\n    // remove address line 2 and country from test\r\n    // only supports shipments made in US at the moment\r\n    \r\n    billingOrderData.splice(3,1);\r\n    billingOrderData.splice(6,1);\r\n    \r\n    const newOrderData = billingOrderData;\r\n    \r\n    console.log(newOrderData);\r\n    \r\n    \r\n    // create an array of boolean values containing the results of each regex test\r\n    \r\n    let regExTestResults = []\r\n    \r\n    regExTests.map((regEx,index)=>{\r\n    \r\n      regExTestResults.push(regEx.test(newOrderData[index].replace(/['\"]+/g, '')))\r\n    \r\n    })\r\n    \r\n    //  function that gets all indexes of matching values in an array\r\n    const getAllIndexes = (array, val) => {\r\n    var indexes = [], i;\r\n    for(i = 0; i < array.length; i++)\r\n        if (array[i] === val)\r\n            indexes.push(i);\r\n    return indexes;\r\n    }\r\n    \r\n    //  retrieve all indexes where regex tests fail\r\n    \r\n    let RegExTestResultIndexes = getAllIndexes(regExTestResults,false)\r\n    \r\n    //  if the regex test results contain no false items\r\n    if (RegExTestResultIndexes.length === 0 ){\r\n    console.log('no erroes')\r\n    //  allow user to move to next step\r\n    return  this.props.nextStep()\r\n    }\r\n    else{\r\n    \r\n    //  loop through all regex test results and set the apporpriate state \r\n    //  to notify user of errors\r\n    \r\n    for(var i = 0 ; i < RegExTestResultIndexes.length; i++){\r\n    \r\n      if (RegExTestResultIndexes[i] === 0){\r\n        this.setState({first_nameState:'has-danger'})\r\n        console.log('name test failed') \r\n      }\r\n      else if (RegExTestResultIndexes[i] === 1){\r\n        this.setState({last_nameState:'has-danger'})\r\n        console.log('last name test failed')\r\n      }\r\n      else if (RegExTestResultIndexes[i] === 2){\r\n        this.setState({address_1State:'has-danger'})\r\n        console.log('adress line 1 test failed')\r\n      }\r\n      else if (RegExTestResultIndexes[i] === 3){\r\n        this.setState({cityState:'has-danger'})\r\n        console.log('city test failed')\r\n      }\r\n      else if (RegExTestResultIndexes[i] === 4){\r\n        this.setState({stateState:'has-danger'})\r\n        console.log('state test failed')\r\n      }\r\n      else if (RegExTestResultIndexes[i] === 5){\r\n        this.setState({postcodeState:'has-danger'})\r\n        console.log('postcode test failed')\r\n      }\r\n      else if (RegExTestResultIndexes[i] === 6){\r\n        this.setState({emailState:'has-danger'})\r\n        console.log('email test failed')\r\n      }\r\n      else if(RegExTestResultIndexes[i] === 7){\r\n        this.setState({phoneState:'has-danger'})\r\n        console.log('phone test failed')\r\n      }\r\n      \r\n    }\r\n    return false\r\n    }\r\n    }\r\n\r\n\r\n  render(){\r\n\r\n    const billing = this.props.billing\r\n\r\n    return(\r\n      <React.Fragment>\r\n          \r\n        \r\n        <Form>\r\n          <FormGroup className = \"billing-adress-form\">\r\n        \r\n          <div className = \"form-row ml-0 mr-0 \">\r\n\r\n              <Input className = \"col-6\" type=\"name\" name=\"first_name\"  placeholder=\"First Name\"\r\n                value = {billing.first_name}\r\n                onChange = {this.handleInputChange} \r\n                onBlur = {e=>this.validate(e,'first_name')}\r\n                valid = {this.state.first_nameState === 'has-success'}\r\n                invalid = {this.state.first_nameState === 'has-danger'}\r\n              />\r\n                {\r\n                  this.state.first_nameState === 'has-danger'\r\n                  ?\r\n                  <FormFeedback>\r\n                    Oops! Looks like there's a problem with your First Name. Please enter a valid first name.<b/>\r\n                    For example: The Most Awesomest Guy in the World\r\n                  </FormFeedback>\r\n                  :\r\n                  null\r\n                }\r\n\r\n              <Input  className = \"col-6\" type=\"name\" name=\"last_name\"  placeholder=\"Last Name\"\r\n                value = {billing.last_name}\r\n                onChange = {this.handleInputChange}\r\n                onBlur = {e=>this.validate(e,'last_name')}\r\n                valid = {this.state.last_nameState === 'has-success'}\r\n                invalid = {this.state.last_nameState === 'has-danger'}\r\n              />\r\n                {\r\n                  this.state.last_nameState === 'has-danger'\r\n                  ?\r\n                  <FormFeedback>\r\n                    Oops! Looks like there's a problem with your Last Name. Please enter a valid last name.<b/>\r\n                    For example: Dr. Martin Luther King Jr. Sir Bob Crudite\r\n                  </FormFeedback>\r\n                  :\r\n                  null\r\n                }\r\n\r\n          </div>\r\n\r\n          <Input type=\"text\" name=\"address_1\" placeholder=\"Adress Line 1\"\r\n            value = {billing.address_1}\r\n            onChange = {this.handleInputChange}\r\n            onBlur = {e=>this.validate(e,'address_1')}\r\n            valid = {this.state.address_1State === 'has-success'}\r\n            invalid = {this.state.address_1State === 'has-danger'}\r\n          />\r\n             {\r\n              this.state.address_1State === 'has-danger'\r\n              ?\r\n              <FormFeedback>\r\n                Oops Looks like there's a problem with the Address you entered. Please enter a valid Address. <b/>\r\n                For Example: 123 Fake ST\r\n              </FormFeedback>\r\n              :\r\n              null\r\n              }\r\n\r\n          <Input type=\"text\" name=\"address_2\" placeholder=\"Adress Line 2\" \r\n            value = {billing.address_2}\r\n            onChange = {this.handleInputChange} \r\n          />\r\n\r\n          <div className = \"form-row mr-0 ml-0\">\r\n            \r\n              <Input className = \"col-10\" type=\"text\" name=\"city\"  placeholder=\"City\"\r\n                value = {billing.city} \r\n                onChange = {this.handleInputChange} \r\n                onBlur = {e=>this.validate(e,'city')}\r\n                valid = { this.state.cityState == 'has-success'}\r\n                invalid = {this.state.cityState === 'has-danger'}\r\n              />\r\n                {\r\n                  this.state.cityState === 'has-danger'\r\n                  ?\r\n                  <FormFeedback>\r\n                    Oops Looks like there's a problem with the City you entered. Please enter a valid City. <b/>\r\n                    For Example: San Francisco or Tacoma\r\n                  </FormFeedback>\r\n                  :\r\n                  null\r\n                }\r\n\r\n              <Input className = \" col-2 \" type=\"text\" name=\"state\"  placeholder=\"State\" \r\n                value = {billing.state}\r\n                onChange = {this.handleInputChange} \r\n                onBlur = { e=>this.validate(e,'state')}\r\n                valid = {this.state.stateState=== 'has-success'}\r\n                invalid = {this.state.stateState === 'has-danger'}\r\n              />   \r\n                {\r\n                  this.state.stateState === 'has-danger'\r\n                  ?\r\n                  <FormFeedback>\r\n                    Oops Looks like there's a problem with the State you entered. Please enter a valid State. <b/>\r\n                    For Example : WA or Washington\r\n                  </FormFeedback>\r\n                  :\r\n                  null\r\n                }\r\n\r\n          </div>  \r\n\r\n          <Input type=\"text\" name=\"postcode\" placeholder=\"ZIP Code\" \r\n            value = {billing.postcode}\r\n            onChange = {this.handleInputChange} \r\n            onBlur = {e=>this.validate(e,'postcode')}\r\n            valid = {this.state.postcodeState === 'has-success'}\r\n            invalid={ this.state.postcodeState === 'has-danger'}\r\n          />\r\n            {\r\n              this.state.postcodeState === 'has-danger'\r\n              ?\r\n              <FormFeedback>\r\n                Oops! Looks like there's a problem with your zip code. Please enter a valid zip code.<b/>\r\n                For example: 12345 or 12345-6789\r\n              </FormFeedback>\r\n              :\r\n              null\r\n            }\r\n\r\n                \r\n          <Input type=\"email\" name=\"email\"  placeholder=\"Email\" \r\n            value = {billing.email}\r\n            onChange = {this.handleInputChange} \r\n            onBlur = {e => this.validate(e,'email')}\r\n            valid = {this.state.emailState === 'has-success'}\r\n            invalid={ this.state.emailState === 'has-danger'}\r\n          />\r\n            {\r\n              this.state.emailState === 'has-danger'\r\n              ?\r\n              <FormFeedback>\r\n                Oops! Looks like there's a problem with your email. Please enter a valid email.\r\n              </FormFeedback>\r\n              :\r\n              null\r\n            }\r\n\r\n        \r\n          <Input type=\"phone\" name=\"phone\" placeholder=\"Phone\"\r\n            value = {billing.phone}\r\n            onChange = {this.handleInputChange} \r\n            onBlur = {e=>this.validate(e,'phone') }\r\n            valid = {this.state.phoneState === 'has-success'}\r\n            invalid = {this.state.phoneState === 'has-danger'}\r\n          />\r\n            {\r\n              this.state.phoneState === 'has-danger'\r\n              ?\r\n              <FormFeedback>\r\n                Oops! Looks like there's a problem with your phone number. Please enter a valid phone number.<br/>\r\n                For example: 1234567890, 123 456 7890, 123-456-7890, or (123)-456-7890\r\n              </FormFeedback>\r\n              :\r\n              null\r\n            }\r\n\r\n          </FormGroup>\r\n       \r\n    </Form>\r\n\r\n    <div className = \"row\">\r\n        <div className = \"col d-flex justify-content-start\">\r\n          <div className = 'brk-btn store-back-btn' onClick = {this.props.backStep}>\r\n            BACK\r\n          </div> \r\n        </div>\r\n      <div className = \"col d-flex justify-content-end\">\r\n    \r\n          <div className = 'brk-btn store-back-btn' onClick = {this.validateForm} type = \"submit\"> \r\n            NEXT\r\n          </div>                             \r\n      </div>\r\n    </div>  \r\n\r\n     \r\n\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n}\r\n\r\n\r\nconst PaymentForm = (props) =>{\r\n  \r\n  const [ cart ] = useContext( AppContext );\r\n  const totalPrice = ( null !== cart && Object.keys( cart ).length ) ? cart.totalProductsPrice : '';\r\n      \r\n  const handleInputChange = (e) => {\r\n   \r\n    const { name, value } = e.target;\r\n\r\n    props.getNameOnCard(  name, value )\r\n    props.getNameOnCard(\"amount\" , totalPrice)    \r\n\r\n  }\r\n\r\n  const [collapse, setCollapse] = useState(false);\r\n\r\n  const handleBillingInfo = (param) => {\r\n\r\n    if (param === 'true'){\r\n\r\n      props.setBillingAdressToShippingAddress('true')\r\n      setCollapse(false)\r\n\r\n    }\r\n    else{\r\n\r\n      props.setBillingAdressToShippingAddress('false')\r\n      setCollapse(true)\r\n\r\n    }\r\n\r\n  }\r\n \r\n\r\n    const createOptions = () => {\r\n      return {\r\n        style: {\r\n          base: {\r\n            fontSize: '16px',\r\n            color: '#424770',\r\n            fontFamily: 'Open Sans, sans-serif',\r\n            letterSpacing: '0.025em',\r\n            '::placeholder': {\r\n              color: '#aab7c4',\r\n            },\r\n          },\r\n          invalid: {\r\n            color: '#c23d4b',\r\n          },\r\n        }\r\n      }\r\n    };\r\n    \r\n    const display = props.step2 ? 'none' : ' block'\r\n \r\n    return (\r\n    \r\n      \r\n      <div style = {{\r\n        display:display\r\n      }}>\r\n          <input\r\n            className = \"form-control mb-2\"\r\n            type=\"text\"\r\n            name=\"name_onCard\"\r\n            placeholder=\"Name\"\r\n            onChange={e=>handleInputChange(e)}\r\n            />\r\n\r\n          <CardNumberElement \r\n            {...createOptions()}\r\n            className= \"form-control mb-2\"/>\r\n\r\n          <div className = \"form-row ml-0 mr-0 \">\r\n\r\n          <CardExpiryElement className = \"col-6 form-control mb-2\"/>\r\n\r\n          <CardCvcElement className = \"col-6 form-control mb-2\"/>\r\n          </div>\r\n\r\n          <FormGroup>\r\n          \r\n            <div className = \"form-row d-flex justify-content-between mr-1 ml-1\" >\r\n\r\n              <FormGroup>\r\n            \r\n              <h3>Billing Address</h3>\r\n              \r\n              </FormGroup>\r\n\r\n              <FormGroup check>\r\n\r\n                  <CustomInput type=\"radio\" id=\"exampleCustomRadio\" name=\"customRadio\"  defaultChecked  label=\"Same as Shipping\" onClick = {()=>handleBillingInfo('true')}/>\r\n                \r\n                  <CustomInput type=\"radio\" id=\"different-billing-address\" name=\"customRadio\" label=\"Different Address\" onClick = {()=>handleBillingInfo('false')}/>          \r\n              \r\n              </FormGroup> \r\n\r\n            </div>\r\n\r\n        </FormGroup>\r\n\r\n          <Collapse isOpen = {collapse}>\r\n              <BillingAddressForm \r\n                setBillingAdressToShippingAddress = {props.setBillingAdressToShippingAddress}\r\n                updateBillingAddress = {props.updateBillingAdress}\r\n                billing = {props.billing}\r\n                shipping = {props.shipping}\r\n                billingAddressSameAsShipping = {!collapse}\r\n                nextStep = {props.nextStep}\r\n                backStep = {props.backStep}\r\n                />\r\n          </Collapse>\r\n\r\n       \r\n       {  collapse\r\n         ?\r\n         null\r\n         :\r\n         <React.Fragment>\r\n            <div className = \"row\">\r\n\r\n                <div className = \"col d-flex justify-content-start\">\r\n                  \r\n                  <div className = 'brk-btn store-back-btn' onClick = {props.backStep}>\r\n                    BACK\r\n                  </div> \r\n                </div>\r\n\r\n                <div className = \"col d-flex justify-content-end\">\r\n\r\n                    <div className = 'brk-btn store-back-btn' onClick = {props.nextStep}> \r\n                      NEXT\r\n                    </div>                             \r\n                </div>\r\n\r\n            </div> \r\n         </React.Fragment>\r\n       }\r\n\r\n      </div>\r\n    );\r\n  \r\n}\r\n\r\n\r\nconst CartInfo = (props) => {\r\n\r\n\r\n\r\n  // const {orientation}  = props ; \r\n  \r\n  const [ cart, setCart ] = useContext( AppContext );\r\n  \r\n  const productsCount = ( null !== cart && Object.keys( cart ).length ) ? cart.totalProductsCount : '';\r\n  \r\n  const handleAddToCartClick = (e,product) => {\r\n    e.preventDefault()\r\n    \r\n      if (process.browser) {\r\n\r\n          let existingCart = localStorage.getItem('cedarcreekforestry-cart');\r\n\r\n          // if cart has item(s) already, then update the exisiting cart\r\n          if (existingCart) {\r\n\r\n              existingCart = JSON.parse(existingCart);\r\n              \r\n              const qtyToBeAdded = 1;\r\n              \r\n              const updatedCart = updateCart( existingCart,product,qtyToBeAdded) ;\r\n              \r\n              setCart( updatedCart)\r\n\r\n              props.updateOrder() \r\n\r\n          } else{\r\n\r\n              //  I dont think this else statement in neccessary becuase \r\n              // cart will always exist by the time this function is available\r\n\r\n              // if no item in the cart, then create an empty array and add item.\r\n              \r\n              const newCart = addFirstProduct(product);\r\n\r\n              setCart( newCart)\r\n\r\n              // update order data when user adds item to cart \r\n\r\n              props.updateOrder() \r\n          }\r\n      }\r\n    }\r\n\r\n    const handleRemoveProductClick = (e,product) =>{\r\n\r\n       e.preventDefault()\r\n      \r\n      if (process.browser){\r\n\r\n        let updatedCart = removeItemFromCart(e,product)\r\n              \r\n              setCart( updatedCart)\r\n\r\n              // update order data line items when \r\n              // user removes item from cart\r\n\r\n              props.updateOrder()\r\n\r\n        \r\n        \r\n      }\r\n    }\r\n \r\n  // this section runs everytime when component updates \r\n  //  if the cart exisits \r\n  if (null !== cart && Object.keys(cart).length ){\r\n\r\n    let newLine_items = [] ; \r\n\r\n    // create line items in to add to Order Data from cart \r\n    for (var i = 0 ; i < Object.keys(cart.products).length ; i++ ){\r\n\r\n      newLine_items.push( {\"product_id\" : cart.products[i].productId, \"quantity\": cart.products[i].qty })  \r\n      \r\n    } \r\n\r\n    // if the products in the orderData does not reflect \r\n    // what is currrently in the users cart then update the order. \r\n\r\n    if(props.line_items.length !== newLine_items.length){\r\n   \r\n      props.updateOrder()\r\n       \r\n    } \r\n \r\n  } \r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\r\n        <div  onClick = {props.collapse} className={props.isOpen?\"circle-plus closed opened\":\"circle-plus closed \" }\r\n          style = {{\r\n            position: 'absolute',\r\n            top:'-6px',\r\n            right: '15px'\r\n          }}>\r\n            <div className=\"circle\">\r\n                <div className=\"horizontal\"></div>\r\n                <div className=\"vertical\"></div>\r\n            </div>\r\n        </div>\r\n        <Collapse isOpen = {props.isOpen}>\r\n\r\n          \r\n        {productsCount?   \r\n                cart.products.map( (item,index) => {\r\n                    return(\r\n                    \r\n                        <div key ={index} className = \"row mr-0 ml-0 cart-inventory-container\"\r\n                          style = {{padding: \"0px 0px\"}}>\r\n                            <div className = \"col-5\">\r\n                            <img src = {item.image.sourceUrl} width = \"100%\"/>\r\n                            <div className = \"cart-controls row d-flex justify-content-between align-items-center\">                             \r\n                              \r\n                              <Button role = 'button' className = \"col-4 \"  \r\n                                   onClick = { \r\n                                              // if popover is open \r\n                                              props.pop[index]                                              \r\n                                              ? \r\n                                              // then close popover and remove item\r\n                                              e=>{props.setPop(e,index,'focus') ;  handleRemoveProductClick(e,item.productId) }                                              \r\n                                              :\r\n                                              // otherwise just remove item\r\n                                              e => handleRemoveProductClick(e,item.productId)\r\n                                              }>                                                \r\n                              <div className = 'minus-btn'/> \r\n                              </Button>\r\n\r\n                              <div  id = {`k${index}`} tabIndex=\"0\" className = \"col-4 text-center align-content-center p-0\">\r\n\r\n                               <span className = \"\">{ item.qty }</span> \r\n\r\n                              </div>\r\n                              \r\n                              <Button   role = 'button'  className = {`${item.stockQuantity === item.qty ? 'add-to-cart-not-allowed' : ''}  col-4 d-flex justify-content-end`}\r\n                              // if the qty of the product in the cart is equal to the max quantity in stock or if the amount is null (sterling forgot to set qty)\r\n                              // dissalow adding it to cart and toggle a popover message\r\n                              // onClick = {item.stockQuantity === item.qty || item.stockQuantity === null  ? e => props.setPop(e,index) :  (e) =>handleAddToCartClick(e,item)}   \r\n                                onClick = {item.stockQuantity === item.qty   ? e => props.setPop(e,index) :  (e) =>handleAddToCartClick(e,item)}   \r\n                                >\r\n                              <div className = \"plus-btn\"/>                                 \r\n                              </Button>                            \r\n                           \r\n                            </div>\r\n\r\n                            <Popover  placement= \"top\" isOpen = {props.pop[index]} trigger = 'legacy click' toggle = {e=>props.setPop(e,index,'focus')} target = {`k${index}`}>\r\n                              <PopoverBody>\r\n                                <p>\r\n                                  this is the maximum amount available\r\n                                </p>\r\n                              </PopoverBody>\r\n                            </Popover>                                       \r\n\r\n                            \r\n                            </div>\r\n                            <div className = \"col-5\">\r\n                                <p>\r\n                                    {item.name}\r\n                                </p>\r\n                            </div>\r\n                            <div className = \"col-2\"\r\n                              style = {{padding: \"0px 0px\"}}>\r\n                                ${item.price}\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    );\r\n                  \r\n                })\r\n                \r\n            :\r\n            <div></div>\r\n        }\r\n        </Collapse>\r\n          \r\n          \r\n           \r\n\t\t</React.Fragment>\r\n\r\n\t)\r\n};\r\n\r\n\r\nconst TotalPrice = (props)=>{\r\n\r\n    const [ cart ] = useContext( AppContext );\r\n    const totalPrice = ( null !== cart && Object.keys( cart ).length ) ? cart.totalProductsPrice : '';\r\n        \r\n        \r\n     return(\r\n        <React.Fragment>\r\n            {totalPrice?\r\n                   \r\n            <div  className = \"row justify-content-end mr-0 ml-0 pr-3 cart-inventory-container\">\r\n\r\n            <img src = {cartIcon} width = \"25px\"\r\n            style = {{ \r\n              position: 'absolute',\r\n              left: '25px'\r\n              }}\r\n            \r\n            ></img>   \r\n                Total ${totalPrice}\r\n            </div>\r\n\r\n            :\r\n            null\r\n         }\r\n        </React.Fragment>\r\n     );\r\n      \r\n    \r\n};\r\n\r\nclass CheckOutPage extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n            this.state={\r\n                orientation: '',\r\n                name_onCard: '',\r\n                orderData: orderData,\r\n                modal:false,\r\n                collapse: false , \r\n                step1: false,\r\n                step2: false,\r\n                step3: false,\r\n                paymentMethod: 'isCard',\r\n                paymentProcessing:true,\r\n                paymentMessage:'',\r\n                pop:[]\r\n                                    \r\n            }\r\n            this.backStep = this.backStep.bind(this);\r\n            this.handleOrientation = this.handleOrientation.bind(this);\r\n            this.nextStep = this.nextStep.bind(this);\r\n            this.getNameOnCard = this.getNameOnCard.bind(this);\r\n            this.updateShippingAddress = this.updateShippingAddress.bind(this);\r\n            this.updateBillingAdress = this.updateBillingAdress.bind(this);\r\n            this.setBillingAdressToShippingAddress = this.setBillingAdressToShippingAddress.bind(this);\r\n            this.updateOrder = this.updateOrder.bind(this);\r\n            this.toggle = this.toggle.bind(this);\r\n            this.collapse = this.collapse.bind(this);\r\n            this.toggleChoice = this.toggleChoice.bind(this);\r\n            this.handlePop = this.handlePop.bind(this);\r\n            this.setPop = this.setPop.bind(this);\r\n    \r\n        }\r\n\r\n        // switches payment method to either Card or PayPal\r\n\r\n        toggleChoice = (e) => {\r\n          let paymentMethod = String(e.target.innerHTML ) \r\n    \r\n          switch (paymentMethod){\r\n              case 'Credit Card' :\r\n              \r\n                this.setState({paymentMethod:'isCard'});\r\n                break\r\n              case 'PayPal' :\r\n               \r\n                this.setState({paymentMethod:'isPaypal'});\r\n                break\r\n\r\n          }\r\n                 \r\n        }\r\n\r\n        // open and closes confirm order Modal\r\n\r\n        toggle(){\r\n          this.setState({modal:!this.state.modal})\r\n          \r\n        }\r\n\r\n        // opens or collapses order summary \r\n\r\n        collapse(){\r\n          this.setState({\r\n            collapse:!this.state.collapse\r\n          })\r\n        }\r\n\r\n        // when user clicks purchase button\r\n\r\n        handleSubmit = async(e) =>{\r\n          e.preventDefault();\r\n          this.setState({step3:true})\r\n\r\n          try {\r\n            // create stripe payment token\r\n            let {token} = await this.props.stripe.createToken({ name: this.state.name_onCard});\r\n            console.log(token)\r\n\r\n            if (token !== undefined ){\r\n              \r\n            // create stripe payment source and retrive source id\r\n            let token_src = await getToken_srcId(token.id)\r\n            console.log(token_src.id)\r\n\r\n            // create new order in woocommerse\r\n            let order =  await postOrder(this.state.orderData);\r\n            let order_id = order.id\r\n            console.log(order_id)\r\n             \r\n            // send token and orderId to cedarcreek server and process payment\r\n            processOrder(token_src.id,order_id)\r\n            .then(res=>{\r\n              console.log(res)\r\n              this.setState({paymentMessage:res})\r\n              this.setState({paymentProcessing:false});\r\n              this.setState({modal:true})\r\n            }); \r\n            }else{\r\n              this.setState({ paymentMessage:'looks like there was a problem with the card information you entered. Please insure the card information is correct'});\r\n              this.setState({modal:true});\r\n            }\r\n          } catch (e) {\r\n\r\n            console.log(e)\r\n            throw e ; \r\n          }\r\n          \r\n        }  \r\n        \r\n        \r\n        updateOrder(){\r\n\r\n          console.log('state of order data before updateOrder invoked', this.state.orderData) \r\n\r\n          let newLine_items = [] ; \r\n\r\n          let existingCart = localStorage.getItem('cedarcreekforestry-cart');\r\n           \r\n\r\n          if (existingCart){\r\n             \r\n            existingCart = JSON.parse(existingCart);\r\n\r\n            // cart exists update order to reflect products in cart\r\n\r\n            for (var i = 0 ; i < Object.keys(existingCart.products).length ; i++ ){ \r\n                  newLine_items.push( {\"product_id\" : existingCart.products[i].productId, \"quantity\": existingCart.products[i].qty })  \r\n                } \r\n\r\n                var newOrderData = {...this.state.orderData}\r\n                newOrderData.line_items = newLine_items\r\n                this.setState({orderData:newOrderData})\r\n\r\n          }\r\n          else {\r\n\r\n            // cart does not exist remove line ittems from order data\r\n\r\n            var newOrderData = {...this.state.orderData}\r\n            newOrderData.line_items = [] ; \r\n            this.setState({orderData:newOrderData}) \r\n\r\n          } \r\n\r\n        }\r\n\r\n        updateShippingAddress(key,value){\r\n          let newOrderData = Object.assign({},orderData)\r\n          newOrderData.shipping[key] = value\r\n\r\n          this.setState({\r\n            orderData:newOrderData\r\n          })\r\n        } \r\n\r\n        updateBillingAdress(key,value){\r\n\r\n          let newOrderData = Object.assign({},orderData)\r\n         newOrderData.billing[key]=value\r\n         \r\n          this.setState({\r\n          \r\n            orderData : newOrderData\r\n\r\n          })\r\n        }\r\n\r\n        setBillingAdressToShippingAddress(param){\r\n\r\n          let blankBillingData = Object.assign({},orderData.billing)\r\n \r\n          \r\n          if (param === 'true'){\r\n\r\n            let billingData  = Object.assign({},this.state.orderData.billing) ; \r\n            let shippingData= Object.assign({},this.state.orderData.shipping)\r\n            \r\n            const newBillingData = Object.assign(billingData,shippingData) ; \r\n\r\n            const newOrderData = Object.assign({}, orderData)\r\n\r\n            newOrderData['billing'] = newBillingData\r\n  \r\n      \r\n            console.log('setted billing same as shipping','og order Data: ', orderData)\r\n            console.log('new OrderData: ', newOrderData)\r\n\r\n            this.setState({orderData:newOrderData})\r\n \r\n          }\r\n\r\n          else{\r\n\r\n            const newBillingData = blankBillingData\r\n\r\n            const newOrderData = Object.assign({}, orderData)\r\n\r\n            newOrderData['billing'] = newBillingData\r\n\r\n            console.log('new OrderData: ', newOrderData)\r\n\r\n            this.setState({orderData:newOrderData})\r\n\r\n             \r\n\r\n          }\r\n\r\n\r\n        }\r\n\r\n        getNameOnCard(name,value){\r\n\r\n             this.setState( { [name] : value} )\r\n  \r\n        }\r\n        handleOrientation(){\r\n            if (window.innerWidth >= window.innerHeight) {\r\n                this.setState({orientation:\"landscape\"})  \r\n            }\r\n             else  {\r\n                 this.setState({orientation:\"portrait\"})\r\n            }\r\n        }\r\n       \r\n\r\n        nextStep(){\r\n          this.state.step1==false\r\n          ?\r\n          this.setState({step1: true})\r\n          :\r\n          this.setState({step2: true})\r\n        }\r\n\r\n        backStep(){\r\n          this.state.step1 && this.state.step2\r\n          ?\r\n          this.setState({step2:false})\r\n          :\r\n          this.setState({step1:false})\r\n        }\r\n\r\n        componentWillMount(){\r\n            this.handleOrientation()\r\n        }\r\n     \r\n\r\n        handlePop(){\r\n          const pop = []; \r\n          \r\n             let existingCart = localStorage.getItem('cedarcreekforestry-cart');\r\n\r\n               \r\n              if (existingCart) {\r\n                existingCart = JSON.parse(existingCart)\r\n                \r\n                for ( var i = 0; i < existingCart.products.length ; i++ ){\r\n                   pop.push(false);\r\n                                                         \r\n                }\r\n\r\n                 this.setState({pop:pop})\r\n\r\n            }       \r\n            else   this.setState({pop:[false]}) ;  \r\n             \r\n        }\r\n\r\n        setPop(e,index,toggleOnBlur){\r\n          e.preventDefault()\r\n          const pop = [];  \r\n\r\n          this.setState({pop:[]})\r\n\r\n          let existingCart = localStorage.getItem('cedarcreekforestry-cart');\r\n \r\n\r\n          if (existingCart) {\r\n             existingCart = JSON.parse(existingCart)\r\n            \r\n            for ( var i = 0; i < existingCart.products.length ; i++ ){\r\n               pop.push(false);                          \r\n            }\r\n\r\n            this.setState({pop:pop})\r\n\r\n            \r\n\r\n            //  if (arguments[2]){\r\n            \r\n            if (toggleOnBlur){\r\n\r\n              this.handlePop()\r\n              let newPop = this.state.pop;\r\n              newPop.splice(index,1,false)\r\n               console.log('third parameter present')\r\n                \r\n               \r\n\r\n               this.setState({pop:newPop})\r\n             }else {\r\n               \r\n              \r\n              let newPop = this.state.pop;\r\n              newPop.splice(index,1,!this.state.pop[index])\r\n              console.log('third parameter not present',newPop)\r\n              this.setState({pop:newPop})\r\n             }\r\n\r\n        }       \r\n        else   this.setState({pop:[false]}) ;   \r\n        }\r\n\r\n        componentDidMount(){ \r\n            window.addEventListener(\"resize\",this.handleOrientation)\r\n\r\n            this.handlePop() \r\n\r\n        }\r\n        \r\n \r\n    \r\n    render(){\r\n     \r\n      var orientation = this.state.orientation; \r\n      var grid = this.state.orientation === \"landscape\" ? \" col-6 \": \" col-12 \" ; \r\n      var columnOrder = orientation === \"landscape\" ? \"d-flex\" : \"flex-column-reverse\" ; \r\n      var isClickable = this.state.step2 ? 'ready_state':'void_state' ; \r\n      const billing = this.state.orderData.billing ; \r\n      const shipping = this.state.orderData.shipping\r\n\r\n\r\n\r\n        return(\r\n\r\n        <React.Fragment>\r\n\r\n\t\r\n                \r\n                    <div className = {`row ${ columnOrder } justify-content-center`}>\r\n                    \r\n                    <div className = {`${grid}`}>\r\n\r\n                      <StepProgress \r\n                      step1 = {this.state.step1}\r\n                      step2 = {this.state.step2}\r\n                      step3 = {this.state.step3}\r\n                      />  \r\n\r\n                     \r\n                      <FirstStepOrSecondStep\r\n                        shipping = {shipping}\r\n                        billing = {billing}\r\n                        nextStep = {this.nextStep}\r\n                        backStep = {this.backStep}\r\n                        getNameOnCard = {this.getNameOnCard}\r\n                        step1 = {this.state.step1}\r\n                        step2 = {this.state.step2}\r\n                        updateShippingAddress = {this.updateShippingAddress}\r\n                        updateBillingAdress = {this.updateBillingAdress}\r\n                        paymentMethod = {this.state.paymentMethod}\r\n                        toggleChoice = {this.toggleChoice}\r\n                        setBillingAdressToShippingAddress = {this.setBillingAdressToShippingAddress}\r\n                      />\r\n                  \r\n                      <ConfirmOrder\r\n                        step2 = {this.state.step2}\r\n                        billing = {billing}\r\n                        backStep = {this.backStep}\r\n                        />\r\n                 \r\n\r\n              <ConfirmOrderModal \r\n                message = {this.state.paymentMessage}\r\n                modal = {this.state.modal}\r\n                toggle = {this.toggle}\r\n                />\r\n                    </div>  \r\n\r\n                        <div className = {`${grid} mt-3`}>\r\n                            \r\n                            <h3> Order Summary</h3>\r\n                            <CartInfo  \r\n                             line_items = {this.state.orderData.line_items}\r\n                             pop = {this.state.pop}\r\n                             setPop = {this.setPop}\r\n                             orientation = {this.state.orientation}\r\n                             updateOrder = {this.updateOrder}\r\n                             isOpen = {this.state.collapse}\r\n                             collapse = {this.collapse} \r\n                             />\r\n                            <TotalPrice/>\r\n                            <div className = \"row d-flex justify-content-center\">\r\n                              <div className = { `text-center cart-action-btn add-to-cart-btn purchase-btn ${isClickable}`} onClick={this.state.step2?this.handleSubmit: null}>\r\n                                PURCHASE\r\n                              </div>\r\n                            </div>\r\n                           \r\n                        </div>\r\n\r\n                    </div>\r\n                \r\n               \r\n\r\n        \r\n        </React.Fragment>\r\n        );\r\n    }\r\n    }\r\n\r\nexport default injectStripe(CheckOutPage);","// import  stripe from '../components/cart/processPayment'\r\nconst WooCommerceAPI = require('woocommerce-api');\r\nconst wooConfig = require('./config/wooConfig')\r\n\r\n\r\n \r\n  const WooCommerce= new WooCommerceAPI({\r\n    url:  wooConfig.siteUrl,\r\n    consumerKey: wooConfig.consumerKey,\r\n    consumerSecret: wooConfig.consumerSecret,\r\n    wpAPI: true,\r\n    version: 'wc/v1'\r\n  });  \r\n\r\n//   takes JSON data containing billing adress, product(s), and order total as a parameter,\r\n//   and creates new order in WooCommerse.\r\n\r\n// const data = {\r\n//   payment_method: \"stripe\",\r\n//   payment_method_title: \"Direct Bank Transfer\",\r\n//   set_paid: false,\r\n//   billing: {\r\n//     first_name: \"Chris\",\r\n//     last_name: \"Butthead\",\r\n//     address_1: \"969 Market\",\r\n//     address_2: \"\",\r\n//     city: \"San Francisco\",\r\n//     state: \"CA\",\r\n//     postcode: \"94103\",\r\n//     country: \"US\",\r\n//     email: \"john.doe@example.com\",\r\n//     phone: \"(555) 555-5555\"\r\n//   },\r\n//   shipping: {\r\n//     first_name: \"John\",\r\n//     last_name: \"Doe\",\r\n//     address_1: \"969 Market\",\r\n//     address_2: \"\",\r\n//     city: \"San Francisco\",\r\n//     state: \"CA\",\r\n//     postcode: \"94103\",\r\n//     country: \"US\"\r\n//   },\r\n//   line_items: [\r\n//     {\r\n//       product_id: 175,\r\n//       quantity: 1\r\n//     }\r\n//   ]\r\n// };\r\n  \r\n  const postOrder = async(data) => WooCommerce.postAsync(\"orders\", data)\r\n  \r\n  .then((response) => {\r\n  \r\n    return  JSON.parse( response.body)\r\n   \r\n  })\r\n  .catch((error) => {\r\n    console.log(error.response.data);\r\n  });\r\n\r\n\r\nexport default postOrder;\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","  \r\nimport React, { useState, useEffect } from 'react';\r\nexport const AppContext = React.createContext([\r\n\t{},\r\n\t() => {}\r\n]);\r\n\r\nexport const AppProvider = ( props ) => {\r\n\r\n    const [ cart, setCart ] = useState( null );\r\n\r\n\tuseEffect( () => {\r\n\r\n\t\tif ( process.browser ) {\r\n\r\n\t\t\tlet cartData = localStorage.getItem( 'cedarcreekforestry-cart' );\r\n\t\t\tcartData = null !== cartData ? JSON.parse( cartData ) : '';\r\n\t\t\tsetCart( cartData );\r\n\r\n\t\t}\r\n\r\n\t}, [] );\r\n\r\n\treturn (\r\n\t\t<AppContext.Provider value={ [ cart, setCart ] }>\r\n\t\t\t{ props.children }\r\n\t\t</AppContext.Provider>\r\n\t);\r\n};","import React from 'react';\r\nimport { slide as Menu } from 'react-burger-menu'; \r\n\r\nimport tree from '../shared/icons/tree.png';\r\n\r\nclass HamburgerMenu extends React.Component {\r\n    showSettings (event) {\r\n        event.preventDefault();\r\n    }\r\n    aboutPage = React.createRef();\r\n    galleryPage = React.createRef() ; \r\n\r\n\r\n    render () {\r\n        // NOTE: You also need to provide styles, see https://github.com/negomi/react-burger-menu#styling\r\n        return (\r\n            <Menu customBurgerIcon ={ <img src={tree} alt= \"logo.png\"/> }>\r\n                 \r\n                <div onClick ={e => this.props.downBtnScroll(e,'home')}>HOME</div>\r\n                 \r\n                <div   onClick ={e => this.props.downBtnScroll(e,'about')}>ABOUT</div>\r\n                 \r\n                <div   onClick ={e => this.props.downBtnScroll(e,'gallery')}>GALLERY</div>\r\n                \r\n                <div   onClick ={e => this.props.downBtnScroll(e,'blog')}>BLOG</div>\r\n                 \r\n                <div   onClick ={e => this.props.downBtnScroll(e,'store')}>STORE</div>\r\n               \r\n                <div   onClick ={e => this.props.downBtnScroll(e,'contact')}>CONTACT</div>\r\n               \r\n                <div   onClick ={e => this.props.downBtnScroll(e,'checkout')}>CART</div>\r\n               \r\n            </Menu>\r\n            );\r\n        }\r\n    }    \r\n\r\n    export default HamburgerMenu;","import React from 'react';\r\nimport HamburgerMenu from './menuComponent';\r\nimport  {Navbar} from 'reactstrap';\r\nimport {ScrollTo} from 'react-scroll-to';\r\n\r\nclass Home extends React.Component{\r\n\r\n    // constructor(props){\r\n    //     super(props)\r\n    //     this.state ={\r\n    //         downBtnTarget : {}\r\n    //     }\r\n    // }\r\n\r\n    // componentDidMount(){\r\n    //     const downBtnTarget = document.getElementById('about');\r\n    //     this.setState({downBtnTarget:downBtnTarget});\r\n    // }\r\n\r\n    render(){\r\n\r\n       \r\n\r\n\r\n        return(\r\n            this.props.isUserInteractingWithBlog\r\n            ?\r\n            null\r\n            :\r\n            <div id = \"home-page\" ref= {this.homePage} className = \"landing-page\"> \r\n        \r\n                {\r\n                this.props.isUserInteractingWithStore \r\n                ? null \r\n                : \r\n                <HamburgerMenu \r\n                downBtnScroll = {this.props.downBtnScroll}\r\n                />\r\n                }\r\n                <div className = \"container-fluid \">\r\n                \r\n                    <Navbar className= \"row\">\r\n                        \r\n                    <div className = \"col-3\">\r\n                    \r\n                    {/* filler to justify-content-end */}\r\n                        \r\n                    </div>\r\n                        \r\n                    \r\n                    <div className = \"col d-none d-lg-block  nav-btn\" onClick ={e => this.props.downBtnScroll(e,'home')}>\r\n                        home\r\n                    </div>\r\n                                        \r\n                    <div className = \"col d-none d-lg-block  nav-btn\" onClick ={e => this.props.downBtnScroll(e,'about')}>\r\n                        about\r\n                    </div>\r\n                \r\n                    <div  className = \"col d-none d-lg-block  nav-btn\" onClick ={e => this.props.downBtnScroll(e,'gallery')}>\r\n                        gallery\r\n                    </div>\r\n                   \r\n                    <div className = \"col d-none d-lg-block nav-btn\" onClick ={e => this.props.downBtnScroll(e,'contact')}>\r\n                        contact\r\n                    </div>\r\n\r\n                    <div className = \"col d-none d-lg-block nav-btn\" onClick ={e => this.props.downBtnScroll(e,'store')}>\r\n                        store\r\n                    </div>\r\n\r\n                    <div className = \"col d-none d-lg-block nav-btn\" onClick ={e => this.props.downBtnScroll(e,'blog')}>\r\n                        blog\r\n                    </div>\r\n\r\n                    </Navbar>\r\n                    \r\n                    <div className = \"mt-3 row d-flex justify-content-end align-items-end\">\r\n                        <h1 className = \"col-10 col-md-6 col-lg-7 col-xl-6 slogan-hook\"> Extraordinary <br className =\"d-lg-block\"/> Custom <br className =\"d-lg-block\"/> Furniture</h1>\r\n                    </div>\r\n\r\n                    <div className = \"row d-flex justify-content-center\">\r\n                        <div className=\"down home\"  onClick ={(e) => this.props.downBtnScroll(e,'about')}/>\r\n                    </div>\r\n\r\n                </div>\r\n                    \r\n\r\n                <div className = \"landing-page-btns view-custom-btn\"\r\n                        onClick = {e=>this.props.handleView(e,\"custom\")}\r\n                    > \r\n                        Custom Order\r\n                </div>\r\n                                    \r\n                <div className = \"landing-page-btns view-catalog-btn\"\r\n                        onClick = {e=>this.props.handleView(e,\"catalog\")}\r\n                        >\r\n                        Existing Inventory\r\n                </div>\r\n                    \r\n                \r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home ;\r\n\r\n\r\n","import React from 'react';  \r\n\r\nclass About extends React.Component{\r\n\r\n    // constructor(props){\r\n    //     super(props)\r\n    //     this.state = {\r\n    //         downBtnTarget: {}\r\n    //     }\r\n    // }\r\n\r\n    // componentDidMount(){\r\n    //     const downBtnTarget = document.getElementById('gallery');\r\n    //     this.setState({downBtnTarget:downBtnTarget});\r\n    // }\r\n\r\n    render(){\r\n\r\n    \r\n        \r\n        return(\r\n            \r\n                this.props.isUserInteractingWithBlog\r\n                ?\r\n                null\r\n                :\r\n                <div ref = {this.aboutPage} id ='about' className = \"about-page\">\r\n                    <div className = \"up-btn\"></div>\r\n                    <div className = \"container sm-auto\">\r\n                        <div className = \"row d-flex justify-content-center\">\r\n                            <h1>About</h1>\r\n                        </div>\r\n                        \r\n                            <div className = \"row d-flex justify-sm-content-center justify-content-lg-start\">\r\n\r\n\r\n                                <p className =\"col-12 col-lg-7 mt-4 mt-lg-4 ml-lg-5\">\r\n                                    We love couches! We love when a couch is a fresh new play on an old theme, an homage to a classic, a truly original design or even a completely unassuming family room design that quietly does its job year after year like a well-loved hoodie.\r\n\r\n                                    We obsessively cultivate a diverse selection of sofas in every design genre. Pick one of our thoughtfully designed styles or work with us to come up with a new variation. We are custom builders in the truest sense of the word. Custom elsewhere can mean you get to choose blue instead of gray. At COUCH it means you design a sofa in your exact size, style and comfort specifications. If you like one of our styles but need it a little taller so it's easier to get out of, come chat.  If you have an awkward nook in your basement that you need to fill with a sectional made at exact dimensions, we're a sure bet. We are couch experts who really know our stuff!\r\n\r\n                                    {/* We believe in choice. From carrying the largest selection of fabrics and leathers in the city to showing three different species of wood for our legs, we pride ourselves on offering an industry leading range of options.  */}\r\n\r\n                                    {/* We also believe in customer service. We believe we have to if we’re going to be around for the long haul. We started in a basement in Fremont in 2008 and have grown into our 3000 square foot home on Ballard Avenue. We are a Seattle business to our core. With the proliferation of online competitors decimating traditional retail, we are thriving because we can offer a deeply considered experience from start to finish.  We are eager to help you find your perfect couch, chair or sectional! */}\r\n                                </p>\r\n                                \r\n                            </div>\r\n                        <div className = \"row d-flex justify-content-center\">                           \r\n                            <div className = \"down about\" onClick ={(e) =>this.props.downBtnScroll(e,'gallery')}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            \r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default About","const clientConfig = {\r\n    graphqlUrl: 'https://cedarcreekforestry.com/graphql'\r\n};\r\nexport default clientConfig;","import  ApolloClient  from 'apollo-boost';\r\nimport clientConfig from './config/client-config';\r\n\r\n\r\n// Apollo GraphQL client.\r\nconst client = new ApolloClient({\r\n\t\turi: clientConfig.graphqlUrl,\r\n});\r\n\r\n\r\n\r\nexport default client;","import gql from 'graphql-tag';\r\nimport client from \"./ApolloClient\"\r\n\r\nconst PRODUCTS_QUERY =gql`query{\r\n\r\n\r\n    products (where: {category: \"Catalog\"}) {\r\n      nodes {\r\n        name\r\n        id\r\n        productId\r\n        description\r\n        image {\r\n          sourceUrl\r\n        }\r\n        ... on SimpleProduct {\r\n          price\r\n          stockStatus\r\n          stockQuantity\r\n          purchasable\r\n          width\r\n          height\r\n          length\r\n          productCategories(first: 5) {\r\n            nodes {\r\n              name\r\n            }\r\n          }\r\n          attributes {\r\n            nodes {\r\n              name\r\n              ... on LocalProductAttribute {\r\n                name\r\n                options\r\n              }\r\n            }\r\n          }\r\n        }\r\n        galleryImages {\r\n          nodes {\r\n            sourceUrl\r\n          }\r\n        }\r\n      }\r\n    }\r\n  \r\n  \r\n  \r\n  \r\n  \r\n}`;\r\n\r\n\r\nconst getInitialProps = async () => {\r\n    const {loading,error,data} = await client.query({query:PRODUCTS_QUERY});\r\n    // {loading?console.log(\"loading...\"): console.log(\"loaded successfully\")}\r\n    // {error?console.log(\"sorry there seems to be an error\"):console.log(\"No errors retrieving data!\")}\r\n    // {data  ? console.log(data.products.nodes )  : console.log(\"there doesn't seem to be any products here\")}\r\n    return (data.products.nodes )\r\n\r\n    };\r\n\r\n    export default getInitialProps\r\n","\r\n\r\nconst WooCommerceAPI = require('woocommerce-api');\r\nconst wooConfig = require('./config/wooConfig')\r\n\r\n \r\n  const WooCommerce= new WooCommerceAPI({\r\n    url:  wooConfig.siteUrl,\r\n    consumerKey: wooConfig.consumerKey,\r\n    consumerSecret: wooConfig.consumerSecret,\r\n    wpAPI: true,\r\n    version: 'wc/v1'\r\n  });    \r\n  \r\n   const getProducts = async ()=>  WooCommerce.getAsync(\"products\")\r\n\r\n      .then(response => {\r\n         return  JSON.parse(response.body)\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response.data)\r\n      });  \r\n\r\n\r\nexport default getProducts;\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import gql from 'graphql-tag';\r\nimport client from \"./ApolloClient\"\r\n\r\nconst PRODUCTS_QUERY =gql`query{\r\n\r\n    productCategories(where: {parent: 28}) {\r\n        edges {\r\n          node {\r\n            name\r\n            description\r\n            image {\r\n              sourceUrl\r\n            }\r\n          }\r\n        }\r\n        nodes {\r\n          products(first: 10) {\r\n            edges {\r\n              node {\r\n                name\r\n                image {\r\n                  sourceUrl\r\n                }\r\n                productId\r\n                description\r\n                attributes{\r\n                  nodes{\r\n                    name\r\n                    options\r\n                  }\r\n                }\r\n                productTags{\r\n                  nodes{\r\n                    name\r\n                  }\r\n                }                \r\n                ... on SimpleProduct {\r\n                  name\r\n                  price\r\n                  length\r\n                  height\r\n                  weight\r\n                  width\r\n                  purchasable\r\n                  stockStatus\r\n                  stockQuantity\r\n                  productCategories(first: 5) {\r\n                    nodes {\r\n                      name\r\n                    }\r\n                  }\r\n                  galleryImages {\r\n                    nodes {\r\n                      sourceUrl\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n}`;\r\n\r\n\r\nconst getCustomOrderProps = async () => {\r\n    const {loading,error,data} = await client.query({query:PRODUCTS_QUERY});\r\n    // {loading?console.log(\"loading...\"): console.log(\"loaded successfully\")}\r\n    // {error?console.log(\"sorry there seems to be an error\"):console.log(\"No errors retrieving data!\")}\r\n    // {data  ? console.log(data.productCategories)  : console.log(\"there doesn't seem to be any products here\")}\r\n    return (data.productCategories)\r\n\r\n    };\r\n\r\n    export default getCustomOrderProps\r\n","import gql from 'graphql-tag';\r\nimport client from \"./ApolloClient\"\r\n\r\nconst PRODUCTS_QUERY =gql`query{\r\n\r\n    products(where: {category: \"Table Legs\"}) {\r\n        nodes {\r\n               name\r\n               id\r\n               productId\r\n               description\r\n               image {\r\n                 sourceUrl\r\n               }\r\n               ... on SimpleProduct {\r\n                 price\r\n                 stockStatus\r\n                 stockQuantity\r\n                 purchasable\r\n                 width\r\n                 height\r\n                 length\r\n                 productCategories(first: 5) {\r\n                  nodes {\r\n                    name\r\n                  }\r\n                }\r\n                 attributes {\r\n                   nodes {\r\n                     name\r\n                     ... on LocalProductAttribute {\r\n                       name\r\n                       options\r\n                     }\r\n                   }\r\n                 }\r\n               }\r\n               galleryImages {\r\n                 nodes {\r\n                   sourceUrl\r\n                 }\r\n               }\r\n             }\r\n       }\r\n}`;\r\n\r\n\r\nconst getTableLegProducts = async () => {\r\n    const {loading,error,data} = await client.query({query:PRODUCTS_QUERY});\r\n    // {loading?console.log(\"loading...\"): console.log(\"loaded successfully\")}\r\n    // {error?console.log(\"sorry there seems to be an error\"):console.log(\"No errors retrieving data!\")}\r\n    // {data  ? console.log(data.products.nodes )  : console.log(\"there doesn't seem to be any products here\")}\r\n    return (data.products.nodes )\r\n\r\n    };\r\n\r\n    export default getTableLegProducts\r\n","import gql from 'graphql-tag';\r\nimport client from \"./ApolloClient\"\r\n\r\nconst PRODUCTS_QUERY =gql`query{\r\n\r\n    products (where: {category: \"Shelf Mounting\"}) {\r\n        nodes {\r\n          name\r\n          id\r\n          productId\r\n          description\r\n          image {\r\n            sourceUrl\r\n          }\r\n          \r\n          ... on SimpleProduct {\r\n            price\r\n            stockStatus\r\n            stockQuantity\r\n            width\r\n            height\r\n            length\r\n            productCategories(first: 5) {\r\n              nodes {\r\n                name\r\n              }\r\n            }\r\n            attributes {\r\n              nodes {\r\n                name\r\n                ... on LocalProductAttribute {\r\n                  name\r\n                  options\r\n                }\r\n              }\r\n            }\r\n          }\r\n          galleryImages {\r\n            nodes {\r\n              sourceUrl\r\n            }\r\n          }\r\n        }\r\n      }\r\n}`;\r\n\r\n\r\nconst getMountingHardware = async () => {\r\n    const {loading,error,data} = await client.query({query:PRODUCTS_QUERY});\r\n    // {loading?console.log(\"loading...\"): console.log(\"loaded successfully\")}\r\n    // {error?console.log(\"sorry there seems to be an error\"):console.log(\"No errors retrieving data!\")}\r\n    // {data  ? console.log(data.products.nodes )  : console.log(\"there doesn't seem to be any products here\")}\r\n    return (data.products.nodes)\r\n\r\n    };\r\n\r\n    export default getMountingHardware\r\n","import gql from 'graphql-tag';\r\nimport client from \"./ApolloClient\"\r\n\r\nconst PRODUCTS_QUERY =gql`query{\r\n\r\n    products (where: {category: \"Finishes\"}) {\r\n        nodes {\r\n          name \r\n          productId\r\n          description\r\n          image {\r\n            sourceUrl\r\n          }\r\n          ... on SimpleProduct {\r\n            price\r\n            stockStatus\r\n            stockQuantity\r\n          }\r\n          productCategories(first: 2) {\r\n            nodes {\r\n              name\r\n            }\r\n          }\r\n        }\r\n      }\r\n}`;\r\n\r\n\r\nconst getFinishes = async () => {\r\n    const {loading,error,data} = await client.query({query:PRODUCTS_QUERY});\r\n    // {loading?console.log(\"loading...\"): console.log(\"loaded successfully\")}\r\n    // {error?console.log(\"sorry there seems to be an error\"):console.log(\"No errors retrieving data!\")}\r\n    // {data  ? console.log(data.products.nodes )  : console.log(\"there doesn't seem to be any products here\")}\r\n    return (data.products.nodes)\r\n\r\n    };\r\n\r\n    export default getFinishes\r\n","import React , { useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\n\r\n\r\nconst GalleryModal = (props) => {\r\n  \r\n    const {className = \"gallery-modal\"} = props\r\n     \r\n      const title = props.product.name\r\n\r\n      const galleryImages = props.product.galleryImages.nodes ; \r\n\r\n      const toggle = props.toggle\r\n\r\n      const [activeImg , setImg] = useState(props.product.image.sourceUrl);\r\n\r\n  return(\r\n        <Modal center isOpen={props.modal} toggle={toggle} className={className}>\r\n            <ModalHeader toggle={toggle}> { title } </ModalHeader>\r\n            <ModalBody>\r\n\r\n               <img src = {activeImg} width = \"100%\"/>\r\n                <div className = \"row\">\r\n                {\r\n                    galleryImages.map( (item,index) => {\r\n                        return(\r\n                            <div key = {index} className = \"next-photo col-3\">\r\n                                <img onClick = {() => setImg(galleryImages[index].sourceUrl)} src = {item.sourceUrl} width = \"100%\"/>\r\n                            </div>\r\n                        );\r\n                    })\r\n                }\r\n                </div>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n            <Button color=\"primary\" onClick={toggle}>Do Something</Button>{' '}\r\n            <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n  );\r\n}\r\n\r\nexport default GalleryModal","import React , {useState} from 'react';\r\nimport AnimatedNumber from 'react-animated-number';\r\nimport {Input, Label, FormGroup , Tooltip ,  Collapse, Popover, Button} from 'reactstrap'\r\nimport  '../styles/customOrder.scss'\r\n// import {finishTypes} from '../shared/finishTypes'\r\nimport AddToCartButton from './cart/addToCart';\r\nimport GalleryModal from './modalComponent';\r\nimport renderHTML from 'react-render-html';\r\n\r\n\r\nconst SelectSeries=(props)=>{\r\n\r\n    // let orientation = props.orientation ; \r\n\r\n    // var grid = orientation === \"portrait\" ? \"col-12\" : \"col-6\"\r\n\r\n    // console.log(props)\r\n    return (\r\n        <React.Fragment>\r\n        <h4>Select Series</h4>\r\n\r\n     <div className = \"row\" >\r\n\r\n      {     props.series.map( (item,index)=>{\r\n          return(\r\n\r\n              <div key = {index} className = \"mb-2 col-xs-12  col-sm-12 col-12 col-md-6 col-lg-6 col-xl-6\">\r\n                  <div className = \"store-content-step-description \">\r\n              \r\n              <div className = \"row\">\r\n              <div className = \"col-4 pr-0 d-flex align-items-center\">\r\n           \r\n              <div className = \"series-pic-frame\">\r\n              <img  src = {item.node.image.sourceUrl} width = \"100%\" onClick = {(e)=>{props.renderSlabs(e,index)}}></img>\r\n              \r\n              </div>\r\n              </div>\r\n           \r\n              <div className = \"col-8\">\r\n              <div className = \"series-title\"> {item.node.name}</div>\r\n             \r\n              <div className = \"series-description\">\r\n              {item.node.description}\r\n              </div>\r\n              </div>\r\n              </div>\r\n              </div>\r\n              </div>\r\n          )\r\n      })}\r\n      </div>\r\n    </React.Fragment>\r\n    );\r\n}\r\n\r\nconst SelectSlab = (props) =>{\r\n    \r\n    let orientation = props.orientation; \r\n\r\n    var grid = orientation === 'portrait' ? \"col-6\" : \"col-4\"\r\n\r\n    let products = props.activeProductsfromSeries.products.edges; \r\n\r\n    console.log(\"products for this series are \",products)\r\n\r\n    let activeSeries  = props.activeSeries;\r\n    console.log(\"The name of this series is : \", activeSeries)\r\n\r\n    return(\r\n        <React.Fragment>\r\n\r\n            <h4>\r\n                Select Cut from {activeSeries.name}\r\n            </h4>\r\n\r\n     \r\n            <div className = \"row\">\r\n    \r\n                    {\r\n                        products.map( (item,index) => {\r\n                        return(\r\n                            <div key ={index} className = {grid}>\r\n                                <div className = \"slab-title\">\r\n                                    {item.node.name}\r\n                                </div>\r\n                              \r\n                           <div className = \"slab-frame\">\r\n\r\n                           \r\n                           <img src = {item.node.image.sourceUrl} width =\"100%\"\r\n                            onClick = {e=>props.renderProduct(e,index)}/>\r\n                         \r\n                           </div>\r\n                           <div>\r\n                                {item.node.price}\r\n                            </div>\r\n                           \r\n                            </div>\r\n                        )\r\n                        })\r\n                    }\r\n\r\n            </div>\r\n           \r\n        </React.Fragment>\r\n    )\r\n}\r\nconst SelectCut = (props) =>{\r\n        \r\n    let orientation = props.orientation;\r\n    let product = props.activeProduct ; \r\n    var grid = orientation === \"portrait\" ? \"col-12 mt-2\" :\"col-6 mt-2\"\r\n    var statsGrid  = orientation === \"portrait\" ? \"col-12 mt-2\" :\"col-6 mt-2 pl-0\"\r\n    // var ContainerHeight = orientation === \"prtrait\" ? \"30vh\" : \"50vh\" ;  \r\n\r\n    var useType = [] ; \r\n    \r\n    // console.log(product)\r\n    product.productTags.nodes.forEach(element=> useType.push(element.name) )\r\n    let uses = useType.join(', ')\r\n\r\n\r\n    const [modal, setModal] = useState(false);\r\n\r\n    const toggle = () => setModal(!modal);\r\n     \r\n    \r\n\r\n    return(\r\n        <React.Fragment>\r\n            <div className = \"row\">\r\n\r\n                <div className = {`cut-gallery ${grid}`}>\r\n\r\n                    <div className = \"row d-flex justify-content-center\">\r\n                        <h4 className =\"slab-name\">\r\n                            {product.name}\r\n                        </h4>\r\n                    </div>\r\n\r\n                    <img src = {props.activeImage ===null? product.image.sourceUrl : props.activeImage} width = \"100%\"\r\n                        onClick = {toggle}\r\n                        style = {{\r\n                            height: \"50vh\"\r\n                        }}\r\n                        />\r\n\r\n                    <GalleryModal  product = {product} modal = {modal} toggle = {toggle}/>\r\n\r\n                    <div className = \"container\">\r\n                        <div className = \"row justify-content-center\">\r\n                            {\r\n                                    product.galleryImages.nodes.map( (item,index) => {\r\n                                        return(\r\n                                            <div key = {index} className = \"col-3 no-padding\">\r\n                                                <div className= \"ammo\">\r\n                                                <img src = {item.sourceUrl} width = \"100%\"\r\n                                                onClick = { e => props.renderImage(e,index)}\r\n                                                />\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            \r\n     \r\n            \r\n            <div className = {statsGrid}>\r\n            <div className = \"row d-flex justify-content-center\">        \r\n                <h4 className = \"custom-product-price\">\r\n                    {product.price}\r\n                </h4>\r\n            </div>\r\n            <div className = \"container-fluid\">\r\n                   \r\n                   <div className = \"row stats-container\">\r\n                       <div className = \"col-8 pl-0\" style = {{\r\n                           borderRight : '1px solid #aba7a7'\r\n                       }}>\r\n                           <span className = \"spec-name\">DIMENSIONS</span>\r\n   \r\n                            <div className = \"row justify-content-around\">\r\n                                   <div className = \" spec-value text-right\">\r\n                                       <AnimatedNumber \r\n                                           className = \"spec-value\"\r\n                                           value={parseInt(product.length)}\r\n                                           style={{\r\n                                               transition: '0.8s ease-out',\r\n                                               transitionProperty:\r\n                                                   'background-color, color, opacity'\r\n                                           }}\r\n                                           duration={1500}\r\n                                           stepPrecision = {0}\r\n                                           /><span className = \"spec-unit-inches\">\"</span> \r\n                                           <span className = \"spec-unit-label\"> L </span>\r\n                                   </div>  \r\n                                   \r\n                                   <div className = \"spec-value  text-center\">\r\n   \r\n                                   <AnimatedNumber \r\n                                       className = \"spec-value\"\r\n                                        value={parseInt(product.width)}\r\n                                       style={{\r\n                                           transition: '0.8s ease-out',\r\n                                           transitionProperty:\r\n                                               'background-color, color, opacity'\r\n                                       }}\r\n                                       duration={1500}\r\n                                       stepPrecision = {0}\r\n                                       /><span className = \"spec-unit-inches\">\"</span> \r\n                                       <span className = \"spec-unit-label\"> W </span>\r\n                                   </div>  \r\n                                   \r\n                                   \r\n                                   <div className = \"spec-value text-start\">\r\n   \r\n                                   <AnimatedNumber \r\n                                       className = \"spec-value\"\r\n                                       value={parseInt(product.height)}\r\n                                       style={{\r\n                                           transition: '0.8s ease-out',\r\n                                           transitionProperty:\r\n                                               'background-color, color, opacity'\r\n                                       }}\r\n                                       duration={1500}\r\n                                       stepPrecision = {0}\r\n                                       /><span className = \"spec-unit-inches\">\"</span> \r\n                                       <span className = \"spec-unit-label\"> H </span>\r\n                                   </div>  \r\n                            </div>\r\n                       </div>\r\n   \r\n                       <div className = \"col-4\">\r\n                           <span className = \"spec-name\">AGE</span>\r\n                        \r\n                                   <div className = \"spec-item\">\r\n                                       {/* <span className= \"spec-value\">{`${product.attributes.nodes[0].options[0]}`}</span> */}\r\n   \r\n                                       <AnimatedNumber \r\n                                           className = \"spec-value\"\r\n                                           value={parseInt(product.attributes.nodes[0].options[0])}\r\n                                           style={{\r\n                                               transition: '0.8s ease-out',\r\n                                               transitionProperty:\r\n                                                   'background-color, color, opacity'\r\n                                           }}\r\n                                           duration={1500}\r\n                                           stepPrecision = {0}\r\n                                           />\r\n                                       <span className= \"spec-unit-label\">years old</span>\r\n                                   </div>\r\n   \r\n                       </div>\r\n   \r\n                   </div>\r\n   \r\n                   <div className = \"row stats-container\">\r\n                    <div className = \"col-6\">\r\n                          <span className = \"spec-name\">MATERIAL</span>\r\n                           <div className = \"\">\r\n                                {product.attributes.nodes[1].options}\r\n                           </div>\r\n                       </div>\r\n                       <div className = \"col-6\">\r\n                       <span className = \"spec-name\">USE</span>\r\n                           <div className = \"\">\r\n                                {uses}\r\n                           </div>\r\n                       </div>\r\n                    </div>\r\n   \r\n                   <div className = \"row stats-container\">\r\n                       \r\n                       <div className =\"col-6\">\r\n                           <FormGroup check>\r\n                               <Label check>\r\n                                   <Input type=\"checkbox\"/> \r\n                                   CUSTOM CUT\r\n                               </Label>\r\n                           </FormGroup>\r\n                       </div>\r\n                   </div>\r\n\r\n                   <AddToCartButton product = {product}/>\r\n              \r\n               </div>\r\n\r\n            </div>\r\n               \r\n          \r\n            </div>\r\n                     \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst SelectFinish = (props) => {\r\n          \r\n    let grid = props.orientation === 'portrait' ? 'col-12' : 'col-6';\r\n\r\n    let useDefaultFinish = props.defaultFinish ; \r\n    let finishTypes = props.finishTypes ;\r\n    let activeFinish = useDefaultFinish ? finishTypes[0] : props.activeFinish;\r\n\r\n    \r\n    let activeFinishImage = useDefaultFinish ? finishTypes[0].image.sourceUrl: activeFinish.image.sourceUrl ; \r\n    let defaultFinishImage = props.finishTypes[0].image.sourceUrl;\r\n    let defaultFinishDescription = props.finishTypes[0].description;\r\n    let activeFinishDescription = activeFinish.description;\r\n\r\n   \r\n    const [open,setDropdown] = useState(false); \r\n    \r\n    const toggle = () => {\r\n        setDropdown(!open) ;\r\n    }\r\n\r\n    const calculateSurfaceArea = () => {\r\n\r\n        console.log(props.activeProduct)\r\n\r\n        let product = props.activeProduct\r\n        \r\n        let width = product.width;\r\n        let height = product.height;\r\n        let length = product.length;\r\n\r\n        // calculate surface area return ft^2\r\n        let surfaceArea = Math.round((2*(width*height) + 2*(width*length) +2*(length*height) )/12); \r\n\r\n        return surfaceArea \r\n    }\r\n \r\n    return(\r\n        <React.Fragment>\r\n            Select Finish  \r\n\r\n        <div className = 'container-fluid select-finish-container'>\r\n            <div className = 'row'>\r\n\r\n                <div className = {grid}>\r\n\r\n                    <h4 className= \"finish-title\">\r\n                        {useDefaultFinish? finishTypes[0].name : activeFinish.name}\r\n                    </h4>\r\n                    \r\n                    <div className = \"finish-image-container\">\r\n                            <img src = {useDefaultFinish ? defaultFinishImage: activeFinishImage }></img>\r\n                    </div>\r\n                    \r\n                    <div className = \"select-finish-btn-group\">\r\n                        \r\n                        {finishTypes.map( (item,index)=>{\r\n                            return(\r\n                                <div key = {index} className = \"finish-btn\"\r\n                                    onClick = { e=>props.handleFinishSelect(e,index)}\r\n                                    style = {{backgroundImage: `url(${ item.image.sourceUrl})`}}\r\n                                    />\r\n                            );\r\n                        })}\r\n                    \r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n                <div className = {`${grid}`}>\r\n\r\n                    <h4 className = 'finish-title text-center'>\r\n                        {activeFinish.price}\r\n                    </h4>\r\n\r\n                    <AddToCartButton  surfaceArea = {calculateSurfaceArea()} product = {activeFinish}/>  \r\n                    \r\n                  \r\n                    <div className = \"col-12 mb-2 no-padding d-flex justify-content-start\">\r\n                    <div  onClick = {toggle} className={open?\"circle-plus closed opened\":\"circle-plus closed \" }>\r\n                        <div className=\"circle\">\r\n                            <div className=\"horizontal\"></div>\r\n                            <div className=\"vertical\"></div>\r\n                        </div>\r\n                    </div>\r\n                    DESCRIPTION\r\n                    </div>\r\n                    \r\n                    <Collapse isOpen = {open}>\r\n                        {/* <p className = 'm-2 p-2'> */}\r\n                        {/* Show the defualt finish image if the user hasn't selected a finish yet */}\r\n                        {useDefaultFinish ? renderHTML(defaultFinishDescription) : renderHTML(activeFinishDescription)}\r\n                        {/* </p> */}\r\n                    </Collapse>\r\n\r\n\r\n                \r\n\r\n                    \r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n   \r\n        \r\n        \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nconst SelectHardware = (props) => {\r\n\r\n    \r\n    let tableLegs = props.tableLegs ;\r\n    let mountingHardware = props.mountingHardware ;\r\n    let orientation = props.orientation ;\r\n\r\n    let activeHardwareProduct = props.activeHardwareProduct ;\r\n    let gallery = props.viewHardwareProduct?  activeHardwareProduct.galleryImages.nodes : null ;\r\n\r\n    const [open,setCollapse] = useState(false);\r\n\r\n    const toggleCollapse = () => setCollapse(!open)\r\n\r\n\r\n    \r\n    const [activeImg , setImg] = useState( props.viewHardwareProduct ? activeHardwareProduct.image.sourceUrl :false);\r\n   \r\n    const [modal, setModal] = useState(false);\r\n\r\n    const toggle = () => setModal(!modal);\r\n\r\n    const grid = orientation === \"portrait\" ? \"col-6\" : \"col-4\" ; \r\n    const gallery_grid = orientation === \"portrait\" ? \"col-12\" : \"col-6\" ;\r\n    const galleryAmmoBeltHeight = orientation === \"portrait\" ? \"10vh\" : \"10vh\" ; \r\n\r\n\r\n    console.log(\"Available Table Legs are : \",tableLegs);\r\n\r\n\r\n\r\n  return(\r\n\r\n\r\n      props.viewHardwareProduct\r\n\r\n      ? \r\n\r\n    //   if viewing a single hardware product\r\n\r\n        <React.Fragment>\r\n\r\n          \r\n            <div className = \"row pt-2\">  \r\n                <div className =  {gallery_grid}>\r\n                <h4 className = \"pt-2\">\r\n                {activeHardwareProduct.name}\r\n            </h4>\r\n                <img  src = {activeImg ? activeImg : activeHardwareProduct.image.sourceUrl } width = \"100%\"\r\n                 onClick = {toggle}/>\r\n                <div className = \"container\">\r\n                    <div className = \"row hardware-gallery\"\r\n                        style = {{\r\n                            height: galleryAmmoBeltHeight\r\n                        }}\r\n                        >\r\n                            {\r\n                                gallery.map( (img,index) => {\r\n                                    return(\r\n                                        <div key = {index} className = \"col-3 p-0 hardware-ammo\">\r\n                                            <img src = {img.sourceUrl} width = \"100%\" height= \"100%\"\r\n                                                  onClick = { () => setImg(img.sourceUrl)}\r\n                                            />\r\n                                        </div>\r\n                                    );\r\n                                })\r\n                            }\r\n                        \r\n                    </div>\r\n\r\n                </div>              \r\n                \r\n                </div>\r\n\r\n                <div className = {gallery_grid}>\r\n                    <h4 className = \"text-center pt-2\"> {activeHardwareProduct.price}</h4>\r\n\r\n                    \r\n                        <AddToCartButton product = {activeHardwareProduct}/>\r\n                     \r\n\r\n                    <div className = \"col-12 mb-2 no-padding d-flex justify-content-start\">\r\n                    <div  onClick = {toggleCollapse} className={open?\"circle-plus closed opened\":\"circle-plus closed \" }>\r\n                        <div className=\"circle\">\r\n                            <div className=\"horizontal\"></div>\r\n                            <div className=\"vertical\"></div>\r\n                        </div>\r\n                    </div>\r\n                    DESCRIPTION\r\n                    </div>\r\n                            \r\n                    <Collapse isOpen = {open}>\r\n                    {renderHTML(activeHardwareProduct.description)}\r\n                    </Collapse>\r\n\r\n                   \r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <GalleryModal\r\n               product = {activeHardwareProduct}\r\n               toggle = {toggle}\r\n               modal = {modal} \r\n               />\r\n\r\n\r\n            <div  className=\"brk-btn \" onClick ={ e =>props.handleNavigation(e,\"hardware\")}>\r\n                \r\n                back\r\n            </div>  \r\n    \r\n        </React.Fragment>\r\n      :\r\n\r\n    //   if viewing all hardware products\r\n\r\n        <React.Fragment>\r\n            <h4 className = \"hardware-category\">Table Legs</h4>\r\n            <div className = \" row hardware-products-container\">\r\n                {tableLegs.map((item,index)=>{\r\n                        return(\r\n                            <React.Fragment key = {index}>\r\n                                <div className = {`hardware-item  p-1 ${grid}`}>\r\n                                <div className = \"hardware-item-name\">{item.name}</div>\r\n                                <img src = {item.image.sourceUrl} width = \"100%\"\r\n                                onClick = {e=>props.renderHardwareProduct(e,index,\"table legs\")}\r\n                                />\r\n                                <div className = \"hardware-item-price\">{item.price}</div>\r\n                                </div>\r\n                                \r\n                            </React.Fragment>\r\n                        );\r\n                    })}\r\n            </div>\r\n            <h4 className = \"hardware-categor\"> Mounting Hardware </h4>\r\n            <div className = \"row hardware-products-container\">\r\n            {mountingHardware.map((item,index)=>{\r\n                        return(\r\n                            <React.Fragment key = {index}>\r\n                                <div className = {`hardware-item p-1 ${grid}`}>\r\n                                <div className = \"hardware-item-name\">{item.name}</div>\r\n                                <img src = {item.image.sourceUrl} width = \"100%\"\r\n                                onClick = {e=>props.renderHardwareProduct(e,index,\"mounting hardware\")}\r\n                                />\r\n                                <div className = \"hardware-item-price\">{item.price}</div>\r\n                                </div>\r\n                                \r\n                            </React.Fragment>\r\n                        );\r\n                    })}\r\n\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n  \r\n   \r\n}\r\n\r\n\r\nconst CustomOrderStep= (props)=>{\r\n\r\n    if (props.selectSeries){\r\n        \r\n        return(\r\n            <SelectSeries\r\n                orientation = {props.orientation}\r\n                series = {props.series}\r\n                renderSlabs = {props.renderSlabs}\r\n            /> \r\n            );        \r\n    }\r\n    else\r\n\r\n    if (props.selectSlab){\r\n\r\n        return( \r\n                <SelectSlab\r\n                activeProductsfromSeries = {props.activeProductsfromSeries}\r\n                activeSeries = {props.activeSeries}\r\n                orientation = {props.orientation}\r\n                renderProduct = {props.renderProduct}\r\n                />\r\n                );\r\n    }\r\n    else \r\n    if (props.selectCut){\r\n\r\n        return( \r\n                <SelectCut\r\n                activeImage = {props.activeImage}\r\n                activeProduct = {props.activeProduct}\r\n                orientation = {props.orientation}\r\n                renderImage = {props.renderImage}                \r\n                />\r\n                );\r\n    }\r\n    else\r\n    if (props.selectFinish){\r\n\r\n        return( \r\n                <SelectFinish\r\n                activeProduct = {props.activeProduct}\r\n                useDefaultFinishImage = {props.useDefaultFinishImage}\r\n                activeFinishImage = {props.activeFinishImage}\r\n                renderFinishImage = {props.renderFinishImage}\r\n                defaultFinish = {props.defaultFinish}\r\n                handleFinishSelect = {props.handleFinishSelect}\r\n                activeFinish = {props.activeFinish}\r\n                orientation = {props.orientation}\r\n                finishTypes = {props.finishTypes}\r\n                surfaceArea = {10}\r\n                />\r\n                );\r\n    }\r\n    else\r\n    if (props.selectHardware){\r\n        \r\n        return <SelectHardware\r\n                tableLegs = {props.tableLegs}\r\n                mountingHardware = {props.mountingHardware}\r\n                orientation = {props.orientation}\r\n                renderHardwareProduct = {props.renderHardwareProduct}\r\n                viewHardwareProduct = {props.viewHardwareProduct}\r\n                activeHardwareProduct = {props.activeHardwareProduct}\r\n                handleNavigation = {props.handleNavigation}\r\n                />\r\n    }\r\n    else return null\r\n\r\n}\r\n\r\nconst CustomOrderNav = (props) => {\r\n\r\n    const [slabTooltipOpen, setSlabTooltip] = useState(false);\r\n\r\n     const toggleSlabTooltip = (e,onBlur) => {\r\n        e.preventDefault()\r\n        if (onBlur){\r\n         setSlabTooltip(false);\r\n        }\r\n        else setSlabTooltip(!slabTooltipOpen);\r\n    }\r\n\r\n\r\n     const [seriesTooltipOpen, setSeriesTooltip] = useState(false);\r\n\r\n    const toggleSeriesTooltip = (e,onBlur) => {\r\n        e.preventDefault()\r\n        if (onBlur){\r\n        setSeriesTooltip(false);\r\n        }\r\n        else setSeriesTooltip(!seriesTooltipOpen);\r\n    }\r\n\r\n    \r\n\r\n    return(\r\n        <React.Fragment>\r\n\r\n            <div className = \"row d-flex justify-content-around custom-order-nav\">\r\n\r\n                \r\n                <div id = \"step1-select-series\" className = 'custom-order-nav-item' onClick = {props.handleStep}>\r\n                    Series\r\n                </div>\r\n\r\n                <div id = \"step2-select-slab\" className = \" custom-order-nav-item\"                        \r\n                        onClick= {props.activeSeries.length === 0? e => toggleSeriesTooltip(e):props.handleStep}\r\n                        >\r\n                    Slabs\r\n                </div>\r\n\r\n                <div className = \" custom-order-nav-item\"                           \r\n                        onClick= {props.activeProduct.length ===0? e=>toggleSlabTooltip(e) :props.handleStep}\r\n                        >\r\n                    Cut\r\n                </div>\r\n\r\n                <div className = \" custom-order-nav-item\" onClick= {props.handleStep}>\r\n                    Finish\r\n                </div>\r\n\r\n                <div className = \" custom-order-nav-item\" onClick = {props.handleStep} >\r\n                    Hardware\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className = \"custom-order-progress-bar active\"\r\n\r\n                style = {{transform: `translate(${props.translateAmount})`}}\r\n                >\r\n\r\n            </div>\r\n    \r\n \r\n                <Tooltip placement= 'bottom' trigger = \"legacy\" isOpen = {slabTooltipOpen}   toggle = {e=>toggleSlabTooltip(e,'focus')} target = \"step2-select-slab\" > \r\n                    <p>You Must Select Slab First</p>  \r\n                </Tooltip>\r\n\r\n                <Tooltip placement= 'bottom' trigger = \"legacy\"  isOpen = {seriesTooltipOpen} toggle = {e=> toggleSeriesTooltip(e,'focus')}   target=\"step1-select-series\">\r\n                    <p>You Must Select Series First</p> \r\n                </Tooltip>\r\n\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\n \r\n\r\nclass CustomOrderComponent extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n\r\n            translateAmount: \"calc(0% - 15px) , -44px\",\r\n           \r\n            activeImage: null , \r\n            activeProduct:[],\r\n            activeProductsfromSeries:[],  \r\n            activeSeries: [],\r\n\r\n            selectSeries: true, \r\n            selectCut:false,\r\n            selectSlab: false, \r\n            selectCut:false,\r\n            selectFinish:false,\r\n            selectHardware:false,\r\n\r\n            useDefaultFinishImage: true,\r\n            activeFinishImage: \"\",\r\n            activeFinish:[],\r\n            defaultFinish:true,\r\n\r\n            activeHardwareProduct: [],\r\n            viewHardwareProduct: false ,\r\n            targets__Xposition : {}\r\n\r\n        }\r\n        \r\n        this.handleStep =this.handleStep.bind(this);\r\n        this.renderSlabs = this.renderSlabs.bind(this);\r\n        this.renderProduct = this.renderProduct.bind(this);\r\n        this.renderImage = this.renderImage.bind(this); \r\n  \r\n        this.handleFinishSelect = this.handleFinishSelect.bind(this);\r\n        this.renderHardwareProduct = this.renderHardwareProduct.bind(this);\r\n        this.handleNavigation = this.handleNavigation.bind(this);\r\n\r\n        this.getNavTargetPostion = this.getNavTargetPostion.bind(this);\r\n        this.handleResize = this.handleResize.bind(this);\r\n    }\r\n\r\n    \r\n\r\n    handleFinishSelect(e,key){\r\n        this.setState({defaultFinish:false}); \r\n        this.setState({activeFinish:this.props.finishTypes[key]})\r\n    }\r\n\r\n    renderImage(e,key){\r\n        this.setState({activeImage:this.state.activeProduct.galleryImages.nodes[key].sourceUrl})\r\n    }\r\n\r\n    renderSlabs(e,key){\r\n        this.setState({selectSeries: false});\r\n        this.setState({selectSlab:true});\r\n        this.setState({activeSeries : this.props.series[key].node});\r\n        this.setState({activeProductsfromSeries:this.props.products[key]});\r\n        this.setState({translateAmount:`${this.state.targets__Xposition.slabs}px , -44px`})\r\n    }\r\n\r\n    renderProduct(e,key){\r\n             \r\n        this.setState({ selectSlab: false}) ;\r\n        this.setState({selectCut:true}); \r\n        this.setState({activeProduct : this.state.activeProductsfromSeries.products.edges[key].node})\r\n        this.setState({translateAmount:`${this.state.targets__Xposition.cut}px , -44px`})\r\n       \r\n        // console.log(this.props.activeSeries.products.edges[key].node.name)\r\n        \r\n        \r\n    }\r\n\r\n    renderHardwareProduct(e,key,type){\r\n        this.setState({viewHardwareProduct:true});\r\n        if (type === \"mounting hardware\"){\r\n         this.setState({activeHardwareProduct : this.props.mountingHardware[key]})\r\n         console.log(this.props.mountingHardware[key])\r\n        }\r\n        else if(type === \"table legs\"){\r\n         this.setState({activeHardwareProduct : this.props.tableLegs[key]})\r\n         console.log(this.props.tableLegs[key])\r\n        }\r\n        else \r\n         console.log(\"bolts\")\r\n    }\r\n\r\n    handleNavigation(e,destination){\r\n        switch(destination){\r\n            case 'hardware':\r\n            this.setState({viewHardwareProduct:false})\r\n        }\r\n    }\r\n\r\n    getNavTargetPostion(){\r\n\r\n        const navElements = document.getElementsByClassName('custom-order-nav-item');   \r\n\r\n        const slider = document.getElementsByClassName('custom-order-progress-bar');\r\n\r\n         var sliderWidth = slider[0].getBoundingClientRect().width ;\r\n        \r\n        \r\n        // calculate the amount needed to translate the slider so that it lands on the step the user selects\r\n        //-15 for padding  \r\n        //sliderWidth/2 (center of slider)\r\n        //targetXs /2 (center of nav item) \r\n        \r\n        var targetXs = [] ;\r\n        [...navElements].forEach(el =>targetXs.push(el.getBoundingClientRect().x + el.getBoundingClientRect().width/2 - sliderWidth/2 -15 )); \r\n\r\n        var keys = ['series' , 'slabs' , 'cut', 'finish' , 'hardware'] ; \r\n      \r\n        var targets__Xposition = {} ;\r\n\r\n        keys.map( (key,index) => { (targets__Xposition[key] = targetXs[index]) } ) ;\r\n\r\n        console.log('targets__Xposition :',targets__Xposition)\r\n\r\n\r\n        this.setState({targets__Xposition:targets__Xposition})  \r\n    }\r\n\r\n    handleResize(){\r\n        this.state.selectSeries?\r\n        this.handleStep('Series'):\r\n        this.state.selectSlab?\r\n        this.handleStep('Slabs'):\r\n        this.state.SelectCut?\r\n        this.handleStep('Cut'):\r\n        this.state.SelectFinish?\r\n        this.handleStep('Finish'): \r\n        this.handleStep('Hardware')\r\n    }\r\n\r\n     \r\n\r\n\r\n\r\n    handleStep(e){\r\n         \r\n        const setStep =(step)=>{\r\n        switch (step){\r\n        case 'Series':\r\n            this.setState({selectSeries:true})\r\n            this.setState({selectSlab:false})\r\n            this.setState({selectCut:false})\r\n            this.setState({selectFinish:false})\r\n            this.setState({selectHardware:false})\r\n\r\n            this.setState({translateAmount:`${this.state.targets__Xposition.series}px , -44px`})\r\n\r\n        break\r\n        case 'Slabs':\r\n            this.setState({selectSeries:false})\r\n            this.setState({selectSlab:true})\r\n            this.setState({selectCut:false})\r\n            this.setState({selectFinish:false})\r\n            this.setState({selectHardware:false})\r\n           \r\n            this.setState({translateAmount:`${this.state.targets__Xposition.slabs}px , -44px`})\r\n        break\r\n        case 'Cut':\r\n            this.setState({selectSeries:false})\r\n            this.setState({selectSlab:false})\r\n            this.setState({selectCut:true})\r\n            this.setState({selectFinish:false})\r\n            this.setState({selectHardware:false})\r\n           \r\n            this.setState({translateAmount:`${this.state.targets__Xposition.cut}px , -44px`})\r\n        break\r\n        case 'Finish':\r\n            this.setState({selectSeries:false})\r\n            this.setState({selectSlab:false})\r\n            this.setState({selectCut:false})\r\n            this.setState({selectFinish:true})\r\n            this.setState({selectHardware:false})\r\n\r\n            this.setState({translateAmount:`${this.state.targets__Xposition.finish}px , -44px`})\r\n        break\r\n        case 'Hardware' :\r\n            this.setState({selectSeries:false})\r\n            this.setState({selectSlab:false})\r\n            this.setState({selectCut:false})\r\n            this.setState({selectFinish:false})\r\n            this.setState({selectHardware:true})\r\n\r\n            this.setState({translateAmount:`${this.state.targets__Xposition.hardware}px , -44px`})\r\n            break\r\n        }\r\n     \r\n        \r\n\r\n    }\r\n    e.preventDefault()\r\n\r\n    if (e.type === 'click'){\r\n        var step = String(e.target.innerHTML);\r\n        console.log('click event occured: ' ,step)\r\n        setStep(step)\r\n       }\r\n       else {\r\n        console.log(\"not a click event :\" ,e);\r\n        setStep(e)\r\n       }\r\n    }\r\n\r\n    \r\n\r\n    componentDidMount(){\r\n        this.getNavTargetPostion();  \r\n\r\n        window.addEventListener('resize',this.getNavTargetPostion);\r\n        // window.addEventListener('resize',this.handleResize)\r\n       \r\n    }\r\n\r\n    componentWillUnmount(){\r\n        window.removeEventListener('resize',this.getNavTargetPostion)\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n\r\n       \r\n  \r\n\r\n    return(\r\n        <div className = \"custom-order-app\">\r\n\r\n            <React.Fragment>\r\n                <CustomOrderNav\r\n                handleStep = {this.handleStep}\r\n                activeSeries = {this.state.activeSeries}\r\n                activeProduct = {this.state.activeProduct}\r\n                translateAmount = {this.state.translateAmount}\r\n                />\r\n            \r\n            {\r\n            this.props.loading \r\n            ? \r\n            <div className = \"loading-container\">\r\n                    <div className =\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\r\n            </div>\r\n            \r\n            :\r\n\r\n                <CustomOrderStep\r\n                orientation = {this.props.orientation}\r\n\r\n                selectSeries = {this.state.selectSeries}\r\n                selectSlab = {this.state.selectSlab}\r\n                selectCut = {this.state.selectCut}\r\n                selectFinish = {this.state.selectFinish}\r\n                selectHardware = {this.state.selectHardware}\r\n\r\n                series = {this.props.series}\r\n                renderSlabs = {this.renderSlabs}\r\n                activeSeries = {this.state.activeSeries}\r\n\r\n                activeProductsfromSeries = {this.state.activeProductsfromSeries}\r\n                activeProduct = {this.state.activeProduct}\r\n                renderProduct = {this.renderProduct}\r\n                activeImage = {this.state.activeImage}\r\n                renderImage = {this.renderImage}\r\n\r\n                finishTypes = {this.props.finishTypes}\r\n                defaultFinish = {this.state.defaultFinish}\r\n                activeFinish = {this.state.activeFinish}\r\n                handleFinishSelect = {this.handleFinishSelect}\r\n\r\n                tableLegs = {this.props.tableLegs}\r\n                mountingHardware = {this.props.mountingHardware}\r\n                renderHardwareProduct = {this.renderHardwareProduct}\r\n                viewHardwareProduct = {this.state.viewHardwareProduct}\r\n                activeHardwareProduct = {this.state.activeHardwareProduct}\r\n\r\n                handleNavigation = {this.handleNavigation}\r\n\r\n                \r\n\r\n                \r\n                />\r\n            }\r\n\r\n            </React.Fragment>\r\n\r\n          \r\n        </div>\r\n        );\r\n    };\r\n}\r\nexport default CustomOrderComponent; ","import React from 'react'; \r\nimport {Collapse } from 'reactstrap' ;\r\nimport { ScrollTo } from \"react-scroll-to\";\r\nimport deal from '../shared/icons/deal.png'\r\nimport conversation from '../shared/icons/conversation.png';\r\nimport chair from '../shared/icons/chair.png';\r\nimport compass from '../shared/icons/compass.png';\r\nimport shoppingCart from '../shared/icons/shopping-cart.png'\r\nimport getInitialProps from '../courier/graphQL-apollo';\r\nimport getProducts from '../courier/getProducts';\r\nimport getCustomProducts from '../courier/getCustomProducts';\r\nimport getTableLegProducts from '../courier/getTableLegProducts';\r\nimport getMountingHardware from '../courier/getMountingHardware';\r\nimport getFinishes from '../courier/getFinishes';\r\nimport renderHTML from 'react-render-html';\r\nimport AddToCartButton from './cart/addToCart';\r\nimport CustomOrderComponent from './customOrderComponent';\r\n\r\nconst storeContent = [\r\n    {\r\n        icon: conversation,\r\n        instructions:\" Contact Me. Head over to the contact section and fill out the custom orders form.\", \r\n        link:\"\"\r\n    },\r\n    {\r\n        icon: deal,\r\n        instructions:\"Contract. You send a request, I offer a quote and we strike a deal \", \r\n        link:\"\"\r\n        },\r\n    {\r\n        icon: chair,\r\n        instructions:\" Enjoy! Your custom order is shipped directly to you.\", \r\n        link:\"\"\r\n        }\r\n]\r\n\r\nconst storeInventory = [\r\n\r\n    {   \r\n        id: 0,\r\n        title: \"Karsten Coffee Table\",\r\n        price: \"$500\",\r\n        category: \"coffee tables\",\r\n        description: \"The Karsten coffee table offers versatile and charming style with rustic industrial materials. Crafted from natural wood and powder-coated steel, it boasts a large profile with two large drawers for storage.\", \r\n        images:[\r\n            \"https://cdn.shopify.com/s/files/1/1920/4697/products/S13_KAR-CT_001.jpg?v=1554923627\",\r\n            \"https://cdn.shopify.com/s/files/1/1920/4697/products/S13_KARSTEN_COFFEE_TABLE.jpg?v=1554923627\",\r\n            \"https://cdn.shopify.com/s/files/1/1920/4697/products/S13_KAR-CT_002.jpg?v=1554923627\",\r\n            \"https://cdn.shopify.com/s/files/1/1920/4697/products/S13_KAR-CT_003.jpg?v=1554923627\",\r\n            \"https://cdn.shopify.com/s/files/1/1920/4697/products/S13_KAR-CT_004.jpg?v=1554923627\",\r\n            \"https://cdn.shopify.com/s/files/1/1920/4697/products/S13_KAR-CT_005.jpg?v=1554923627\",\r\n                ],\r\n\r\n        details:\r\n                [{\r\n                    materials:\" Yo Mama's Couch\",\r\n                    finish: \" \" , \r\n                    dimensions: `24\"W x 22.5\"D x 40.7\"H` , \r\n                    shipping : \"\"               \r\n                }]\r\n               \r\n    },\r\n    {\r\n        id: 1,\r\n        title:\"Campel Media Stand\",\r\n        price: \"$799\",\r\n        category: \"media stands\",\r\n        description: \"When modern design comes together with rustic style, the result is the charming Campbell 81” media stand. Constructed of solid acacia in a weathered finish, with interlaced bent-planks, it also boasts a wire-brushed texture, incorporating the natural knots in the wood grain into the design. As a result, the drift wood look evokes a dreamy coastal vibe. Its three open cubbies, two spacious drawers and open lower shelf allow ample storage for all your equipment. The long, sleek body with angled, tapered legs bring modern touches to your decor while the sturdy, natural materials blend in the casual country feel and make this piece an impressive compliment to any room that becomes its home.\", \r\n        images:[\r\n            \"https://cdn.shopify.com/s/files/1/1920/4697/products/TP03_372-373-81MS_005B.jpg?v=1554620197\",\r\n            \"https://cdn.shopify.com/s/files/1/1920/4697/products/TP03_372-373-81MS_004B.jpg?v=1554620197\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n                ],\r\n        details:\r\n        [{\r\n            materials:\"Solid Acacia\",\r\n            finish: \" Weathered Acacia\" , \r\n            dimensions: `81\"w  x  18\"D  x  29\"H`, \r\n            shipping : \"\"               \r\n        }]\r\n    },\r\n    {\r\n        id: 2,\r\n        title:\"Chesterfield BookShelf\",\r\n        price: \"$699\",\r\n        category: \"bookshelf\",\r\n        description: \"Inspired by American modern design, the Mid-Century Wide Bookshelf borrows its slim legs and beveled edges from iconic '50s and '60s furniture silhouettes. Each piece is GREENGUARD-certified and made from sustainably-sourced wood in a Fair Trade Certified™ facility\", \r\n        images:[\r\n            \"https://www.westelm.com/weimgs/rk/images/wcm/products/201922/0226/mid-century-38-bookshelf-acorn-o.jpg\",\r\n            \"https://www.westelm.com/weimgs/rk/images/wcm/products/201922/0224/mid-century-38-bookshelf-acorn-o.jpg\",\r\n            \"https://www.westelm.com/weimgs/rk/images/wcm/products/201922/0194/mid-century-38-bookshelf-acorn-o.jpg\",\r\n            \"https://www.westelm.com/weimgs/rk/images/wcm/products/201922/0273/mid-century-38-bookshelf-acorn-o.jpg\",\r\n            \"https://www.westelm.com/weimgs/rk/images/wcm/products/201922/0097/mid-century-38-bookshelf-acorn-o.jpg\",\r\n            \"\",\r\n                ],\r\n        details:\r\n        [{\r\n            materials:\" Kiln-dried Acorn\",\r\n            finish: \"Water-Based Acorn\" , \r\n            dimensions: '38\"W x 15\"D x 70.25\"H', \r\n            shipping : \"\"               \r\n        }]\r\n    },\r\n    {\r\n        id: 3,\r\n        title:\"Mid-Century Round Expandable Dining Table\",\r\n        price: \"$699\",\r\n        category: \"table\",\r\n        description: \"Offering plenty of room to grow, our Mid-Century Expandable Round Dining Table seats four normally and six when extended, making it perfect for family meals and dinner parties alike. Its sturdy contract-grade frame is made from wood that's certified to Forest Stewardship Council® (FSC) standards.\", \r\n        images:[\r\n            \"https://www.westelm.com/weimgs/rk/images/wcm/products/201932/0006/mid-century-round-expandable-dining-table-1-o.jpg\",\r\n            \"https://www.westelm.com/weimgs/rk/images/wcm/products/201932/0005/mid-century-round-expandable-dining-table-o.jpg\",\r\n            \"https://www.westelm.com/weimgs/rk/images/wcm/products/201936/0002/mid-century-round-expandable-dining-table-o.jpg\",\r\n            \"https://www.westelm.com/weimgs/rk/images/wcm/products/201913/0001/classic-cafe-upholstered-dining-chair-o.jpg\",\r\n            \"https://www.westelm.com/weimgs/rk/images/wcm/products/201936/0006/mid-century-round-expandable-dining-table-o.jpg\",\r\n            \"\",\r\n                ],\r\n        details:\r\n        [{\r\n            materials:\"Kiln-dried solid and engineered wood for extra durability.\",\r\n            finish: \" Walnut wood veneer over engineered wood.\" , \r\n            dimensions: '42-60\"W x  42\"D x 30.4\"H', \r\n            shipping : \"\"               \r\n        }]\r\n    },\r\n    {\r\n        id: 4,\r\n        title: \" Industrial Modular Storage\",\r\n        price: \"$699\",\r\n        category: \"shelf\",\r\n        description: \"Made from richly-grained solid mango wood and supported by blackened steel frames, our Industrial Modular Storage Collection combines form, function and versatility. It offers plenty of storage and shelving space, while its freestanding design means that you can easily pair it with other pieces in the collection to create a set that's right for you. The natural variations in mango wood make each piece subtly unique.\", \r\n        images:[\r\n            \"https://www.westelm.com/weimgs/rk/images/wcm/products/201922/0433/img61o.jpg\",\r\n            \"https://www.westelm.com/weimgs/rk/images/wcm/products/201922/0188/industrial-modular-17-open-closed-storage-o.jpg\",\r\n            \"https://www.westelm.com/weimgs/rk/images/wcm/products/201922/0108/industrial-modular-49-desk-o.jpg\",\r\n            \"https://www.westelm.com/weimgs/rk/images/wcm/products/201922/0220/industrial-modular-open-closed-storage-shelves-o.jpg\",\r\n            \"https://www.westelm.com/weimgs/rk/images/wcm/products/201922/0041/build-your-own-industrial-modular-storage-o.jpg\",\r\n            \"https://www.westelm.com/weimgs/rk/images/wcm/products/201922/0019/build-your-own-industrial-modular-storage-o.jpg\",\r\n                ],\r\n        details:\r\n        [{\r\n            materials:\"Solid mango wood with natural color variations.\",\r\n            finish: \" \" , \r\n            dimensions: `17\"W x \" 17\"D x \" 84\"H`, \r\n            shipping : \"\"               \r\n        }]\r\n    },\r\n    {\r\n        id: 5,\r\n        title:\"Thorsten Desk\",\r\n        price: \"$279\",\r\n        category: \"\",\r\n        description: \"When you need a substantial amount of workspace the Thorsten 63” desk is an excellent option. Solid rubberwood legs in a light wood finish flare at a slight angle supporting the attractive top in a walnut wood grain finish. Its contrasting two-tone color palette adapts to many styles of decor, making it an easy choice as the key component for your office. Additional features incorporated into the design include an aluminum soft-closing cable organizer to conveniently arrange your computer or phone cables, as well as a matching modesty panel to complete the professional look.\", \r\n        images:[\r\n            \"https://cdn.shopify.com/s/files/1/1920/4697/products/P21_PX71675_001_7cab4713-741f-4534-a84a-bc4f5aa1158f.jpg?v=1554509623\",\r\n            \"https://cdn.shopify.com/s/files/1/1920/4697/products/P21_PX71675_002.jpg?v=1554509622\",\r\n            \"https://cdn.shopify.com/s/files/1/1920/4697/products/P21_PX71675_002_59a06f4b-50c9-4b12-a01d-b9436d8e3ec5.jpg?v=1554509622\",\r\n            \"https://cdn.shopify.com/s/files/1/1920/4697/products/P21_PX71675_003.jpg?v=1554509622\",\r\n            \"https://cdn.shopify.com/s/files/1/1920/4697/products/P21_PX71675_003.jpg?v=1554509622\",\r\n            \"\",\r\n                ],\r\n        details:\r\n        [{\r\n            materials:\"Fiberboard, Rubberwood, Melamine\",\r\n            finish: \"Walnut \" , \r\n            dimensions: '63\"W x 29.5\"D x 29.6\"H' , \r\n            shipping : \"\"               \r\n        }]\r\n    },\r\n]\r\n\r\nclass ProductView extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            activeFrame: Number ,\r\n            defaultView: true ,\r\n            collapseDescription: false,\r\n            collapseDetails:false\r\n            \r\n        }\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n        this.handleFocus = this.handleFocus.bind(this); \r\n    }\r\ntoggle(e,target) {\r\n    // console.log(this.props)\r\n    var height =  this.state.collapseDescription===true? 3*(window.innerHeight + 30)   :4*(window.innerHeight + 30) - 30 ;\r\n    // window.scrollTo({\r\n    //     top: height,\r\n    //     left: 0,\r\n    //     behavior: 'smooth'\r\n    //   });\r\n    target === \"description\" ?\r\n    this.setState(state => ({ collapseDescription: !state.collapseDescription })) \r\n    :   \r\n    \r\n    this.setState(state =>({ collapseDetails: !state.collapseDetails }));\r\n   \r\n      }\r\n\r\nhandleFocus(e,index){\r\n    this.setState({defaultView:false})\r\n    this.setState({activeFrame:index})\r\n    \r\n}\r\n\r\n    \r\n    render(){   \r\n\r\n        const product = this.props.item;\r\n\r\n        return( \r\n            <React.Fragment>\r\n                <div className = {this.props.orientation === \"portrait\" ? \"col-12\" : \"col-6\" }>\r\n                    <h4 className = \"d-flex justify-content-center\">{product.name}</h4>\r\n                    {product.stockStatus === \"OUT_OF_STOCK\"? <div className = \"sold-badge\">SOLD</div>: null}\r\n                    <img width=\"100%\" src = {this.state.defaultView === true? product.image.sourceUrl: product.galleryImages.nodes[this.state.activeFrame].sourceUrl} alt={product.name} />\r\n                    <div className = \"col-12 no-padding  d-flex justify-content-center\">\r\n                    {\r\n                      product.galleryImages.nodes.map((image,index)=>{\r\n                          return(\r\n                              <div  key = {index} className = \"col-2 no-padding store-item-preview\">\r\n                              <img onClick = {e=>{this.handleFocus(e,index)}} height = \"100%\" width = \"100%\" src = {image.sourceUrl} alt = {`inventory-item-${index}`}/> \r\n                          </div>\r\n      \r\n                          )\r\n      \r\n                      })               \r\n                    }\r\n                  </div>\r\n                </div> \r\n\r\n            {/* PRODUCT DETAILS */}\r\n            \r\n                <div className = {this.props.orientation === \"portrait\" ?  \" col-12\" : \"col-6\"}>\r\n                    <h4 className=\"text-center\">{this.props.item.price}</h4>\r\n\r\n                  \r\n                    <AddToCartButton product = {product}/>\r\n\r\n                        <div className = \"col-12 mb-2 no-padding d-flex justify-content-start\">\r\n                            <div  onClick = {e=>this.toggle(e,\"description\")} className={this.state.collapseDescription?\"circle-plus closed opened\":\"circle-plus closed \" }>\r\n                                <div className=\"circle\">\r\n                                    <div className=\"horizontal\"></div>\r\n                                    <div className=\"vertical\"></div>\r\n                                </div>\r\n                            </div>\r\n                        DESCRIPTION\r\n                        </div>\r\n                        <Collapse isOpen={this.state.collapseDescription}>\r\n                            <div className = \"col-12 no-padding\">\r\n                                {renderHTML(product.description)}\r\n                            </div>\r\n                        </Collapse>\r\n\r\n\r\n                        <div className =  \"col-12 mb-2 no-padding d-flex justify-content-start\">\r\n                            <div  onClick = {e=>this.toggle(e,\"details\")} className={this.state.collapseDetails?\"circle-plus closed opened\":\"circle-plus closed \" }>\r\n                                <div className=\"circle\">\r\n                                    <div className=\"horizontal\"></div>\r\n                                    <div className=\"vertical\"></div>\r\n                                </div>\r\n                            </div>\r\n                        DETAILS + DIMENSIONS\r\n                        </div>\r\n                        <Collapse isOpen={this.state.collapseDetails}>\r\n                            <div className = \"col-12 no-padding\">\r\n                                <h6>MATERIALS</h6>\r\n                                {\r\n                                \r\n                                product.attributes !== null \r\n                                ?\r\n                                product.attributes.nodes.map( (item,index) => {\r\n\r\n                                    return(\r\n                                        <p key ={index}>\r\n                                            {item.name} : {item.options}\r\n                                        </p>\r\n\r\n                                    );\r\n                                })\r\n\r\n                    \r\n                                :\r\n                                null\r\n                                }\r\n                                \r\n                                <h6>DIMENSIONS</h6>\r\n                            <p>L {product.length}\" W {product.width}\"  H {product.height}\" </p>\r\n                            </div>\r\n                        </Collapse>\r\n\r\n                </div>\r\n                  \r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nclass ShopCatalouge extends React.Component{\r\n    \r\n    \r\n    \r\n\r\n    render(){\r\n\r\n    const products = this.props.products;        \r\n    var grid = this.props.orientation === \"portrait\" ? \"col-6\" : \"col-4\"\r\n    // var height = this.props.orientation === \"portrait\" ? \"26vh\" : \"50vh\" ; \r\n        return(\r\n            \r\n    this.props.catLoading \r\n    ?  \r\n    <div className = \"loading-container\">\r\n    <div className =\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\r\n    </div>\r\n    :       <div  className = \"row\">\r\n                \r\n \r\n                { \r\n                    this.props.viewProduct === false\r\n                    ? \r\n                    products.map((item,index)=>{\r\n                        return(\r\n                         \r\n                            <div key = {index} onClick = {e=>this.props.renderProductView(e,index)} \r\n                            className = {grid + \" catalouge-item\"}\r\n                            \r\n                                >\r\n                                <div className = \"inventory-container\">\r\n                                    {/* <div className = \"inventory-item\"\r\n                                        style ={{\r\n                                            backgroundImage: `url(${item.images[0]})`,\r\n                                            backgroundSize:\"cover\",\r\n                                            width:\"100%\" ,\r\n                                            height:height\r\n                                        }}\r\n                                        >\r\n\r\n                                    </div> */}\r\n                                    {item.stockStatus === \"OUT_OF_STOCK\"? <div className = \"sold-badge\">SOLD</div>: null}\r\n                                    <img width = \"100%\" src = {item.image.sourceUrl} alt = {`item-${index}`}></img>\r\n                                    <h4>{item.name}</h4>\r\n                                    <h5>{item.price}</h5>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                        );\r\n                        \r\n                    })\r\n                    :\r\n                    <ProductView orientation = {this.props.orientation} item = {products[this.props.activeItemId] } />\r\n                }\r\n     \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass CustomOrderInstructions extends React.Component{\r\n  \r\n    render(){\r\n        var height = this.props.orientation ===\"landscape\"? \"65vh\" : \"25vh\" ; \r\n        var margin = this.props.orientation ===\"landscape\"? \"0px\" : \"2vh\" ; \r\n        var iconPosition = this.props.orientation ===\"landscape\"? \"28%\" : \"5%\";\r\n    \r\n        return(\r\n            \r\n            <div className = \"store-content-step-description\"\r\n            style = {{\r\n                maxHeight: height,  \r\n                height: \"100%\",\r\n                marginBottom: margin,                               \r\n            }} >\r\n                <div className = \"row \">\r\n                {this.props.orientation===\"landscape\"? <h2 className = \"col-12\">{`Step ${this.props.index+1}`}</h2>:null}\r\n                    \r\n                \r\n                    <div className = {this.props.orientation ===\"landscape\"?\"col-12 \":\"col-4\"}>\r\n                        {this.props.orientation===\"landscape\"? null: <h2>{`Step ${this.props.index+1}`}</h2>}\r\n                        <img className = \"store-icons rounded-circle\" width = {this.props.orientation===\"landscape\"?\"40%\":\"100%\"}src = {this.props.item.icon} alt={this.props.item.icon}\r\n                        style={{\r\n                            position:\"relative\",\r\n                            left:iconPosition\r\n                        }}/>\r\n                    </div> \r\n                    <div className = {this.props.orientation ===\"landscape\"? \"col-12\" :\"col-8 d-flex align-items-center\"}>   \r\n                        <p>\r\n                            {this.props.item.instructions}\r\n                        </p>\r\n                    </div>\r\n                </div> \r\n          \r\n            </div>   \r\n        )\r\n    }\r\n}\r\n\r\nclass StoreOptions extends React.Component{\r\n    render(){\r\n        var grid = this.props.orientation === \"landscape\" ? \"col-6\" : \"col-12\";\r\n        var height = this.props.orientation === \"landscape\" ? \"75vh\" : \"35.5vh\";\r\n        var margin = this.props.orientation === \"landscape\" ? \"0vh\" : \"2vh\";\r\n        return(\r\n            <div className = \"store-options\" className = \"row  d-flex  justify-content-center store-content-container\"> \r\n                <div className = {grid}>\r\n                <div  onClick = { e=>this.props.handleView(e,\"catalog\")} className = \"store-content-step-description\"\r\n                        style = {{\r\n                            //  maxHeight: \"75vh\", \r\n                            // display:\"flex\",\r\n                            // flexWrap:\"wrap\",\r\n                            // alignContent:\"center\", \r\n                            height:height,\r\n                            marginBottom: margin,                               \r\n                        }} >\r\n                        \r\n                                    <h2> Shop Catalouge</h2>\r\n                                    <div className = \"row d-flex align-items-center justify-content-center\">\r\n                                    <img className = \"store-icons rounded-circle\" width = {this.props.orientation===\"landscape\"?\"60%\": \"40%\"} src = {shoppingCart} alt = \"shopping-cart\"></img>  \r\n                                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className = {grid}>\r\n                <div onClick = { e=>this.props.handleView(e,\"custom\")} className = \"store-content-step-description\"\r\n                        style = {{\r\n                            //  maxHeight: \"75vh\", \r\n                            // display:\"flex\",\r\n                            // flexWrap:\"wrap\",\r\n                            alignContent:\"center\", \r\n                            height:height,\r\n                            marginBottom: margin,                               \r\n                        }} >\r\n                        \r\n                                    <h2>Place a Custom  Order</h2>\r\n                                    <div className = \"row d-flex align-items-center justify-content-center\">\r\n                                    <img className = \"store-icons rounded-circle\" width = {this.props.orientation===\"landscape\"?\"60%\":\"40%\"}src = {compass} alt = \"compass\" ></img>\r\n                                    </div>\r\n                                    \r\n                    \r\n                            \r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}\r\nclass Store extends React.Component{\r\n\r\n    getInitialProps = getInitialProps.bind(this);\r\n    getProducts = getProducts.bind(this);\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            viewCustom: false,\r\n            viewCatalouge:false ,  \r\n            viewProduct:false , \r\n            activeItemId : Number ,\r\n            orientation:\"\",\r\n            swiped: false,\r\n            inventory: [],\r\n            tableLegs:[],\r\n            mountingHardware: [] , \r\n            finishTypes: [],\r\n            loading: true ,\r\n            catLoading:true\r\n            \r\n\r\n        }\r\n    this.renderProductView =this.renderProductView.bind(this);\r\n    this.backToCatalouge =this.backToCatalouge.bind(this);\r\n    // this.handleView = this.handleView.bind(this);\r\n    this.handleOrientation = this.handleOrientation.bind(this);\r\n    // this.revertView = this.revertView.bind(this);\r\n    // swipe left to right to back\r\n\r\n    this._onTouchStart = this._onTouchStart.bind(this);\r\n    this._onTouchMove = this._onTouchMove.bind(this);\r\n    this._onTouchEnd = this._onTouchEnd.bind(this);\r\n    this._swipe = {};\r\n    this.minDistance = 150;\r\n}\r\n\r\n\r\n\r\nrenderProductView(e,productID){\r\n    this.props.handleScrollableFocus()\r\n    this.setState({viewProduct:true})\r\n    this.setState({activeItemId:productID})\r\n   \r\n}\r\n\r\nbackToCatalouge(){\r\n    this.setState({viewProduct:false});\r\n    // return this.props.handleScrollableFocus()\r\n}\r\n\r\n// revertView(){\r\n    \r\n//     this.setState({viewCatalouge:false});\r\n//     this.setState({viewCustom:false});\r\n//     window.scrollTo(0,window.innerHeight*3+90)\r\n//     return this.props.handleScrollableFocus(this.props.isUserInteractingWithStore);\r\n    \r\n// }\r\n// handleView(e,param){\r\n\r\n//     this.props.handleScrollableFocus();\r\n//     param ===\"custom\"\r\n//     ?\r\n//     this.setState({viewCustom:true}) \r\n//     :\r\n//     this.setState({viewCatalouge:true})  \r\n// }\r\n\r\nhandleOrientation(){\r\n    if (window.innerWidth >= window.innerHeight) {\r\n        this.setState({orientation:\"landscape\"})  \r\n    }\r\n     else  {\r\n         this.setState({orientation:\"portrait\"})\r\n    }\r\n}\r\n\r\n// swipe left to right to go back\r\n\r\n_onTouchStart(e) {\r\n    const touch = e.touches[0];\r\n    this._swipe = { x: touch.clientX };\r\n    this.setState({ swiped: false });\r\n  }\r\n\r\n  _onTouchMove(e) {\r\n    if (e.changedTouches && e.changedTouches.length) {\r\n      const touch = e.changedTouches[0];\r\n      this._swipe.swiping = true;\r\n    }\r\n  }\r\n\r\n  _onTouchEnd(e) {\r\n    const touch = e.changedTouches[0];\r\n    const absX = (touch.clientX - this._swipe.x);\r\n    if (this._swipe.swiping && absX > this.minDistance ) {\r\n      this.props.onSwiped && this.props.onSwiped();\r\n      this.setState({ swiped: true });\r\n    //    window.alert(\"you just swiped 50px\")\r\n     this.state.viewProduct===true?this.backToCatalouge():this.props.revertView()\r\n    }\r\n    this._swipe = {};\r\n  }\r\n\r\ncomponentWillMount(){\r\n    this.handleOrientation()\r\n}\r\ncomponentDidMount(){ \r\n\r\n    // listen for resize events and change viewport state to either portrait or landscape \r\n    window.addEventListener(\"resize\",this.handleOrientation) \r\n\r\n    // get all products that appear in catalog\r\n    // @TODOs need to rename this function to something more descriptive \r\n    getInitialProps().then(result=>{\r\n\r\n        console.log('available products in catalog',result)\r\n        this.setState({inventory:result})\r\n        this.setState({catLoading:false})\r\n    })\r\n\r\n    // get all products that appear in the custom section of store\r\n    // get all the \"series\" from which these products are children of\r\n    // @TODOS need to handle errors\r\n    getCustomProducts().then(result=>{\r\n             \r\n        const series = result.edges ; \r\n        const products = result.nodes; \r\n\r\n        this.setState({series:series}); \r\n        this.setState({products:products});\r\n\r\n        console.log(\"available series :\", series, 'all available products in series :', products)\r\n        this.setState({loading:false});\r\n        \r\n    })\r\n\r\n    // get all the table leg products that appear in custom / hardware section\r\n    // @TODOS need to handle errors\r\n    getTableLegProducts().then(result=>{\r\n        \r\n        const tableLegs = result ; \r\n\r\n        this.setState({tableLegs : tableLegs})\r\n\r\n        \r\n    })\r\n    \r\n    // get all mounting hardware products that appear in custom /mounting hardware section\r\n    // @TODOS need to handle errors\r\n    getMountingHardware().then(result=>{\r\n        \r\n        const mountingHardware = result ; \r\n\r\n        this.setState({mountingHardware: mountingHardware })\r\n    })\r\n\r\n    // get all finish types that are available in the custom / finish section\r\n    // @TODOS need to handle errors\r\n    getFinishes().then(result => {\r\n\r\n        const finishTypes = result ; \r\n        console.log('available finish types: ', finishTypes)\r\n        this.setState({finishTypes:finishTypes});\r\n    })\r\n\r\n    \r\n}\r\n\r\ncomponentWillUnmount(){\r\n    window.removeEventListener(\"resize\",this.handleOrientation)\r\n}\r\nrender(){\r\n    var grid = this.state.orientation ===\"landscape\"? \"col-4\" : \"col-12\" ;\r\n    var margin = this.props.isUserInteractingWithStore ? '0px' : '30px';\r\n    return(\r\n        this.props.isUserInteractingWithBlog\r\n        ?\r\n        null\r\n        :\r\n        <div \r\n            id = \"store\"\r\n            className = \"store-page page\"\r\n            onTouchStart = {this._onTouchStart}\r\n            onTouchMove =  {this._onTouchMove}\r\n            onTouchEnd = {this._onTouchEnd}\r\n            // style = {\r\n            //     this.props.viewCatalog===true\r\n            //     ? \r\n            //     {minHeight:\"100vh\", height:\"100%\", marginBottom:'0px'}\r\n            //     :\r\n            //     {minHeight:\"100vh\",height:'100%',marginBottom:\"30px\"}\r\n            //         }\r\n                >\r\n\r\n            {\r\n                this.props.isUserInteractingWithStore\r\n                ?\r\n                this.props.viewCatalog ? <h1 className= \"store-page-title page-title\">Catalog</h1> : null\r\n                :\r\n                <h1 className= \"store-page-title page-title\">Store</h1>\r\n\r\n            }\r\n                \r\n              \r\n               <div className = \"container-fluid\"\r\n               \r\n            //    style = {{paddingTop:\"80px\"}}\r\n               >   \r\n                {(this.props.viewCatalog===false && this.props.viewCustom===false) \r\n\r\n                ? \r\n                \r\n                <StoreOptions \r\n                handleView = {this.props.handleView} \r\n                orientation = {this.state.orientation}\r\n                /> \r\n                \r\n                : \r\n                \r\n                this.props.viewCustom   \r\n                \r\n                ? \r\n         \r\n                <CustomOrderComponent\r\n                    series = {this.state.series}\r\n                    products = {this.state.products}\r\n                    orientation = {this.state.orientation}\r\n                    tableLegs = {this.state.tableLegs}\r\n                    mountingHardware = {this.state.mountingHardware}\r\n                    finishTypes = {this.state.finishTypes}\r\n                    loading = {this.state.loading}   \r\n                    />\r\n                :\r\n                <ShopCatalouge \r\n                    products = {this.state.inventory} \r\n                    orientation = {this.state.orientation} \r\n                    renderProductView={this.renderProductView} \r\n                    viewProduct = {this.state.viewProduct} \r\n                    activeItemId={this.state.activeItemId}\r\n                    catLoading = {this.state.catLoading}\r\n                    />\r\n\r\n               }\r\n               </div> \r\n               {\r\n                   (this.props.viewCatalog ===true )?\r\n\r\n        \r\n                         <div onClick = {this.state.viewProduct ===true ? this.backToCatalouge : this.props.revertView } className=\"brk-btn store-back-btn\"\r\n                         style = {this.props.viewCatalog?{top:\"-10px\" , left: \"calc(100% - 125px)\" }:{top:\"10px\", left: \"calc(100% - 125px)\" }}>\r\n                             back\r\n                     </div>                \r\n                :\r\n                null\r\n                }\r\n\r\n          {this.props.viewCatalog || this.props.viewCustom\r\n          ?\r\n          null\r\n          :\r\n          <div className = \"row d-flex justify-content-center\">\r\n          \r\n            <div className = \"down store\" onClick ={(e) => this.props.downBtnScroll(e,'contact')}/>\r\n              \r\n          </div>\r\n          }\r\n\r\n        </div>\r\n    )\r\n}\r\n}\r\n\r\nexport default Store","import React  from 'react';\r\nimport {Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport { ScrollTo } from \"react-scroll-to\";\r\n\r\n \r\n\r\nclass Contact extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            orientation : \"\",\r\n             \r\n        }\r\n        this.handleOrientation = this.handleOrientation.bind(this);\r\n    }\r\n\r\n    handleOrientation(){\r\n        if (window.innerWidth >= window.innerHeight) {\r\n            this.setState({orientation:\"landscape\"})  \r\n        }\r\n         else  {\r\n             this.setState({orientation:\"portrait\"})\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.handleOrientation()\r\n    }\r\n    componentDidMount(){\r\n        window.addEventListener(\"resize\",this.handleOrientation)\r\n       \r\n    }\r\n        \r\n    render(){\r\n        var grid = this.state.orientation === \"portrait\" ? \"col-12 pt-3\" : \"col-6\" ; \r\n        var row =  this.state.orientation === \"portrait\" ? \"row\" : \"d-flex flex-row-reverse pt-3\";\r\n        return(\r\n\r\n            this.props.isUserInteractingWithStore || this.props.isUserInteractingWithBlog\r\n            ?\r\n            null\r\n            :\r\n            <React.Fragment>\r\n\r\n                    <div id = 'contact' className= \"contact-page\">\r\n                        <div className = \"container-fluid\">\r\n                        \r\n\r\n                            <h1 className =\"text-center contact-header\"> Contact </h1>\r\n\r\n                            <div className = {row} >\r\n                            <div className = {grid}>\r\n                                <p>\r\n                                    Have an idea for that perfect center piece kitchen dinning table?  Looking for the right shelf to complete your industrial minimalist office or study room? I wanna hear about it!\r\n                                    Please fill out this form and I will get back to you as soon as I can. Thank You!\r\n                                </p>                        \r\n                            </div> \r\n                            <div className = {grid}>\r\n                                <Form>\r\n                                    <FormGroup>\r\n                                    <Label for=\"name\">Name</Label>\r\n                                    <Input type=\"name\" name=\"name\" id=\"name\" placeholder=\"Name\" />\r\n\r\n                                    <Label for=\"email\">Email</Label>\r\n                                    <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Email\" />\r\n\r\n                                    <Label for=\"phone\">Phone</Label>\r\n                                    <Input type=\"phone\" name=\"phone\" id=\"phone\" placeholder=\"Phone\" />\r\n\r\n\r\n                                    </FormGroup>\r\n\r\n                                    <FormGroup>\r\n                                        <Label for=\"message\">Message</Label>\r\n                                        <Input type=\"textarea\" name=\"message\" id=\"message\" />\r\n                                    </FormGroup>\r\n                                    <div className = \"text-center send-btn\">\r\n                                        SEND\r\n                                    </div>\r\n                                </Form>\r\n                            </div>\r\n\r\n\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                        <div className = \"row d-flex justify-content-center\">\r\n                        <ScrollTo>\r\n                            {({ scroll }) => (\r\n                                <div className = \"down contact\"  onClick = {(e)=>this.props.downBtnScroll(e,'checkout') }/>\r\n                                )}\r\n                            </ScrollTo>\r\n                                \r\n\r\n                        </div>\r\n                    </React.Fragment>\r\n         \r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact ","import React from 'react'\r\nimport CheckOutPage from './cart/CheckOut';\r\nimport { Elements } from 'react-stripe-elements';\r\n\r\nclass CheckOut extends React.Component{\r\n\r\n\r\n\r\n    render(){\r\n        return(\r\n            this.props.isUserInteractingWithBlog\r\n            ?\r\n            null\r\n            :\r\n            <Elements>\r\n                <div id = \"checkout\" className = \"checkout-page\">\r\n                    <div className = \"container-fluid\">\r\n                        \r\n                        <div className = \"row d-flex justify-content-center\">\r\n                            <h1>Check Out</h1>                    \r\n                        </div>\r\n\r\n                        <CheckOutPage/>\r\n                    \r\n                    </div>\r\n                </div>\r\n             </Elements>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default CheckOut","export const GALLERY = [\r\n    { \r\n    id: 0,\r\n    title:'Grey Table',\r\n    image: '/assets/images/greyTable.jpg',\r\n    description:'Awesome table I made.'\r\n    },\r\n    { \r\n    id: 1,\r\n    title:'Walk on The Beach',\r\n    image: '/assets/images/aboutPic.jpg',\r\n    description:'Walk on the Beach with my dog Moch on a simple mission to enjoy life and make great custom wooden furniture'                                        \r\n    },\r\n    { \r\n    id: 2,\r\n    title:'Live Edge Shelf',\r\n    image: '/assets/images/gallery1.jpg',\r\n    description:'Lacquer finish live-edge cedar shelf.'                    \r\n    },\r\n    { \r\n    id: 3,\r\n    title:'New Slab',\r\n    image: '/assets/images/gallery2.jpg',\r\n    description:'Cuttin a new slab of wood from some old growth cedar for what will soon be an awesome table!  '                    \r\n    },\r\n    { \r\n    id: 4,\r\n    title:'Precision',\r\n    image: '/assets/images/gallery3.jpg',\r\n    description:'Taking measurements for a client on a table.'                    \r\n    },\r\n    { \r\n    id: 5,\r\n    title:'Live Edge Shelf',\r\n    image: '/assets/images/gallery4.jpg',\r\n    description:'Lacquer finish live-edge cedar shelf.'\r\n    //description: 'Everyday carry affogato poke bicycle rights freegan. Mixtape coloring book leggings asymmetrical gastropub distillery trust fund single-origin coffee subway tile hot chicken dreamcatcher. Swag poutine church-key migas banh mi. Williamsburg XOXO tacos knausgaard fam pork belly wayfarers vape waistcoat heirloom raclette sriracha cornhole gochujang. Bitters pug butcher, tilde small batch vinyl raclette bicycle rights helvetica enamel pin tote bag put a bird on it portland mixtape. Art party bespoke gentrify, lo-fi keffiyeh cornhole helvetica four loko succulents blue bottle XOXO cold-pressed DIY. Gochujang banjo fashion axe direct trade stumptown, mustache craft beer taxidermy pug la croix street art kogi mixtape meggings glossier.'\r\n    },\r\n\r\n\r\n];","import React from 'react' ;\r\nimport lozad from 'lozad' ;\r\n\r\nclass Frame extends React.Component{\r\n    constructor(props){\r\n    super(props);\r\n    this.observer = lozad();\r\n        this.state ={\r\n            isClicked:false,\r\n            \r\n        }\r\n        this.handleClick = this.handleClick.bind(this)\r\n    }\r\n\r\n\r\n    handleClick(){\r\n     \r\n        this.props.handleFocus(this.props.item.id)\r\n    }\r\n    \r\n    componentDidMount(){\r\n        this.observer.observe();\r\n    }\r\n\r\n    render(){\r\n        var width  =  this.props.activeFrameIsOpen?(this.props.orientation === \"landscape\"? \"16.667vw\" : \"16.5vw\") :(this.props.orientation === \"landscape\"? \"33vw\" : \"50vw\") ;\r\n        var height = this.props.activeFrameIsOpen? (this.props.orientation === \"landscape\"? \"20vh\" : \"15.667vh\"):(this.props.orientation === \"landscape\"? \"50vh\" : \"33vh\" ) ;\r\n        var grid =  this.props.activeFrameIsOpen? (this.props.orientation === \"landscape\"? \"col-2 no-padding\" : \"col-2 no-padding\"):(this.props.orientation === \"landscape\"? \"col-4 no-padding\" : \"col-6 no-padding\");\r\n        return(\r\n            \r\n            <div  className =  {grid}>\r\n                <div  onClick = {this.handleClick} className = \" lozad hvr-sweep-to-right d-flex justify-content-center align-items-end gallery-frame\"\r\n                      data-background-image= {process.env.PUBLIC_URL + this.props.item.image} style = {{\r\n                                    width:  width,\r\n                                    height:  height, \r\n                                    backgroundColor: \"white\", \r\n                                    // backgroundImage:  `url(${this.props.item.image})`,\r\n                                }}>\r\n                          {this.props.activeFrameIsOpen? \r\n                          null  :         \r\n                        <h1  className = \" w-100  justify-content-center align-items-center \">\r\n                            {this.props.item.title}\r\n                        </h1>     \r\n                          }  \r\n                </div>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\nclass ActiveFrame extends React.Component{\r\n\r\nrender(){\r\n    var width  =   (this.props.orientation === \"landscape\"?\"50vw\":\"100vw\");\r\n    var height  =  (this.props.orientation === \"landscape\"?\"80vh\":\"50vh \"); \r\n    var   grid  =  this.props.orientation ===\"landscape\"?\"col-6 no-padding\":\"col-12 no-padding\";\r\n    return(\r\n                <div className = {grid}>                   \r\n                    <div  className = \" hvr-sweep-to-right  d-flex justify-content-center align-items-end gallery-frame\"\r\n                        style = {{\r\n                                    width:  width,\r\n                                    height:  height, \r\n                                    backgroundColor: \"white\", \r\n                                    backgroundImage:  `url(${process.env.PUBLIC_URL + this.props.item.image})`,\r\n                                }}>\r\n                       \r\n                        <h1  className = \" w-100  justify-content-center align-items-center \">\r\n                        {this.props.item.title}\r\n                        </h1>           \r\n                    </div>\r\n                </div>        \r\n            )\r\n        }\r\n}\r\n\r\nclass ActiveFrameDesciption extends React.Component{\r\n\r\n    render(){\r\n     //   var width  =   (this.props.orientation === \"landscape\"?\"50vw\":\"100vw\");\r\n       // var height  =  (this.props.orientation === \"landscape\"?\"100vh\":\"50vh \"); \r\n        var   grid  =  this.props.orientation ===\"landscape\"?\"col-6 \":\"col-12 no-padding \";\r\n        return(\r\n            <div className  = {`${grid}`} >\r\n                <div className = \"description-card\">\r\n                    <p \r\n                    style = {{color:\"black\",\r\n                            padding:\"3px\",\r\n                            height:\"30vh\"\r\n                     }}>\r\n                        {this.props.item.description}\r\n                    </p>\r\n                    </div>\r\n                    <div className=\"brk-btn\" onClick = {this.props.returnView}>\r\n                        back\r\n                    </div> \r\n                    \r\n            </div>\r\n            \r\n        )\r\n\r\n    }\r\n\r\n}\r\nclass Slide extends React.Component { \r\n   \r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            orientation : \"\", \r\n            activeItem : [false,false,false,false,false,false]  ,\r\n                  \r\n        }\r\n        this.handleOrientation = this.handleOrientation.bind(this);\r\n        this.handleFocus = this.handleFocus.bind(this);    \r\n        this.returnView = this.returnView.bind(this);\r\n        this.checkActiveFrame = this.checkActiveFrame.bind(this);\r\n    }\r\n\r\n\r\n    returnView(){\r\n        this.setState({activeItem:[false,false,false,false,false,false]})\r\n    }\r\n\r\n    handleFocus(id){\r\n        var newArray = [] ; \r\n        for (var i = 0 ; i< this.props.content.length ; i++) {\r\n\r\n            newArray.push(i === id ? true : false)\r\n        }\r\n        this.setState({activeItem:newArray})\r\n    }\r\n\r\n    handleOrientation(){\r\n        if (window.innerWidth >= window.innerHeight) {\r\n            this.setState({orientation:\"landscape\"})  \r\n        }\r\n         else  {\r\n             this.setState({orientation:\"portrait\"})\r\n        }\r\n    }\r\n\r\n    checkActiveFrame(array){\r\n        \r\n        if (array.findIndex((arg)=>arg===true)===-1){\r\n            return false\r\n        }\r\n        else\r\n        //return index of activeFrame\r\n        \r\n        return array.findIndex((arg)=>arg===true)\r\n       \r\n    }\r\n    componentWillMount(){\r\n        this.handleOrientation()\r\n    }\r\n    componentDidMount(){\r\n        \r\n        window.addEventListener(\"resize\",this.handleOrientation)\r\n\r\n    }\r\n\r\n\r\n  \r\n\r\nrender(){\r\n  \r\n    return(\r\n        <React.Fragment>\r\n            <div id = \"gallery\" className = \"gallery-page container-fluid\">\r\n                <h1 className = {this.checkActiveFrame(this.state.activeItem)===false? \"mt-2 gallery-header\":\"d-none\"}>Gallery</h1>\r\n                <div className = \" row d-flex justify-content-center\"> \r\n                    {this.checkActiveFrame(this.state.activeItem) ===false?null: <ActiveFrame returnView = {this.returnView} orientation = {this.state.orientation} item={this.props.content[this.checkActiveFrame(this.state.activeItem)]}/>}          \r\n                    {this.checkActiveFrame(this.state.activeItem) ===false?null: \r\n                    <ActiveFrameDesciption returnView = {this.returnView} orientation = {this.state.orientation} item={this.props.content[this.checkActiveFrame(this.state.activeItem)]}></ActiveFrameDesciption>}          \r\n                    \r\n              \r\n                    {this.props.content.map((item,index)=>{\r\n                        return (\r\n                        <Frame  key ={index} item = {item} orientation = {this.state.orientation} handleFocus = {this.handleFocus} activeFrameIsOpen ={this.checkActiveFrame(this.state.activeItem)===false?false:true} isActive={this.state.activeItem[index]} />                                             \r\n                                )\r\n                    })\r\n                    }\r\n                    \r\n                 \r\n                </div>\r\n            </div>\r\n            \r\n        </React.Fragment>\r\n        \r\n    )\r\n\r\n}\r\n}\r\n\r\nexport default Slide\r\n","import React, { Component } from 'react';\r\nimport { CarouselItem} from 'reactstrap';\r\n\r\n\r\nimport AwesomeSlider from 'react-awesome-slider';\r\nimport AwsSliderStyles from 'react-awesome-slider/src/styles';\r\n\r\nimport {GALLERY} from '../shared/galleryContent'\r\nimport Slide from './slideComponent'\r\n\r\nconst items = [\r\n  {\r\n    src: 'data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22800%22%20height%3D%22400%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20800%20400%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_15ba800aa1d%20text%20%7B%20fill%3A%23555%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A40pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_15ba800aa1d%22%3E%3Crect%20width%3D%22800%22%20height%3D%22400%22%20fill%3D%22%23777%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22285.921875%22%20y%3D%22218.3%22%3EFirst%20slide%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E',\r\n    altText: 'Slide 1',\r\n    caption: 'Slide 1'\r\n  },\r\n  {\r\n    src: 'data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22800%22%20height%3D%22400%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20800%20400%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_15ba800aa20%20text%20%7B%20fill%3A%23444%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A40pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_15ba800aa20%22%3E%3Crect%20width%3D%22800%22%20height%3D%22400%22%20fill%3D%22%23666%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22247.3203125%22%20y%3D%22218.3%22%3ESecond%20slide%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E',\r\n    altText: 'Slide 2',\r\n    caption: 'Slide 2'\r\n  },\r\n  {\r\n    src: 'data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22800%22%20height%3D%22400%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20800%20400%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_15ba800aa21%20text%20%7B%20fill%3A%23333%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A40pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_15ba800aa21%22%3E%3Crect%20width%3D%22800%22%20height%3D%22400%22%20fill%3D%22%23555%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22277%22%20y%3D%22218.3%22%3EThird%20slide%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E',\r\n    altText: 'Slide 3',\r\n    caption: 'Slide 3'\r\n  }\r\n];\r\n\r\nclass Slider extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n         content : GALLERY,\r\n    }\r\n  }\r\n\r\n\r\n  render(){\r\n    return(\r\n      <div id = \"gallery\">\r\n        <AwesomeSlider  cssModule={AwsSliderStyles}>\r\n        <div>\r\n        <Slide content = {this.state.content}/>\r\n        </div>\r\n        <div>\r\n        <Slide content = {this.state.content}/>\r\n        </div>\r\n        <div>\r\n        <Slide content = {this.state.content}/>\r\n        </div>\r\n      </AwesomeSlider>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n  \r\n\r\nclass Gallery extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n         content : GALLERY,\r\n          \r\n    };\r\n  }\r\n\r\n\r\n  onExiting() {\r\n    this.animating = true;\r\n  }\r\n\r\n  onExited() {\r\n    this.animating = false;\r\n  }\r\n\r\n \r\n  render() {\r\n  \r\n     items.map((item,index) => {\r\n      return (\r\n        <CarouselItem\r\n          onExiting={this.onExiting}\r\n          onExited={this.onExited}\r\n          key={item.src}>\r\n            <Slide   content = {this.state.content} key = {index}/>\r\n        </CarouselItem>\r\n      );\r\n    });\r\n\r\n    return (\r\n\r\n      this.props.isUserInteractingWithBlog\r\n      ?\r\n      null\r\n      :\r\n        <React.Fragment>\r\n          <Slider/> \r\n          <div className = \"row d-flex justify-content-center\">\r\n              <div className = \"down gallery\" onClick ={(e) =>this.props.downBtnScroll(e,'blog')}/>\r\n          </div>\r\n        </React.Fragment>\r\n   \r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Gallery;","import gql from 'graphql-tag';\r\nimport client from \"./ApolloClient\"\r\n\r\nconst PRODUCTS_QUERY =gql`query{\r\n    posts {\r\n        nodes {\r\n          title\r\n          content\r\n          date\r\n          featuredImage{\r\n            mediaItemUrl\r\n          }\r\n          comments {\r\n            nodes {\r\n              content\r\n              date\r\n              author {\r\n                ... on CommentAuthor {\r\n                  name\r\n                }\r\n              }\r\n              \r\n            }\r\n          }\r\n        }\r\n      }\r\n}`;\r\n\r\n\r\nconst getPosts = async () => {\r\n    const {loading,error,data} = await client.query({query:PRODUCTS_QUERY});\r\n    // {loading?console.log(\"loading...\"): console.log(\"loaded successfully\")}\r\n    // {error?console.log(\"sorry there seems to be an error\"):console.log(\"No errors retrieving data!\")}\r\n    // {data  ? console.log(data.products.nodes )  : console.log(\"there doesn't seem to be any products here\")}\r\n    return (data.posts.nodes )\r\n\r\n    };\r\n\r\n    export default getPosts\r\n","import React , {useState} from 'react';\r\nimport getPosts from '../courier/getPosts'\r\nimport renderHTML from 'react-render-html'; \r\nimport '../styles/blogComponent.scss'; \r\nimport tree from '../shared/icons/tree.png';\r\n\r\n\r\n\r\nconst BlogLandingPage = (props) =>{\r\n    return(\r\n    \r\n        <div  id = \"blog\" className = \"page blog-landing-page\">\r\n            <h1 className= \"page-title\">\r\n                Blog\r\n            </h1>\r\n\r\n            <div className= \"blog-card\" onClick = {props.toggleBlog}>\r\n\r\n                    <div className= \"row\">\r\n                    <div className = \"col-12\">\r\n                    <p>\r\n                        Come follow all the exciting updates and check out my latest projects!<br/>\r\n                    </p>\r\n                    </div>\r\n\r\n                    <div className = \"col-12 d-flex justify-content-end\">\r\n                        \r\n                    <p>TAKE ME THERE  </p>  <div className = \"right-arrow\"></div>\r\n\r\n                    </div>\r\n                    </div>\r\n\r\n            </div>\r\n\r\n            <div className= \"row d-flex justify-content-center\">\r\n            <div className = \"down blog\" onClick = {e => props.downBtnScroll(e,'store')} >\r\n            </div>\r\n            </div>\r\n\r\n        </div> \r\n    );\r\n}\r\n\r\nconst BlogHeader = (props) =>{\r\n    return(\r\n        <React.Fragment>\r\n                <div className = \"blog-header\">\r\n                <div className = \"container-fluid\">\r\n                    <div className = \"row p-3\">\r\n                    <img  className = \"cedarcreek-logo\" src = {tree} width = '48px'/>\r\n                    <h1 className = \"pl-3 \">Cedarcreek Blog</h1>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className = \"row blog-nav d-flex justify-content-around text-center\">\r\n                    <div className = \"blog-nav-item\">\r\n                        Woodworking\r\n                    </div>\r\n                    <div className = \"blog-nav-item\">\r\n                        Latest Projects\r\n                    </div>\r\n                    <div className = \"blog-nav-item\">\r\n                        Events\r\n                    </div>\r\n                    <div className = \"blog-nav-item\">\r\n                        Life\r\n                    </div>\r\n                </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nconst BlogHomePage =(props) =>{\r\n    const posts = props.posts;\r\n    const grid = props.orientation === \"portrait\" ? \"col-6\"  : \"col-4\" ; \r\n\r\n    return(\r\n        <React.Fragment>\r\n             \r\n                <p> blog-content goes here</p>\r\n                <div onClick = {props.toggleBlog} className=\"brk-btn\">\r\n                     back\r\n                </div>  \r\n\r\n            \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nconst BlogPosts = (props)=>{\r\n\r\n    const posts = props.posts;\r\n    const grid = props.orientation === \"portrait\" ? \"col-6\"  : \"col-4\" ; \r\n    \r\n\r\n        return(\r\n            <React.Fragment>\r\n\r\n           \r\n                <div className = \"container\">\r\n                    <div className =\"row\">\r\n                        {\r\n                            posts.map( (post,index) => {\r\n\r\n                                return( \r\n\r\n                                    <div className= {`${grid} mt-4 d-flex  align-items-center post-col`} key = {index} >\r\n\r\n                                      <div className = \"featured-post\">\r\n                                      {index % 2 === 1? <h3> {post.title} </h3> :null}\r\n                                        {index % 2 ===1? <figcaption>{new Date(post.date).toLocaleDateString()}</figcaption> :null }                                        \r\n                                        <div className = \"blog-featured-img-tile\">\r\n                                            <img width = \"100%\" src = {post.featuredImage.mediaItemUrl}\r\n                                            onClick = {e => props.togglePost(e,index)}\r\n                                            />\r\n                                        </div>\r\n                                        {index % 2 === 0? <h3> {post.title} </h3> :null}\r\n                                        {index % 2 ===0? <figcaption>{new Date(post.date).toLocaleDateString()}</figcaption> :null }  \r\n\r\n                                        </div>\r\n                                    </div>   \r\n                             \r\n                                );\r\n                            })\r\n\r\n                        }\r\n                        \r\n                    </div>\r\n                </div>\r\n                <div onClick = {props.toggleBlog} className=\"brk-btn\">\r\n                     back\r\n                </div>   \r\n           \r\n\r\n            </React.Fragment>\r\n        )\r\n\r\n}\r\n\r\nconst ViewPost = (props) =>{\r\n    console.log(props.post)\r\n    const comments = props.post.comments.nodes\r\n    return(\r\n        <React.Fragment>\r\n\r\n            <div className = \"post-content container\">\r\n                <h1> {props.post.title} </h1>\r\n                {renderHTML(props.post.content)}\r\n\r\n                {\r\n                comments.length > 0 && comments.content !== null  \r\n                ? \r\n                <React.Fragment>\r\n                    <div className = \"\">{new Date(comments[0].date).toLocaleDateString()}</div>\r\n                    <div className = \"comment-text\"> { renderHTML(comments[0].content) } </div> \r\n\r\n                </React.Fragment>\r\n                \r\n                : \r\n                null \r\n                }\r\n\r\n               \r\n            </div>\r\n            <div onClick = {props.togglePost} className=\"brk-btn\">\r\n                back\r\n            </div> \r\n\r\n        </React.Fragment>\r\n           \r\n    )\r\n}\r\n\r\nclass BlogContent extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            viewPost:false,\r\n            activePost:[]\r\n        }\r\n\r\n        this.togglePost = this.togglePost.bind(this); \r\n\r\n    }\r\n\r\n    togglePost(e,key){\r\n        if (this.state.viewPost){\r\n            this.setState({viewPost:false})\r\n            this.setState({activePost: [] })\r\n        } else {\r\n        this.setState({viewPost:true})\r\n        this.setState({activePost : this.props.posts[key]})\r\n        }\r\n        \r\n    }\r\n\r\n\r\n\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div className = \"page blog-page\"\r\n                style = {this.props.viewBlog? {marginTop: '0px'} : {marginTop: '30px'}}\r\n                >\r\n                    <BlogHeader/>\r\n\r\n                \r\n                { \r\n                    this.state.viewPost\r\n                    ?\r\n                    <ViewPost\r\n                    post = {this.state.activePost}\r\n                    togglePost = {this.togglePost}\r\n                    />\r\n                    :\r\n                    <BlogPosts\r\n                    orientation = {this.props.orientation}\r\n                    posts = {this.props.posts}\r\n                    togglePost = {this.togglePost}\r\n                    toggleBlog = {this.props.toggleBlog}\r\n                    />\r\n                    \r\n                    // <BlogHomePage\r\n                    // orientation = {this.props.orientation}\r\n                    // posts = {this.props.posts}\r\n                    // togglePost = {this.togglePost}\r\n                    // toggleBlog = {this.props.toggleBlog}\r\n                    // />\r\n                }\r\n            </div>          \r\n        );\r\n    }\r\n}\r\n\r\n\r\nclass Blog extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            posts:[],\r\n             loading: true , \r\n           \r\n\r\n        }\r\n        \r\n    }\r\n\r\n    componentDidMount(){\r\n            getPosts()\r\n            .then( result => {\r\n                console.log(result)\r\n                this.setState({posts:result})\r\n                this.setState({ loading:false});\r\n            })\r\n    }\r\n \r\n\r\n    render(){\r\n\r\n        const viewBlog = this.props.isUserInteractingWithBlog ;\r\n        // console.log(viewBlog)\r\n\r\n        return(\r\n            <React.Fragment>\r\n                \r\n                   {\r\n                        viewBlog \r\n                        ?\r\n                        this.state.loading \r\n                        ? \r\n                        <div className = \"loading-container\">\r\n                            <div className =\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\r\n                        </div>\r\n                        : \r\n                        <BlogContent\r\n                        viewBlog = {viewBlog}\r\n                        toggleBlog = {this.props.toggleBlog}\r\n                        orientation = {this.props.orientation}                       \r\n                        posts = {this.state.posts}\r\n                        />\r\n                        :\r\n                        <BlogLandingPage\r\n                        downBtnScroll = {this.props.downBtnScroll}\r\n                        toggleBlog = {this.props.toggleBlog}\r\n                        />\r\n                   }\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n  \r\n}\r\n\r\nexport default Blog","import React from 'react'; \r\nimport Home from './homeComponent';\r\nimport About from './aboutComponent';\r\nimport Store from './storeComponent';\r\nimport Contact from './contactComponent';\r\nimport CheckOut from './checkoutComponent';\r\nimport Gallery from './galleryComponent'\r\nimport {GALLERY} from '../shared/galleryContent';\r\nimport Blog from './blogComponent';\r\nimport '../styles/gutenberg.scss';\r\nimport '../styles/wc_gutenberg_blocks.scss'\r\n\r\n\r\nimport  '../styles/downButtons.scss'\r\n\r\nclass Main extends React.Component{     \r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isUserInteractingWithGalery: false,\r\n            isUserInteractingWithStore : false , \r\n            isUserInteractingWithBlog : false , \r\n            viewCustom: false,\r\n            viewCatalog:false ,\r\n            storeRef : Object,\r\n            windowHeight : window.innerHeight,\r\n            content : GALLERY,\r\n            currentIndex: 1,\r\n            inventory : [] , \r\n            postionOfStore : [] ,\r\n            orientation :  \"portrait\",\r\n            view:false\r\n        }\r\n        this.homePage=React.createRef(this.homePage);\r\n        this.storePage = React.createRef(this.storePage);\r\n        this.handleOrientation = this.handleOrientation.bind(this);\r\n        this.handleView = this.handleView.bind(this); \r\n        this.revertView = this.revertView.bind(this);\r\n        this.handleScrollableFocus = this.handleScrollableFocus.bind(this);\r\n        this.toggleBlog = this.toggleBlog.bind(this); \r\n        this.downBtnScroll = this.downBtnScroll.bind(this);\r\n      \r\n        }\r\n\r\n        handleOrientation(){\r\n\r\n            this.setState({windowHeight:window.innerHeight})\r\n\r\n            if (window.innerWidth >= window.innerHeight) {\r\n                this.setState({orientation:\"landscape\"}) \r\n                 \r\n            }\r\n             else  {\r\n                 this.setState({orientation:\"portrait\"})\r\n            }\r\n        }\r\n\r\n        downBtnScroll(e,param){\r\n\r\n            e.preventDefault();\r\n             \r\n            switch(param){\r\n            case 'blog':\r\n                    const blog= document.getElementById('blog');\r\n                    blog.scrollIntoView({behavior:'smooth'}) ;  \r\n            \r\n            break\r\n            case 'store':\r\n                    const store= document.getElementById('store');\r\n                    store.scrollIntoView({behavior:'smooth'}) ;\r\n            break\r\n            case 'about':\r\n                    const about = document.getElementById('about');\r\n                    about.scrollIntoView({behavior:'smooth'});\r\n            break\r\n            case 'home':\r\n                    const home = document.getElementById('home-page');\r\n                    home.scrollIntoView({behavior:'smooth'});\r\n            break\r\n            case 'checkout':\r\n                    const checkout = document.getElementById('checkout');\r\n                    checkout.scrollIntoView({behavior:'smooth'});\r\n            break\r\n            case 'gallery':\r\n                    const gallery = document.getElementById('gallery');\r\n                    gallery.scrollIntoView({behavior:'smooth'});\r\n            break\r\n            case 'contact':\r\n                    const contact = document.getElementById('contact');\r\n                    contact.scrollIntoView({behavior:'smooth'})\r\n            break \r\n            }\r\n           \r\n\r\n\r\n        }\r\n\r\n        handleScrollableFocus(){\r\n           \r\n            // window.scrollTo(0, window.innerHeight*3 + 90,)\r\n            var storePage = document.getElementById('store');\r\n\r\n             \r\n            storePage.scrollIntoView({behavior:'smooth'});\r\n           \r\n        }\r\n\r\n        handleView(e,param){\r\n\r\n            this.handleScrollableFocus();\r\n           \r\n            param === \"custom\"\r\n            ?\r\n            this.setState({viewCustom:true , viewCatalog:false , isUserInteractingWithStore: true})\r\n            :\r\n            this.setState({viewCatalog:true , viewCustom:false , isUserInteractingWithStore: true})\r\n             \r\n        }\r\n\r\n        revertView(){\r\n    \r\n            this.setState({viewCatalog:false});\r\n            this.setState({viewCustom:false});\r\n            this.setState({isUserInteractingWithStore:false})\r\n            \r\n        }\r\n\r\n         toggleBlog(){\r\n            this.setState({isUserInteractingWithBlog: !this.state.isUserInteractingWithBlog});\r\n        }\r\n \r\n    \r\n\r\n        componentDidMount(){\r\n            window.addEventListener(\"resize\",this.handleOrientation)       \r\n\r\n            \r\n            \r\n        }\r\n\r\n      \r\nrender(){\r\n\r\n    return(\r\n        <React.Fragment>\r\n \r\n        <Home \r\n        windowHeight = {this.state.windowHeight}\r\n        handleView = {this.handleView}\r\n        isUserInteractingWithStore = {this.state.isUserInteractingWithStore}\r\n        isUserInteractingWithBlog = {this.state.isUserInteractingWithBlog}\r\n        downBtnScroll = {this.downBtnScroll}\r\n        />\r\n    \r\n        <About\r\n        isUserInteractingWithStore = {this.state.isUserInteractingWithStore}\r\n        isUserInteractingWithBlog = {this.state.isUserInteractingWithBlog}\r\n        downBtnScroll = {this.downBtnScroll}\r\n        />\r\n        \r\n        <Gallery \r\n        className = \"gallery-page\"\r\n        isUserInteractingWithStore = {this.state.isUserInteractingWithStore} \r\n        isUserInteractingWithGalery = {this.state.isUserInteractingWithGalery} \r\n        isUserInteractingWithBlog = {this.state.isUserInteractingWithBlog}\r\n        downBtnScroll = {this.downBtnScroll}\r\n        />\r\n\r\n        <Blog\r\n        orientation = {this.state.orientation}\r\n        isUserInteractingWithBlog = {this.state.isUserInteractingWithBlog}\r\n        toggleBlog = {this.toggleBlog}\r\n        downBtnScroll = {this.downBtnScroll}\r\n        \r\n        />\r\n       \r\n       <Store \r\n        ref = {this.storePage}\r\n        isUserInteractingWithStore = {this.state.isUserInteractingWithStore} \r\n\r\n        handleScrollableFocus = {this.handleScrollableFocus}\r\n\r\n        viewCatalog = {this.state.viewCatalog}\r\n        viewCustom = {this.state.viewCustom}\r\n\r\n        handleView = {this.handleView}\r\n        revertView = {this.revertView}\r\n\r\n        isUserInteractingWithBlog = {this.state.isUserInteractingWithBlog}\r\n        downBtnScroll = {this.downBtnScroll}\r\n        />\r\n \r\n        <Contact\r\n        isUserInteractingWithStore = {this.state.isUserInteractingWithStore}\r\n        isUserInteractingWithBlog = {this.state.isUserInteractingWithBlog}\r\n        downBtnScroll = {this.downBtnScroll}\r\n        />\r\n        \r\n        <CheckOut\r\n        isUserInteractingWithBlog = {this.state.isUserInteractingWithBlog}\r\n        />\r\n\r\n        </React.Fragment>\r\n    )}\r\n}\r\nexport default Main","\r\nimport React, {useContext} from 'react'\r\nimport {AppContext} from \"./context/AppContext\"\r\nimport Main from './mainComponent'\r\n\r\nconst StripeWrapperComponent = () => {\r\n  \r\n    const [cart,setCart] = useContext(AppContext) ; \r\n \r\n    return (\r\n      <Main/>\r\n    )\r\n  };\r\n\r\n  export default StripeWrapperComponent\r\n  ","import React from 'react';\n\nimport './App.css';\nimport './buttons.scss';\nimport './styles/AppBehavior.scss'\nimport {AppProvider} from './components/context/AppContext';\nimport StripeWrapperComponent from './components/stripeWrapperComponent'\nimport {StripeProvider} from 'react-stripe-elements';\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <StripeProvider apiKey=\"pk_test_7LEEquBX9joVxcuVTXsZW0RN002UkUsXj3\">\n        <AppProvider>\n            <StripeWrapperComponent/>\n        </AppProvider>\n      </StripeProvider>\n    \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/**\r\n * Extracts and returns float value from a string.\r\n *\r\n * @param {string} string String\r\n * @return {any}\r\n */\r\nexport const getFloatVal = ( string ) => {\r\n\r\n\t// let floatValue = string.match( /[+-]?\\d+(\\.\\d+)?/g )[0];\r\n\tlet floatValue = string.match( /[+-]?\\d+(\\.\\d+)?/g ).join('');\r\n\t\r\n\treturn ( null !== floatValue ) ? parseFloat( parseFloat( floatValue ).toFixed( 2 ) ) : '';\r\n\r\n};\r\n\r\n/**\r\n * Add first product.\r\n *\r\n * @param {Object} product Product\r\n * @return {{totalProductsCount: number, totalProductsPrice: any, products: Array}}\r\n */\r\nexport const addFirstProduct = ( product ) => {\r\n\r\n\tlet productPrice = getFloatVal( product.price );\r\n\r\n\tlet stockQuantity = product.stockQuantity;\r\n\r\n\tlet newCart = {\r\n\t\tproducts: [],\r\n\t\ttotalProductsCount: 1,\r\n\t\ttotalProductsPrice: productPrice,\r\n\t\t// test \r\n\t\t// stockQuantity : product.stockQuantity \r\n\t\t// end test\r\n\t};\r\n\r\n\tconst newProduct = createNewProduct( product, productPrice, 1 , stockQuantity );\r\n\tnewCart.products.push( newProduct );\r\n\r\n\tlocalStorage.setItem( 'cedarcreekforestry-cart', JSON.stringify( newCart ) );\r\n\r\n\treturn newCart;\r\n};\r\n\r\n/**\r\n * Create a new product object.\r\n *\r\n * @param {Object} product Product\r\n * @param {Integer} productPrice Product Price\r\n * @param {Integer} qty Quantity\r\n * @param {Integer} stockQuantity available stock\r\n * @return {{image: *, productId: *, totalPrice: number, price: *, qty: *, name: *}}\r\n */\r\nexport const createNewProduct = ( product, productPrice, qty ,stockQuantity ) => {\r\n\r\n\treturn  {\r\n\t\tproductId: product.productId,\r\n\t\timage: product.image,\r\n\t\tname: product.name,\r\n\t\tprice: productPrice,\r\n\t\tqty,\r\n\t\ttotalPrice: parseFloat( ( productPrice * qty ).toFixed( 2 ) ),\r\n\t\tstockQuantity: stockQuantity\r\n\t};\r\n\r\n};\r\n\r\n/**\r\n * Updates the existing cart with new item.\r\n *\r\n * @param {Object} existingCart Existing Cart.\r\n * @param {Object} product Product.\r\n * @param {Integer} qtyToBeAdded Quantity.\r\n * @param {Integer} newQty New Qty to be updated.\r\n * @return {{totalProductsCount: *, totalProductsPrice: *, products: *}}\r\n */\r\nexport const updateCart = ( existingCart, product, qtyToBeAdded, newQty = false  ) => {\r\n\r\n\tconst updatedProducts = getUpdatedProducts( existingCart.products , product, qtyToBeAdded, newQty );\r\n\r\n\tconst addPrice = (total, item) => {\r\n\t\ttotal.totalPrice += item.totalPrice;\r\n\t\ttotal.qty += item.qty;\r\n\r\n\t\treturn total;\r\n\t};\r\n\r\n\t// Loop through the updated product array and add the totalPrice of each item to get the totalPrice\r\n\tlet total = updatedProducts.reduce( addPrice, { totalPrice: 0, qty: 0 } );\r\n\r\n\tconst updatedCart = {\r\n\t\tproducts: updatedProducts,\r\n\t\ttotalProductsCount: parseInt( total.qty ),\r\n\t\ttotalProductsPrice: parseFloat( total.totalPrice )\r\n\t};\r\n\r\n\tlocalStorage.setItem( 'cedarcreekforestry-cart', JSON.stringify( updatedCart ) );\r\n\r\n\treturn updatedCart;\r\n};\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Get updated products array\r\n * Update the product if it exists else,\r\n * add the new product to existing cart,\r\n *\r\n * @param {Object} existingProductsInCart Existing product in cart\r\n * @param {Object} product Product\r\n * @param {Integer} qtyToBeAdded Quantity\r\n * @param {Integer} newQty New qty of the product (optional)\r\n * @return {*[]}\r\n */\r\nexport const getUpdatedProducts = ( existingProductsInCart, product, qtyToBeAdded, newQty = false ) => {\r\n\r\n\t// Check if the product already exits in the cart.\r\n\tconst productExitsIndex = isProductInCart( existingProductsInCart, product.productId );\r\n\r\n\t// If product exits ( index of that product found in the array ), update the product quantity and totalPrice\r\n\tif ( -1 < productExitsIndex ) {\r\n\t\tlet updatedProducts = existingProductsInCart;\r\n\t\tlet updatedProduct = updatedProducts[ productExitsIndex ];\r\n\r\n\t\t// If have new qty of the product available, set that else add the qtyToBeAdded\r\n\t\tupdatedProduct.qty = ( newQty ) ? parseInt( newQty ) : parseInt( updatedProduct.qty + qtyToBeAdded );\r\n\t\tupdatedProduct.totalPrice = parseFloat( ( updatedProduct.price * updatedProduct.qty ).toFixed( 2 ) );\r\n\r\n\t\treturn  updatedProducts;\r\n\t} else {\r\n\r\n\t\t// If product not found push the new product to the existing product array.\r\n\t\tlet stockQuantity = product.stockQuantity\r\n\t\tlet productPrice = getFloatVal( product.price );\r\n\t\tconst newProduct = createNewProduct( product, productPrice, qtyToBeAdded , stockQuantity);\r\n\t\texistingProductsInCart.push( newProduct );\r\n\r\n\t\treturn existingProductsInCart;\r\n\t}\r\n};\r\n\r\n/**\r\n * Returns index of the product if it exists.\r\n *\r\n * @param {Object} existingProductsInCart Existing Products.\r\n * @param {Integer} productId Product id.\r\n * @return {number | *} Index Returns -1 if product does not exist in the array, index number otherwise\r\n */\r\nconst isProductInCart = ( existingProductsInCart, productId ) => {\r\n\r\n\tconst returnItemThatExits = ( item, index ) => {\r\n\t\tif ( productId === item.productId ) {\r\n\t\t\treturn item;\r\n\t\t}\r\n\t};\r\n\r\n\t// This new array will only contain the product which is matched.\r\n\tconst newArray = existingProductsInCart.filter( returnItemThatExits );\r\n\r\n\treturn existingProductsInCart.indexOf( newArray[0] );\r\n};\r\n\r\n/**\r\n * Remove Item from the cart.\r\n *\r\n * @param {Integer} productId Product Id.\r\n * @return {any | string} Updated cart\r\n */\r\nexport const removeItemFromCart = (e,productId ) => {\r\n\t e.preventDefault();\r\n\r\n\tlet existingCart = localStorage.getItem( 'cedarcreekforestry-cart' );\r\n\texistingCart = JSON.parse( existingCart );\r\n\r\n\r\n\t// If there is only one item in the cart, delete the cart.\r\n\t// if ( 1 === existingCart.products.length ) {\r\n\tif ( 1 === existingCart.totalProductsCount ) {\r\n\r\n\t\tlocalStorage.removeItem( 'cedarcreekforestry-cart' );\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n\t// Check if the product already exits in the cart.\r\n\tconst productExitsIndex = isProductInCart( existingCart.products, productId );\r\n\t \r\n\r\n\t// If product to be removed exits\r\n\tif ( -1 < productExitsIndex ) {\r\n\r\n\t\tconst productTobeRemoved = existingCart.products[ productExitsIndex ];\r\n\t\t// const qtyToBeRemovedFromTotal = productTobeRemoved.qty;\r\n\t\tconst qtyToBeRemovedFromTotal =  1;\r\n\t\t// const priceToBeDeductedFromTotal = productTobeRemoved.totalPrice;\r\n\t\tconst priceToBeDeductedFromTotal = productTobeRemoved.price;\r\n\r\n\t\t// Remove that product from the array and update the total price and total quantity of the cart\r\n\t\tlet updatedCart = existingCart;\r\n\t\t// updatedCart.products.splice( productExitsIndex, 1 );\r\n\t\t// console.log( existingCart.products[productExitsIndex].qty)\r\n\r\n\t\t// if there is only one product left of the specified item but there are\r\n\t\t//  still other products in the cart remove only the specified item from the cart\r\n\r\n\t\tif (existingCart.products[productExitsIndex].qty === 1){\r\n\r\n\t\t \tupdatedCart.products.splice( productExitsIndex, 1 );\r\n\t\t}\r\n\t\telse { \r\n\t\t\tupdatedCart.products[productExitsIndex].qty = existingCart.products[productExitsIndex].qty -  1;\r\n\t\t}\r\n\t\tupdatedCart.totalProductsCount = updatedCart.totalProductsCount - qtyToBeRemovedFromTotal;\r\n\t\tupdatedCart.totalProductsPrice = updatedCart.totalProductsPrice - priceToBeDeductedFromTotal;\r\n\t\tlocalStorage.setItem( 'cedarcreekforestry-cart', JSON.stringify( updatedCart ) );\r\n\t\treturn updatedCart;\r\n\r\n\t} else {\r\n\t\treturn existingCart;\r\n\t}\r\n};","\r\nimport React,{useContext,useState} from 'react';\r\nimport {Popover,Button, PopoverBody} from 'reactstrap';\r\nimport {addFirstProduct, updateCart} from './functions'\r\nimport {AppContext} from '../context/AppContext';\r\nimport cartIcon from '../../shared/icons/cart.png'\r\n\r\nconst CartSuccess = (props) => {\r\n\r\n    // console.log(props.cart)\r\n\r\n    const itemsInCartNumber = props.cart ? props.cart.totalProductsCount : 0 ;\r\n\r\n    // pass in css classes to show cart icon if user clicks add-to-cart-btn and action is allowable\r\n\r\n    const show = props.animate? 'slide-in-out' : ' ';\r\n\r\n    const shake = props.animate ? 'attention-seeker' : ' '; \r\n\r\n    return(\r\n        <div className = 'row d-flex justify-content-center'>\r\n            <div className = {`${show} cart-sucess`}> \r\n                <div className = 'col-3 mt-4 pb-2'>\r\n                <span className = {`${shake} cart-badge`} >{itemsInCartNumber}</span>\r\n                    <img src = {cartIcon} width = '100%'/>\r\n                 \r\n                </div>\r\n            </div>        \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst ViewCartButton = ()=>{\r\n\r\n    var checkoutPage = document.getElementById('checkout'); \r\n\r\n    const scrollToView = ()=> checkoutPage.scrollIntoView({behavior: \"smooth\"});\r\n\r\n    \r\n    if (process.browser) {\r\n        let existingCart = localStorage.getItem('cedarcreekforestry-cart');\r\n        if (existingCart) {\r\n\r\n            return(\r\n                <div className = \"text-center cart-action-btn view-cart-btn\" onClick={scrollToView}>\r\n                     VIEWCART\r\n                </div>\r\n           \r\n            );\r\n\r\n        }\r\n        return null\r\n    \r\n    }\r\n    return null\r\n\r\n}\r\n\r\n \r\n\r\n\r\nconst AddToCartButton = (props) => {\r\n\r\n    const { product } = props; \r\n    const [cart,setCart] = useContext(AppContext);   \r\n\r\n    const [message,setMessage] = useState(\"Sorry, item either out of stock or the requested amount exceeds inventory\") ; \r\n    const [pop,setPop] = useState(false);\r\n\r\n\r\n    const toggle = (e,onBlur) => {\r\n\r\n        // prevent pop up from shwowing on every click\r\n        e.preventDefault()\r\n        // hack to enable trigger = 'focus'\r\n        if (onBlur){\r\n            setPop(false)\r\n        }\r\n        else\r\n        setPop(!pop)\r\n         \r\n        // Determin the message (reason action can not be completed) \r\n\r\n            if (checkIfAvailable(product)[1] === 'OUT_OF_STOCK' ){\r\n    \r\n                setMessage('Sorry, item out of stock ')\r\n            }\r\n            else \r\n            setMessage(`Sorry, only ${product.stockQuantity === null ? 1: product.stockQuantity } available`)     \r\n    \r\n        \r\n    }\r\n\r\n    const [animate, setAnimate] = useState(false);\r\n\r\n    const toggleAnimate = () => {\r\n\r\n        setAnimate(false);\r\n        \r\n    }\r\n\r\n\r\n    const indexOfProductInCart = (product) => {\r\n\r\n         if (cart){\r\n            const index = cart.products.map(product => product.productId).indexOf(product.productId)\r\n   \r\n            return(index)\r\n\r\n         }\r\n         else return -1\r\n\r\n    }\r\n\r\n    const checkIfAvailable = (product) => {\r\n        \r\n\r\n        // check if item is in stock\r\n        if(product.stockStatus === 'IN_STOCK'){\r\n\r\n            let existingCart = localStorage.getItem('cedarcreekforestry-cart');\r\n            existingCart = JSON.parse(existingCart);\r\n\r\n            // check if cart exists\r\n            if (existingCart){\r\n\r\n                // check if item already in cart\r\n                if ( indexOfProductInCart(product) > -1) {\r\n\r\n                    // check if amount requested is available\r\n                    if (existingCart.products[indexOfProductInCart(product)].qty === product.stockQuantity || product.stockQuantity === null){\r\n                            \r\n                        // if quantity of product in cart is equal to the stock quantity \r\n                        // or if stockQuantity is null (ie Sterling forgot to add quantity)\r\n                        // disallow adding it to cart then\r\n                        \r\n                         \r\n                         return [false,'MAX']\r\n                         \r\n\r\n                    }\r\n                    // item in cart but requested amount is available\r\n                    else return [true,'allow']\r\n\r\n\r\n                }\r\n                // item not in cart but item in stock\r\n                // allow user to add item to cart\r\n                else return [true,'allow']\r\n\r\n            }\r\n            //  if cart does not exist but item in stock\r\n            //  allow user to add item\r\n            else return [true,'allow']\r\n\r\n\r\n        }\r\n        // item not in stock\r\n        else {\r\n\r\n            return [false,'OUT_OF_STOCK']\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    const handleFinishTypes = () => {\r\n\r\n        console.log('handleAddToCartClick was successfully rerouted to handleFinishTypes with props')\r\n\r\n        //  @TODOS \r\n        //  funtion will take dimensions of a cut as props\r\n        //  and calculate surface area of object. \r\n        //  This will be then used to calculate qtyToBeAdded \r\n        //  parameter in setCart function\r\n\r\n        \r\n\r\n        let existingCart = localStorage.getItem('cedarcreekforestry-cart');\r\n\r\n        if(existingCart){\r\n\r\n\r\n            let surfaceArea = props.surfaceArea ; \r\n            existingCart = JSON.parse(existingCart);\r\n\r\n            const qtyToBeAdded = surfaceArea;\r\n                        \r\n            const updatedCart = updateCart(existingCart,product,qtyToBeAdded) ; \r\n\r\n            setAnimate(true)\r\n            setTimeout(toggleAnimate,2100);\r\n\r\n            setCart( updatedCart)\r\n\r\n        }\r\n\r\n        else console.log('there is not an item selected to apply a custom finish to')\r\n        \r\n        \r\n        \r\n        \r\n    }\r\n \r\n\r\n    const handleAddToCartClick = () => {\r\n\r\n         \r\n        \r\n        // check if process is in broweser\r\n        if (process.browser) {\r\n            \r\n            // check if item is in stock\r\n            if(product.stockStatus === 'IN_STOCK'){                \r\n\r\n                // if cart has item(s) already, then update the exisiting cart\r\n                let existingCart = localStorage.getItem('cedarcreekforestry-cart');\r\n                if (existingCart) {\r\n\r\n                    existingCart = JSON.parse(existingCart);\r\n\r\n                    // check if product is a finish type\r\n                    // fuck this for right now and try to convince sterling \r\n                    // its too much a pain in the ass \r\n\r\n                    // if (product.productCategories.nodes[0].name === 'Finishes'){\r\n\r\n                    //     handleFinishTypes()\r\n\r\n                    // }\r\n\r\n\r\n                    // check if product already in cart\r\n                    if ( indexOfProductInCart(product) > -1) {\r\n\r\n                        \r\n                        \r\n                        // check if amount requested is available \r\n                        if (existingCart.products[indexOfProductInCart(product)].qty === product.stockQuantity || product.stockQuantity === null){\r\n                            \r\n                            // if quantity of product in cart is equal to the stock quantity \r\n                            // or if stockQuantity is null (ie Sterling forgot to add quantity)\r\n                            // then disallow adding it to cart\r\n                             \r\n                                   \r\n                            return null \r\n\r\n\r\n                        }\r\n                        else{\r\n\r\n                            // otherwise quantity of product in cart is less then stock quantity\r\n                            // allow adding it to cart\r\n                            \r\n                            const qtyToBeAdded = 1;\r\n                    \r\n                            const updatedCart = updateCart(existingCart,product,qtyToBeAdded) ;\r\n\r\n                            indexOfProductInCart(product)\r\n                            \r\n                            \r\n                            setAnimate(true)\r\n                            setTimeout(toggleAnimate,2100);\r\n\r\n                            setCart( updatedCart)\r\n                    \r\n                        }\r\n                        \r\n                    } \r\n                    else{\r\n\r\n                        // cart exists and item in stock but item not yet in cart\r\n                        // add item to cart\r\n                            \r\n                        const qtyToBeAdded = 1;\r\n                        \r\n                        const updatedCart = updateCart(existingCart,product,qtyToBeAdded) ; \r\n\r\n                        setAnimate(true)\r\n                        setTimeout(toggleAnimate,2100);\r\n\r\n                        setCart( updatedCart)\r\n\r\n                    }\r\n                    \r\n                } \r\n\r\n                // like i said before this is too much a pain in the ass\r\n\r\n                // else if (product.productCategories.nodes[0].name === 'Finishes'){\r\n                //     // this acutally shouldn't be allowed because the user needs to first \r\n                //     // select a slab from a series to apply the finish to\r\n                //     handleFinishTypes()\r\n                // }\r\n                else{\r\n\r\n                    // if no item in the cart, then create an empty array and add item. \r\n                     \r\n                    const newCart = addFirstProduct(product);\r\n\r\n                    setAnimate(true);\r\n                    setTimeout(toggleAnimate,2100);\r\n                    setCart( newCart);\r\n\r\n                }                \r\n        \r\n            } \r\n            else{\r\n                \r\n                // if item not in stock disallow adding it to cart \r\n                // then toggle popover notifying user they have reached\r\n                // they have reached the limit available to purchase\r\n                \r\n               \r\n                 \r\n                return null\r\n                    \r\n                \r\n            }\r\n            \r\n\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    \r\n    return(\r\n        <React.Fragment>\r\n\r\n             <div className = \"row d-flex justify-content-center\">\r\n             <div role = 'button' id = 'add-to-cart' className = \"text-center cart-action-btn add-to-cart-btn\" onClick={ checkIfAvailable(product)[0] ?  handleAddToCartClick : e=>toggle(e) }> ADD TO CART</div>\r\n             </div>\r\n             <div className = \"row d-flex justify-content-center\">\r\n            <ViewCartButton />\r\n             </div>\r\n\r\n             <Popover placement = \"bottom\" isOpen = {pop} trigger = 'click legacy' target = 'add-to-cart' toggle = {e=>toggle(e,'focus')}>\r\n                 <PopoverBody>\r\n                 <p> {message} </p>\r\n                 </PopoverBody>\r\n             </Popover>\r\n\r\n             <CartSuccess  animate = {animate} cart = {cart} />\r\n        \r\n        </React.Fragment>\r\n       \r\n    )\r\n}\r\n\r\nexport default AddToCartButton"],"sourceRoot":""}